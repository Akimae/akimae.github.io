{"title":"45-BOM简介和navigator.userAgent&History&Location","slug":"JavaScript/45-BOM简介和navigator.userAgent&History&Location","date":"2023-02-16T12:33:22.270Z","updated":"2023-02-16T12:35:16.787Z","comments":true,"path":"api/articles/JavaScript/45-BOM简介和navigator.userAgent&History&Location.json","photos":[],"link":"","excerpt":null,"covers":["http://img.smyhvae.com/20180425_1656.png","http://img.smyhvae.com/20191127_1903.png","http://img.smyhvae.com/20191127_1918.png","http://img.smyhvae.com/20180201_2146.png"],"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"常见概念\"><a href=\"#常见概念\" class=\"headerlink\" title=\"常见概念\"></a>常见概念</h2><h3 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h3><p>JavaScript基础分为三个部分：</p>\n<ul>\n<li><p>ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。</p>\n</li>\n<li><p><strong>DOM</strong>：文档对象模型（Document object Model），操作<strong>网页上的元素</strong>的API。比如让盒子移动、变色、轮播图等。</p>\n</li>\n<li><p><strong>BOM</strong>：浏览器对象模型（Browser Object Model），操作<strong>浏览器部分功能</strong>的API。比如让浏览器自动滚动。</p>\n</li>\n</ul>\n<h3 id=\"常见的-BOM-对象\"><a href=\"#常见的-BOM-对象\" class=\"headerlink\" title=\"常见的 BOM 对象\"></a>常见的 BOM 对象</h3><p>BOM可以让我们通过JS来操作浏览器。BOM中为我们提供了一些对象，来完成对浏览器相关的操作。</p>\n<p>常见的 BOM对象有：</p>\n<ul>\n<li><p>Window：代表整个浏览器的窗口，同时 window 也是网页中的全局对象。</p>\n</li>\n<li><p>Navigator：代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p>\n</li>\n<li><p>Location：代表当前浏览器的地址栏信息，通过 Location 可以获取地址栏信息，或者操作浏览器跳转页面。</p>\n</li>\n<li><p>History：代表浏览器的历史记录，通过该对象可以操作浏览器的历史记录。由于隐私原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后翻页，而且该操作只在当次访问时有效。</p>\n</li>\n<li><p>Screen：代表用户的屏幕信息，通过该对象可以获取用户的显示器的相关信息。</p>\n</li>\n</ul>\n<p>备注：这些 BOM 对象都是作为 window 对象的属性保存的，可以通过window对象来使用，也可以直接使用。比如说，我可以使用 <code>window.location.href</code>，也可以直接使用 <code>location.href</code>，二者是等价的。</p>\n<p>备注2：不要忘了，之前学习过的<code>document</code>也是在<code>window</code>中保存的。</p>\n<p>这篇文章，我们先来讲一下 几个常见的 BOM 对象。</p>\n<h2 id=\"Navigator-和-navigator-userAgent\"><a href=\"#Navigator-和-navigator-userAgent\" class=\"headerlink\" title=\"Navigator 和 navigator.userAgent\"></a>Navigator 和 <code>navigator.userAgent</code></h2><p><code>Navigator</code>代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p>\n<p>由于历史原因，Navigator对象中的大部分属性都已经不能帮助我们识别浏览器了。</p>\n<p><strong>一般我们只会使用<code>navigator.userAgent</code>来获取浏览器的信息</strong>。</p>\n<p>userAgent 的值是一个字符串，简称 <strong>UA</strong>，这个字符串中包含了用来描述浏览器信息的内容，不同的浏览器会有不同的userAgent。</p>\n<p><strong>代码举例</strong>：（获取当前浏览器的UA）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> ua = navigator.<span class=\"property\">userAgent</span>; <span class=\"comment\">// 获取当前浏览器的 userAgent</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 当前浏览器的UA是：&#x27;</span> + ua);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (<span class=\"regexp\">/firefox/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是火狐浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/chrome/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是Chrome浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/msie/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是IE浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;ActiveXObject&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是 IE11 浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在电脑上模拟移动端浏览器\"><a href=\"#在电脑上模拟移动端浏览器\" class=\"headerlink\" title=\"在电脑上模拟移动端浏览器\"></a>在电脑上模拟移动端浏览器</h3><p>不同浏览器（包括微信内置的浏览器）的 userAgent 信息，是不一样的，我们可以根据 <code>navigator.userAgent</code>属性来获取。</p>\n<p>比如说，我们在电脑浏览器上，按F12，然后在控制台输入<code>navigator.userAgent</code>，如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180425_1656.png\"></p>\n<p>上图显示，MacOS上的Chrome浏览器的 userAgent 是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36&quot;</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以在电脑浏览器的控制台里可以添加很多设备，通过这种方式，可以模拟移动端浏览器的场景，非常有用，请务必掌握。操作如下：</p>\n<p>（1）需要点击 edit，手动添加：</p>\n<p><img src=\"http://img.smyhvae.com/20191127_1903.png\"></p>\n<p>（2）添加时，根据 User agent 来识别不同的浏览器：</p>\n<p><img src=\"http://img.smyhvae.com/20191127_1918.png\"></p>\n<h3 id=\"不同浏览器的-userAgent\"><a href=\"#不同浏览器的-userAgent\" class=\"headerlink\" title=\"不同浏览器的 userAgent\"></a>不同浏览器的 userAgent</h3><p>iOS 版微信浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13E233 MicroMessenger/6.3.15 NetType/WIFI Language/zh_CN</span><br></pre></td></tr></table></figure>\n\n<p>Android 版微信浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0.1; GT-I9502 Build/LRX22C; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 MicroMessenger/6.1.0.78_r1129455.543 NetType/WIFI</span><br></pre></td></tr></table></figure>\n\n<p>iOS 版本QQ浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_2 like Mac OS X) AppleWebKit/604.4.7 (KHTML, like Gecko) Mobile/15C202 QQ/7.3.5.473 V1_IPH_SQ_7.3.5_1_APP_A Pixel/1125 Core/UIWebView Device/Apple(iPhone X) NetType/WIFI QBWebViewType/1</span><br></pre></td></tr></table></figure>\n\n<p>Android 版 QQ浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 4.4.2; PE-TL20 Build/HuaweiPE-TL20; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.132 MQQBrowser/6.2 TBS/043807 Mobile Safari/537.36 V1_AND_SQ_7.3.2_762_YYB_D QQ/7.3.2.3350 NetType/WIFI WebP/0.3.0 Pixel/1080</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>参考链接</strong>：</p>\n<ul>\n<li><p><a href=\"https://blog.csdn.net/taambernk520/article/details/80801574\">微信、QQ在Android和iOS的UserAgent</a></p>\n</li>\n<li><p><a href=\"http://www.cnblogs.com/7z7chn/p/5370352.html\">判断微信内置浏览器的UserAgent</a></p>\n</li>\n<li><p><a href=\"https://gist.github.com/wjp2013/fff34c063cf0cf227d65\">微信内置浏览器UserAgent的判断</a></p>\n</li>\n</ul>\n<h2 id=\"History-对象\"><a href=\"#History-对象\" class=\"headerlink\" title=\"History 对象\"></a>History 对象</h2><p>History对象：可以用来操作浏览器的向前或向后翻页。</p>\n<h3 id=\"History对象的属性\"><a href=\"#History对象的属性\" class=\"headerlink\" title=\"History对象的属性\"></a>History对象的属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"property\">length</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：获取浏览器历史列表中的 url 数量。注意，只是统计当次的数量，如果浏览器关了，数量会重置为1。</p>\n<h3 id=\"History对象的方法\"><a href=\"#History对象的方法\" class=\"headerlink\" title=\"History对象的方法\"></a>History对象的方法</h3><p><strong>方法1</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.back();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来回退到上一个页面，作用和浏览器的「回退按钮」一样。</p>\n<p><strong>方法2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">forward</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来跳转下一个页面，作用和浏览器的「前进按钮」一样。</p>\n<p><strong>方法3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">go</span>( int n);  <span class=\"comment\">// 需要整数作为参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 代码举例：</span></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">1</span> ); <span class=\"comment\">// 向前跳转一个页面，相当于 history.forward()</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">2</span> ); <span class=\"comment\">// 表示向前跳转两个页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">0</span> ); <span class=\"comment\">// 刷新当前页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( -<span class=\"number\">1</span> ); <span class=\"comment\">// 向后跳转一个页面，相当于 history.back()</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( -<span class=\"number\">2</span> ); <span class=\"comment\">// 向后跳转两个页面</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解释：向前&#x2F;向后跳转 n 个页面。</p>\n<p>备注：浏览器的前进按钮、后退按钮，在这个位置：</p>\n<p><img src=\"http://img.smyhvae.com/20180201_2146.png\"></p>\n<h2 id=\"Location-对象\"><a href=\"#Location-对象\" class=\"headerlink\" title=\"Location 对象\"></a>Location 对象</h2><p>Location 对象：封装了浏览器地址栏的 URL 信息。</p>\n<p>下面介绍一些常见的属性和方法。</p>\n<h3 id=\"Location-对象的属性：location-href\"><a href=\"#Location-对象的属性：location-href\" class=\"headerlink\" title=\"Location 对象的属性：location.href\"></a>Location 对象的属性：location.href</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.href</span><br><span class=\"line\"></span><br><span class=\"line\">location.href = &#x27;https://xxx&#x27;;</span><br></pre></td></tr></table></figure>\n\n<p>解释：获取当前页面的 url 路径（或者设置 url 路径）；或者跳转到指定路径。</p>\n<p>举例1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(location.<span class=\"property\">href</span>); <span class=\"comment\">// 获取当前页面的url 路径</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>举例2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"property\">href</span> = <span class=\"string\">&#x27;www.baidu.com&#x27;</span>; <span class=\"comment\">// 跳转到指定的页面链接。通俗理解就是：跳转到其他的页面</span></span><br></pre></td></tr></table></figure>\n\n<p>从上方的<strong>举例2</strong>中可以看出：如果直接将<code>location.href</code>属性修改为一个绝对路径（或相对路径），则页面会自动跳转到该路径，并生成相应的历史记录。</p>\n<p><strong>window.location.href 是异步代码：</strong></p>\n<p>需要特别注意的是：window.location.href的赋值，并不会中断Javascript的执行立即进行页面跳转。因为 LocationChange 行为在浏览器内核中是起定时器异步执行的。异步执行的好处是为了防止代码调用过深，导致栈溢出，另外也是为了防止递归进入加载逻辑，导致状态紊乱，保证导航请求是顺序执行的。</p>\n<p>解决办法：在 location.href 的下一行，加上 return 即可。意思是，执行了 location.href 之后，就不要再继续往下执行了。</p>\n<p>参考链接：<a href=\"https://juejin.cn/post/6844904040518647815\">location.href的异步机制</a></p>\n<h3 id=\"Location-对象的方法\"><a href=\"#Location-对象的方法\" class=\"headerlink\" title=\"Location 对象的方法\"></a>Location 对象的方法</h3><p><strong>方法1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">assign</span>(str);</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来跳转到其他的页面，作用和直接修改<code>location.href</code>一样。</p>\n<p><strong>方法2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">reload</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用于重新加载当前页面，作用和刷新按钮一样。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">reload</span>(); <span class=\"comment\">// 重新加载当前页面。</span></span><br><span class=\"line\">location.<span class=\"title function_\">reload</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// 在方法的参数中传递一个true，则会强制清空缓存刷新页面。</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>方法3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">location.<span class=\"title function_\">replace</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：使用一个新的页面替换当前页面，调用完毕也会跳转页面。但不会生成历史记录，不能使用「后退按钮」后退。</p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":46,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":46,"path":"api/tags/JavaScript.json"}]}