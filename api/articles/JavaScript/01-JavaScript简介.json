{"title":"01-JavaScript简介","slug":"JavaScript/01-JavaScript简介","date":"2023-02-15T12:06:59.436Z","updated":"2023-02-15T12:10:20.552Z","comments":true,"path":"api/articles/JavaScript/01-JavaScript简介.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h2 id=\"JavaScript-历史和发展\"><a href=\"#JavaScript-历史和发展\" class=\"headerlink\" title=\"JavaScript 历史和发展\"></a>JavaScript 历史和发展</h2><p>Web 前端有三层：</p>\n<ul>\n<li><p>HTML：从语义的角度，描述页面<strong>结构</strong></p>\n</li>\n<li><p>CSS：从审美的角度，描述<strong>样式</strong>（美化页面）</p>\n</li>\n<li><p>JavaScript（简称 JS）：从交互的角度，描述<strong>行为</strong>（实现业务逻辑和页面控制）</p>\n</li>\n</ul>\n<h2 id=\"JavaScript-介绍\"><a href=\"#JavaScript-介绍\" class=\"headerlink\" title=\"JavaScript 介绍\"></a>JavaScript 介绍</h2><h3 id=\"JavaScript-入门易学性\"><a href=\"#JavaScript-入门易学性\" class=\"headerlink\" title=\"JavaScript 入门易学性\"></a>JavaScript 入门易学性</h3><ul>\n<li><p>JavaScript 对初学者比较友好。可以使用任何文本编辑工具编写，只需要浏览器就可以执行程序。</p>\n</li>\n<li><p>JavaScript 是有界面效果的（相比之下，C 语言只有白底黑字）。</p>\n</li>\n<li><p>JavaScript 的入门较简单（进阶不易）。比如，JS 是<strong>弱变量类型</strong>的语言，变量只需要用 var&#x2F;let&#x2F;const 来声明。而 Java 中变量的声明，要根据变量的类型来定义。</p>\n</li>\n</ul>\n<p>Java 中需要这样定义变量：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a;</span><br><span class=\"line\"><span class=\"type\">float</span> a;</span><br><span class=\"line\"><span class=\"type\">double</span> a;</span><br><span class=\"line\">String a;</span><br><span class=\"line\"><span class=\"type\">boolean</span> a;</span><br></pre></td></tr></table></figure>\n\n<p>而 JS 中，只需要用一种方式来定义：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5 写法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6 写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript-既是前端语言，又是后端语言\"><a href=\"#JavaScript-既是前端语言，又是后端语言\" class=\"headerlink\" title=\"JavaScript 既是前端语言，又是后端语言\"></a>JavaScript 既是前端语言，又是后端语言</h3><p>当 JavaScript 运行在用户的终端网页，而不是运行在服务器上的时候，我们称之为“<strong>前端语言</strong>”。前端语言是服务于页面的显示和交互，不能直接操作数据库。</p>\n<p><strong>后端语言</strong>是运行在服务器上的，比如 Java、C++、PHP 等等，这些语言都能够操作数据库（对数据库进行“增删改查”），并在后台执行各种任务。</p>\n<p>另外，Node.js 是用 JavaScript 开发的，我们也可以用 Node.js 技术进行服务器端编程。</p>\n<h3 id=\"JavaScript-的组成\"><a href=\"#JavaScript-的组成\" class=\"headerlink\" title=\"JavaScript 的组成\"></a>JavaScript 的组成</h3><p>JavaScript 基础分为三个部分：</p>\n<ul>\n<li><p><strong>ECMAScript</strong>：JavaScript 的<strong>语法标准</strong>。包括变量、表达式、运算符、函数、if 语句、for 语句等。</p>\n</li>\n<li><p><strong>DOM</strong>：Document Object Model（文档对象模型），JS 操作<strong>页面上的元素</strong>（标签）的 API。比如让盒子移动、变色、改变大小、轮播图等等。</p>\n</li>\n<li><p><strong>BOM</strong>：Browser Object Model（浏览器对象模型），JS 操作<strong>浏览器部分功能</strong>的 API。通过 BOM 可以操作浏览器窗口，比如弹框、控制浏览器跳转、获取浏览器分辨率等等。</p>\n</li>\n</ul>\n<p>通俗理解就是：ECMAScript 是 JS 的语法；DOM 和 BOM 是浏览器运行环境为 JS 提供的 API。</p>\n<h2 id=\"JavaScript-的特点\"><a href=\"#JavaScript-的特点\" class=\"headerlink\" title=\"JavaScript 的特点\"></a>JavaScript 的特点</h2><h3 id=\"特点-1：解释型语言\"><a href=\"#特点-1：解释型语言\" class=\"headerlink\" title=\"特点 1：解释型语言\"></a>特点 1：解释型语言</h3><p>JavaScript 简称 JS，是前端开发的一门脚本语言（解释型语言）。</p>\n<p><strong>解释型语言</strong>的意思是：程序执行之前，不需要事先被翻译为机器码；而是在运行时，边翻译边执行（翻译一行，执行一行）。关于解释型语言的详细介绍，上一篇文章有介绍。</p>\n<p>为什么 JS 是解释型语言呢？这和浏览器的工作原理有关。浏览器中有一个专门的“JS 解析器”可以让 JS 边解析边执行。</p>\n<p>由于少了事先编译这一步骤，所以解释型语言开发起来尤为方便，但是解释型语言运行较慢也是它的劣势。不过解释型语言中使用了 JIT 技术，使得运行速度得以改善。</p>\n<h3 id=\"特点-2：单线程\"><a href=\"#特点-2：单线程\" class=\"headerlink\" title=\"特点 2：单线程\"></a>特点 2：单线程</h3><h3 id=\"特点-3：ECMAScript-标准\"><a href=\"#特点-3：ECMAScript-标准\" class=\"headerlink\" title=\"特点 3：ECMAScript 标准\"></a>特点 3：ECMAScript 标准</h3><p>ECMAScript 是一种由 ECMA 国际（前身为欧洲计算机制造商协会,英文名称是 European Computer Manufacturers Association）制定和发布的脚本语言规范。</p>\n<p>JavaScript 是由公司开发而成的，问题是不便于其他的公司拓展和使用。所以欧洲的这个 ECMA 的组织，牵头制定 JavaScript 的标准，取名为 ECMAScript。</p>\n<p>简单来说，<strong>ECMAScript 不是一门语言，而是一个标准</strong>。ECMAScript 规定了 JS 的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套 JS 语法工业标准。</p>\n<p>ECMAScript 在 2015 年 6 月，发布了 ECMAScript 6 版本（ES6），语言的能力更强，包含了很多新特性），但也要考虑它的浏览器兼容性问题。</p>\n<p>ECMA 赋予了 JavaScript 新的能力和活力。</p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/tags/JavaScript.json"}]}