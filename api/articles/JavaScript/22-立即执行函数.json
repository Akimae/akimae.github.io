{"title":"22-立即执行函数","slug":"JavaScript/22-立即执行函数","date":"2023-02-16T07:30:25.432Z","updated":"2023-02-16T07:48:47.871Z","comments":true,"path":"api/articles/JavaScript/22-立即执行函数.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"立即执行函数-IIFE\"><a href=\"#立即执行函数-IIFE\" class=\"headerlink\" title=\"立即执行函数 IIFE\"></a>立即执行函数 IIFE</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>函数定义完，就立即被调用，这种函数叫做立即执行函数。英文是 IIFE（Immediately-invoked function expression），立即调用函数表达式。</p>\n<h3 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h3><p>语法1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>语法2：（立即执行函数也可以传参）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">&#125;)(a, b);</span><br></pre></td></tr></table></figure>\n\n<p>语法解释：</p>\n<ul>\n<li><code>function()&#123;&#125;</code>这种写法，需要再加一对圆括号，变成&#96;&#96;</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>现有匿名函数如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;a = &quot;</span> + a);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;b = &quot;</span> + b);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>立即执行函数如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;a = &quot;</span> + a);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;b = &quot;</span> + b);</span><br><span class=\"line\">&#125;)(<span class=\"number\">123</span>, <span class=\"number\">456</span>);</span><br></pre></td></tr></table></figure>\n\n<p>立即执行函数往往只会执行一次。为什么呢？因为没有变量保存它，执行完了之后，就找不到它了。</p>\n<h2 id=\"IIFE的作用\"><a href=\"#IIFE的作用\" class=\"headerlink\" title=\"IIFE的作用\"></a>IIFE的作用</h2><h3 id=\"为变量赋值\"><a href=\"#为变量赋值\" class=\"headerlink\" title=\"为变量赋值\"></a>为变量赋值</h3><p>当给变量赋值需要一些较复杂的计算时，使用IIFE显得语法更紧凑。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sex = <span class=\"string\">&#x27;male&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> nickName = (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (sex == <span class=\"string\">&#x27;male&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;帅哥&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;美女&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nickName);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将全局变量变为局部变量\"><a href=\"#将全局变量变为局部变量\" class=\"headerlink\" title=\"将全局变量变为局部变量\"></a>将全局变量变为局部变量</h3><p>现有如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  arr.<span class=\"title function_\">push</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>](); <span class=\"comment\">// 打印5</span></span><br></pre></td></tr></table></figure>\n\n<p>我们知道，上方代码中，i 是全局变量，所有函数共享内存中的同一个变量i。</p>\n<p>现在，我们通过立即执行函数进行改造：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> (<span class=\"params\">i</span>) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>](); <span class=\"comment\">// 打印2</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，i作为传递给了IIFE的形参，让 i 得以成为 IIFE 的局部变量；并让 IIFE 并形成了闭包（<code>arr[2]()</code>打印出了IIFE内部变量 i 的值，说明形成了闭包）。</p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":46,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":46,"path":"api/tags/JavaScript.json"}]}