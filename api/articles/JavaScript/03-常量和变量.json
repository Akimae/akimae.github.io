{"title":"03-常量和变量","slug":"JavaScript/03-常量和变量","date":"2023-02-15T12:06:59.441Z","updated":"2023-02-15T12:14:45.665Z","comments":true,"path":"api/articles/JavaScript/03-常量和变量.json","photos":[],"link":"","excerpt":null,"covers":["http://img.smyhvae.com/20180116_2020.png","http://img.smyhvae.com/20180116_2040.png"],"content":"<h2 id=\"常量（字面量）：数字和字符串\"><a href=\"#常量（字面量）：数字和字符串\" class=\"headerlink\" title=\"常量（字面量）：数字和字符串\"></a>常量（字面量）：数字和字符串</h2><p><strong>常量</strong>也称之为“字面量”，是固定值，不可改变。看见什么，它就是什么。</p>\n<p>常量有下面这几种：</p>\n<ul>\n<li>数字常量（数值常量）</li>\n<li>字符串常量</li>\n<li>布尔常量</li>\n<li>自定义常量</li>\n</ul>\n<h3 id=\"数字常量\"><a href=\"#数字常量\" class=\"headerlink\" title=\"数字常量\"></a>数字常量</h3><p>数字常量非常简单，直接写数字就行，不需要任何其他的符号。既可以是整数，也可以是浮点数。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不需要加引号</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">996</span>); <span class=\"comment\">// 996是整数</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">3.14</span>); <span class=\"comment\">// 3.14是浮点数（即带了小数）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串常量\"><a href=\"#字符串常量\" class=\"headerlink\" title=\"字符串常量\"></a>字符串常量</h3><p>字符串常量就是用单引号或双引号括起来的内容。可以是单词、句子等，一定要加引号。在JS中，只要是单引号或双引号括起来的内容，都是字符串常量。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;996&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;千古壹号，永不止步&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>温馨提示：996 是数字，’996’是字符串。</p>\n<h3 id=\"布尔常量\"><a href=\"#布尔常量\" class=\"headerlink\" title=\"布尔常量\"></a>布尔常量</h3><p>布尔常量就是表达<strong>真</strong>或者<strong>假</strong>，在JS中用 true 和 false 来表达。</p>\n<p>布尔字面量举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;如果为真，就走这里面的代码);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义常量：const\"><a href=\"#自定义常量：const\" class=\"headerlink\" title=\"自定义常量：const\"></a>自定义常量：const</h3><p>自定义常量是ES6中新增的语法。它的语法格式是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> 常量名称 = 常量取值;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;壹号&#x27;</span>; <span class=\"comment\">// 定义常量name，它的取值是 壹号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name =  &#x27;许嵩&#x27;; // 既然 name 是常量，所以这一行是错误的写法，因为 name 无法被修改为其他的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 打印结果：壹号</span></span><br></pre></td></tr></table></figure>\n\n<p>后续ES6的时候，会深入学习 const 用法。</p>\n<h3 id=\"开发技巧：用变量定义常量\"><a href=\"#开发技巧：用变量定义常量\" class=\"headerlink\" title=\"开发技巧：用变量定义常量\"></a>开发技巧：用变量定义常量</h3><p>我们一般不会直接使用常量，否则会导致代码冗余、不易维护。如果多个地方要用到同一个常量，那就建议事先定义一个变量，用来保存这个常量；然后在需要的地方去引用这个变量就行了。另外，当我们学习了ES6中的 const 之后，还可以使用自定义常量达到目的。</p>\n<h2 id=\"变量的概念\"><a href=\"#变量的概念\" class=\"headerlink\" title=\"变量的概念\"></a>变量的概念</h2><p><strong>变量</strong>表示可以被修改的数据。我们通过「变量名」获取数据，甚至修改数据。</p>\n<p>变量还可以用来保存常量。</p>\n<p><strong>本质</strong>：变量是程序在内存中申请的一块用来存放数据的空间。打个比方，超市里的储物格就是变量, 在不同的时间段里, 储物格中存储的数据可以不一样。</p>\n<h2 id=\"变量的定义和赋值\"><a href=\"#变量的定义和赋值\" class=\"headerlink\" title=\"变量的定义和赋值\"></a>变量的定义和赋值</h2><p>定义变量是在告诉浏览器，我们需要一块内存空间，相当于生成超市里的储物格。</p>\n<p>给变量赋值就是往相当于往储物格里塞东西，可能今天上午塞的是面包🍞，下午就换成了蛋糕🍰。</p>\n<h3 id=\"变量的定义-x2F-声明（ES5）\"><a href=\"#变量的定义-x2F-声明（ES5）\" class=\"headerlink\" title=\"变量的定义&#x2F;声明（ES5）\"></a>变量的定义&#x2F;声明（ES5）</h3><p>在 ES6 语法之前，统一使用<code>var</code>关键字来声明一个变量。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name; <span class=\"comment\">// 定义一个名为 name 的变量。name是变量名。</span></span><br></pre></td></tr></table></figure>\n\n<p>var 是英语“variable”变量的缩写。后面要加一个空格，空格后面的东西就是“变量名”。</p>\n<p>PS：<strong>在 JavaScript 中，永远都是用 var 来定义变量</strong>（在 ES6 之前），这和 C、Java 等语言不同。</p>\n<h3 id=\"变量的定义-x2F-声明（ES6）\"><a href=\"#变量的定义-x2F-声明（ES6）\" class=\"headerlink\" title=\"变量的定义&#x2F;声明（ES6）\"></a>变量的定义&#x2F;声明（ES6）</h3><p>在 ES6 语法及之后的版本里，可以使用 <code>const</code>、<code>let</code>关键字来定义一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name; <span class=\"comment\">// 定义一个常量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> age; <span class=\"comment\">// 定义一个变量</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你想定义一个常量，就用 const；如果你想定义一个变量，就用 let。</p>\n<h3 id=\"变量的赋值\"><a href=\"#变量的赋值\" class=\"headerlink\" title=\"变量的赋值\"></a>变量的赋值</h3><p>变量赋值举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>综合起来，变量的定义、赋值、取值，举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义：声明一个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num;</span><br><span class=\"line\"><span class=\"comment\">// 赋值：往变量中存储数据</span></span><br><span class=\"line\">num = <span class=\"number\">996</span>;</span><br><span class=\"line\"><span class=\"comment\">// 取值：从变量中获取存储的数据</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"合并写法\"><a href=\"#合并写法\" class=\"headerlink\" title=\"合并写法\"></a>合并写法</h3><p>变量的定义和赋值，还可以合并写在一起，是实战中常用的写法。举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>; <span class=\"comment\">// ES5语法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = hello; <span class=\"comment\">// ES6 语法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = world; <span class=\"comment\">// ES6 语法</span></span><br><span class=\"line\">c = qianguyihao; <span class=\"comment\">// 修改 变量 C 的值</span></span><br></pre></td></tr></table></figure>\n\n<p>定义一个变量并赋值， 我们称之为<strong>变量的初始化</strong>。如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2020.png\"></p>\n<ul>\n<li>定义变量：var 就是一个<strong>关键字</strong>，用来定义变量。所谓关键字，就是有特殊功能的单词。</li>\n<li>变量赋值：等号表示<strong>赋值</strong>，将等号右边的值，赋给左边的变量。</li>\n<li>变量名：我们可以给变量起个名字。</li>\n</ul>\n<h3 id=\"变量的初始化【重要】\"><a href=\"#变量的初始化【重要】\" class=\"headerlink\" title=\"变量的初始化【重要】\"></a>变量的初始化【重要】</h3><p>第一次给变量赋值，称之为“<strong>变量的初始化</strong>”，这个概念非常重要。第二次给这个变量赋值（也就是修改这个变量的值）就不叫初始化了。</p>\n<p>一个变量如果没有进行初始化（只声明，不赋值），那么这个变量中存储的值是<code>undefined</code>，这个知识点必须知道。</p>\n<p>变量的初始化，可以有两种形式，如下。</p>\n<p>形式1：先定义，在赋值。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name;</span><br><span class=\"line\">name = <span class=\"string\">&#x27;qianguyhihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>形式2：在定义的同时进行初始化。也就是上一小段讲的“合并写法”。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量定义和赋值的补充\"><a href=\"#变量定义和赋值的补充\" class=\"headerlink\" title=\"变量定义和赋值的补充\"></a>变量定义和赋值的补充</h2><h3 id=\"修改变量的值\"><a href=\"#修改变量的值\" class=\"headerlink\" title=\"修改变量的值\"></a>修改变量的值</h3><p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\">a = <span class=\"number\">110</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：110。因为 110 覆盖了 100</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"同时定义多个变量\"><a href=\"#同时定义多个变量\" class=\"headerlink\" title=\"同时定义多个变量\"></a>同时定义多个变量</h3><p>1、同时定义多个变量时，只需要写一个 var， 多个变量名之间用英文逗号隔开。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时定义多个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br></pre></td></tr></table></figure>\n\n<p>2、定义多个变量的同时，分别进行初始化。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义多个变量的同时，进行初始化</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1 = <span class=\"number\">10</span>, num2 = <span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果多个变量初始化的初始化值都是一样的，则可以这样简写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br><span class=\"line\">num1 = num2 = <span class=\"number\">10</span>; <span class=\"comment\">// 重点在这一行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1); <span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的写法和下面的写法是有区别的：（注意看打印结果）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"变量之间可以相互赋值\"><a href=\"#变量之间可以相互赋值\" class=\"headerlink\" title=\"变量之间可以相互赋值\"></a>变量之间可以相互赋值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\">num2 = num1; <span class=\"comment\">// 把 num1 的值拷贝一份，赋值给 num2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量如果重复定义\"><a href=\"#变量如果重复定义\" class=\"headerlink\" title=\"变量如果重复定义\"></a>变量如果重复定义</h3><p>在ES5中，如果用 var 定义了同名变量，那么，后定义的变量，会覆盖先定义的变量。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;许嵩&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;千古壹号&#x27;</span>; <span class=\"comment\">// 这里会重新定义一个新的变量 name</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 千古壹号</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量声明和赋值的特殊情况\"><a href=\"#变量声明和赋值的特殊情况\" class=\"headerlink\" title=\"变量声明和赋值的特殊情况\"></a>变量声明和赋值的特殊情况</h3><p>变量建议先声明，再使用；否则可能会产生意想不到的结果。具体如下。</p>\n<p><strong>写法 1</strong>、先声明，再赋值：（正常）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：100</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 2</strong>、不声明，直接赋值：（正常）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：100</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 3</strong>、只声明，不赋值：（注意，打印 undefined）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 4</strong>、不声明，不赋值，直接使用：（会报错）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 会报错</span></span><br></pre></td></tr></table></figure>\n\n<p>控制台会报错：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2040.png\"></p>\n<p><strong>补充</strong>：写法 1 和写法 2 虽然都正常，但这两种写法是有区别的，等以后学习了「变量提升」的概念就明白了。大多数情况下，我们都是采用的写法 1。</p>\n<h2 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h2><p><strong>举例</strong>：交换两个变量的值</p>\n<p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a1 = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a2 = <span class=\"number\">200</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> temp;</span><br><span class=\"line\"></span><br><span class=\"line\">temp = a1;</span><br><span class=\"line\">a1 = a2;</span><br><span class=\"line\">a2 = temp;</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/tags/JavaScript.json"}]}