{"title":"16-内置对象：Number和Math","slug":"JavaScript/16-内置对象：Number和Math","date":"2023-02-15T12:06:59.472Z","updated":"2023-02-15T12:25:20.472Z","comments":true,"path":"api/articles/JavaScript/16-内置对象：Number和Math.json","photos":[],"link":"","excerpt":null,"covers":["http://img.smyhvae.com/20180117_1730.png","http://img.smyhvae.com/20180117_1740.png","http://img.smyhvae.com/20180202_1432.png"],"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"内置对象-Number-的常见方法\"><a href=\"#内置对象-Number-的常见方法\" class=\"headerlink\" title=\"内置对象 Number 的常见方法\"></a>内置对象 Number 的常见方法</h2><h3 id=\"Number-isInteger-判断是否为整数\"><a href=\"#Number-isInteger-判断是否为整数\" class=\"headerlink\" title=\"Number.isInteger() 判断是否为整数\"></a>Number.isInteger() 判断是否为整数</h3><p>语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = Number.isInteger(数字);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"toFixed-小数点后面保留多少位\"><a href=\"#toFixed-小数点后面保留多少位\" class=\"headerlink\" title=\"toFixed() 小数点后面保留多少位\"></a>toFixed() 小数点后面保留多少位</h3><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 = myNum.<span class=\"title function_\">toFixed</span>(num);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将数字 myNum 的小数点后面保留 num 位小数（四舍五入），并返回。不会改变原数字。注意，<strong>返回结果是字符串</strong>。</p>\n<p>参数 num：指定了小数点后面的位数。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">3.456</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num2 = num.<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num); <span class=\"comment\">// 打印结果：3.456</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 打印结果：3.46</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> num); <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> num2); <span class=\"comment\">// string</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>num2</code>的结果是3.46，但是请注意，<code>num</code>的类型Number型，而<code>num2</code>的类型却是String型。</p>\n<h2 id=\"内置对象-Math-的常见方法\"><a href=\"#内置对象-Math-的常见方法\" class=\"headerlink\" title=\"内置对象 Math 的常见方法\"></a>内置对象 Math 的常见方法</h2><p>Math 和其他的对象不同，它不是一个构造函数，不需要创建对象。所以我们不需要 通过 new 来调用，而是直接使用里面的属性和方法即可。</p>\n<p>Math属于一个工具类，里面封装了数学运算相关的属性和方法。如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Math.PI</td>\n<td align=\"left\">圆周率</td>\n<td align=\"left\">Math对象的属性</td>\n</tr>\n<tr>\n<td align=\"left\">Math.abs()</td>\n<td align=\"left\"><strong>返回绝对值</strong></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.random()</td>\n<td align=\"left\">生成0-1之间的<strong>随机浮点数</strong></td>\n<td align=\"left\">取值范围是 [0，1)</td>\n</tr>\n<tr>\n<td align=\"left\">Math.floor()</td>\n<td align=\"left\"><strong>向下取整</strong>（往小取值）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.ceil()</td>\n<td align=\"left\"><strong>向上取整</strong>（往大取值）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.round()</td>\n<td align=\"left\">四舍五入取整（正数四舍五入，负数五舍六入）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.max(x, y, z)</td>\n<td align=\"left\">返回多个数中的最大值</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.min(x, y, z)</td>\n<td align=\"left\">返回多个数中的最小值</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.pow(x,y)</td>\n<td align=\"left\">乘方：返回 x 的 y 次幂</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.sqrt()</td>\n<td align=\"left\">开方：对一个数进行开方运算</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = -<span class=\"number\">0.6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(num));        <span class=\"comment\">//取绝对值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(num));      <span class=\"comment\">//向下取整，向小取</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(num));       <span class=\"comment\">//向上取整，向大取</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(num));      <span class=\"comment\">//四舍五入取整（正数四舍五入，负数五舍六入）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>());        <span class=\"comment\">//生成0-1之间的随机数</span></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.6</span><br><span class=\"line\"></span><br><span class=\"line\">-1</span><br><span class=\"line\"></span><br><span class=\"line\">-0</span><br><span class=\"line\"></span><br><span class=\"line\">-1</span><br><span class=\"line\"></span><br><span class=\"line\">0.6453756205275165</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Math-abs-：获绝对值\"><a href=\"#Math-abs-：获绝对值\" class=\"headerlink\" title=\"Math.abs()：获绝对值\"></a>Math.abs()：获绝对值</h2><p>方法定义：返回绝对值。</p>\n<p>注意：</p>\n<ul>\n<li>参数中可以接收字符串类型的数字，此时会将字符串做隐式类型转换，然后再调用 Math.abs() 方法。</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"number\">2</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(-<span class=\"number\">2</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先做隐式类型转换，将 &#x27;-2&#x27;转换为数字类型 -2，然后再调用 Math.abs()</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"string\">&#x27;-2&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"string\">&#x27;hello&#x27;</span>)); <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Math-random-方法：生成随机数\"><a href=\"#Math-random-方法：生成随机数\" class=\"headerlink\" title=\"Math.random() 方法：生成随机数\"></a>Math.random() 方法：生成随机数</h2><p>方法定义：生成 [0, 1) 之间的<strong>随机浮点数</strong>。</p>\n<p>我们来看几个例子。</p>\n<h3 id=\"生成-0-x-之间的随机数\"><a href=\"#生成-0-x-之间的随机数\" class=\"headerlink\" title=\"生成 [0, x) 之间的随机数\"></a>生成 [0, x) 之间的随机数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*x)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"生成-x-y-之间的随机数\"><a href=\"#生成-x-y-之间的随机数\" class=\"headerlink\" title=\"生成 [x, y) 之间的随机数\"></a>生成 [x, y) 之间的随机数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*(y-x)+x)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【重要】生成-x-y-之间的随机整数\"><a href=\"#【重要】生成-x-y-之间的随机整数\" class=\"headerlink\" title=\"【重要】生成 [x, y]之间的随机整数\"></a>【重要】生成 [x, y]之间的随机整数</h3><p>也就是说：生成两个整数之间的随机整数，<strong>并且要包含这两个整数</strong>。</p>\n<p>这个功能很常用，我们可以将其封装成一个方法，代码实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 生成两个整数之间的随机整数，并且要包含这两个整数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getRandom</span>(<span class=\"params\">min, max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (max - min + <span class=\"number\">1</span>)) + min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getRandom</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例：随机点名\"><a href=\"#举例：随机点名\" class=\"headerlink\" title=\"举例：随机点名\"></a>举例：随机点名</h3><p>根据上面的例子，我们还可以再延伸一下，来看看随机点名的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 生成两个整数之间的随机整数，并且要包含这两个整数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getRandom</span>(<span class=\"params\">min, max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (max - min + <span class=\"number\">1</span>)) + min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"string\">&#x27;邓紫棋&#x27;</span>, <span class=\"string\">&#x27;毛不易&#x27;</span>, <span class=\"string\">&#x27;解忧邵帅&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"title function_\">getRandom</span>(<span class=\"number\">0</span>, arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>); <span class=\"comment\">// 生成随机的index</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[index]); <span class=\"comment\">// 随机点名</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"pow-：乘方\"><a href=\"#pow-：乘方\" class=\"headerlink\" title=\"pow()：乘方\"></a>pow()：乘方</h2><p>如果想计算 <code>a 的 b 次方</code>，可以使用如下函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.pow(a, b);</span><br></pre></td></tr></table></figure>\n\n<p>Math的中文是“数学”，pow是“幂”。</p>\n<p><strong>举例1：</strong></p>\n<p><img src=\"http://img.smyhvae.com/20180117_1730.png\"></p>\n<p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.pow(3, Math.pow(2, 2));</span><br><span class=\"line\">console.log(a);</span><br></pre></td></tr></table></figure>\n\n<p><strong>举例2：</strong></p>\n<p><img src=\"http://img.smyhvae.com/20180117_1740.png\"></p>\n<p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.pow(Math.pow(3, 2), 4);</span><br><span class=\"line\">console.log(a);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqrt-：开方\"><a href=\"#sqrt-：开方\" class=\"headerlink\" title=\"sqrt()：开方\"></a>sqrt()：开方</h2><p>如果想计算数值a的开二次方，可以使用如下函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.sqrt(a);</span><br></pre></td></tr></table></figure>\n\n<p>sqrt即“square 开方”。比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.sqrt(36);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"url-编码和解码\"><a href=\"#url-编码和解码\" class=\"headerlink\" title=\"url 编码和解码\"></a>url 编码和解码</h2><p>URI (Uniform ResourceIdentifiers,通用资源标识符)进行编码，以便发送给浏览器。有效的URI中不能包含某些字符，例如空格。而这URI编码方法就可以对URI进行编码，它们用特殊的UTF-8编码替换所有无效的字符，从而让浏览器能够接受和理解。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">encodeURIComponent</span>();   <span class=\"comment\">//把字符串作为 URI 组件进行编码</span></span><br><span class=\"line\"><span class=\"built_in\">decodeURIComponent</span>();   <span class=\"comment\">//把字符串作为 URI 组件进行解码</span></span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&quot;http://www.cnblogs.com/smyhvae/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"built_in\">encodeURIComponent</span>(url);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);                           <span class=\"comment\">//打印url的编码</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">decodeURIComponent</span>(str));       <span class=\"comment\">//对url进行编码后，再解码，还原为url</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1432.png\"></p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/tags/JavaScript.json"}]}