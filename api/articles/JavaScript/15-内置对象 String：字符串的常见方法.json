{"title":"15-内置对象 String：字符串的常见方法","slug":"JavaScript/15-内置对象 String：字符串的常见方法","date":"2023-02-15T12:06:59.470Z","updated":"2023-02-15T12:25:02.011Z","comments":true,"path":"api/articles/JavaScript/15-内置对象 String：字符串的常见方法.json","photos":[],"link":"","excerpt":null,"covers":["http://img.smyhvae.com/20180202_1420.png","http://img.smyhvae.com/20180202_1401.png","http://img.smyhvae.com/20200611_2050.png","http://img.smyhvae.com/20200607_2132.png","http://img.smyhvae.com/20180202_1536.png","http://img.smyhvae.com/20180202_1540.png"],"content":"<h2 id=\"内置对象简介\"><a href=\"#内置对象简介\" class=\"headerlink\" title=\"内置对象简介\"></a>内置对象简介</h2><blockquote>\n<p>JavaScript 中的对象分为3种：自定义对象、内置对象、浏览器对象。</p>\n</blockquote>\n<blockquote>\n<p>前面两种对象：是JS的基础内容，属于 ECMAScript； 第三个浏览器对象：属于JS独有，即 JS 内置的API。</p>\n</blockquote>\n<p><strong>内置对象</strong>：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用或者基本而必要的功能（属性和方法）。</p>\n<p>内置对象最大的优点就是帮助我们快速开发。</p>\n<p><strong>JavaScript的内置对象</strong>：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内置对象</th>\n<th align=\"left\">对象说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Arguments</td>\n<td align=\"left\">函数参数集合</td>\n</tr>\n<tr>\n<td align=\"left\">Array</td>\n<td align=\"left\">数组</td>\n</tr>\n<tr>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">布尔对象</td>\n</tr>\n<tr>\n<td align=\"left\">Math</td>\n<td align=\"left\">数学对象</td>\n</tr>\n<tr>\n<td align=\"left\">Date</td>\n<td align=\"left\">日期时间</td>\n</tr>\n<tr>\n<td align=\"left\">Error</td>\n<td align=\"left\">异常对象</td>\n</tr>\n<tr>\n<td align=\"left\">Function</td>\n<td align=\"left\">函数构造器</td>\n</tr>\n<tr>\n<td align=\"left\">Number</td>\n<td align=\"left\">数值对象</td>\n</tr>\n<tr>\n<td align=\"left\">Object</td>\n<td align=\"left\">基础对象</td>\n</tr>\n<tr>\n<td align=\"left\">RegExp</td>\n<td align=\"left\">正则表达式对象</td>\n</tr>\n<tr>\n<td align=\"left\">String</td>\n<td align=\"left\">字符串对象</td>\n</tr>\n</tbody></table>\n<h2 id=\"字符串前言\"><a href=\"#字符串前言\" class=\"headerlink\" title=\"字符串前言\"></a>字符串前言</h2><blockquote>\n<p>在日常开发中，String 对象（字符串对象）的使用频率是非常高的。所以有必要详细介绍。</p>\n</blockquote>\n<p>需要注意的是：<strong>字符串的所有方法，都不会改变原字符串</strong>（字符串的不可变性），操作完成后会返回一个新的值。</p>\n<p>字符串的常见方法如下。</p>\n<h2 id=\"查找字符串\"><a href=\"#查找字符串\" class=\"headerlink\" title=\"查找字符串\"></a>查找字符串</h2><h3 id=\"1、indexOf-x2F-lastIndexOf-：获取字符串中指定内容的索引\"><a href=\"#1、indexOf-x2F-lastIndexOf-：获取字符串中指定内容的索引\" class=\"headerlink\" title=\"1、indexOf()&#x2F;lastIndexOf()：获取字符串中指定内容的索引\"></a>1、indexOf()&#x2F;lastIndexOf()：获取字符串中指定内容的索引</h3><blockquote>\n<p>这个方法，是使用频率最高的一个方法。</p>\n</blockquote>\n<p><strong>语法 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">indexOf</span>(想要查询的字符串);</span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>indexOf()</code> 是从前向后查找字符串的位置。同理，<code>lastIndexOf()</code>是从后向前寻找。</p>\n<p><strong>解释</strong>：可以检索一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回其<strong>第一次出现</strong>的索引；如果没有找到指定的内容，则返回 -1。</p>\n<p>因此可以得出一个重要技巧：</p>\n<ul>\n<li><p><strong>如果获取的索引值为 0，说明字符串是以查询的参数为开头的</strong>。</p>\n</li>\n<li><p>如果获取的索引值为-1，说明这个字符串中没有指定的内容。</p>\n</li>\n</ul>\n<p>举例 1：(查找单个字符)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;abcdea&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//给字符查索引(索引值为0,说明字符串以查询的参数为开头)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1420.png\"></p>\n<p>举例 2：（查找字符串）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>语法 2</strong>：</p>\n<p>这个方法还可以指定第二个参数，用来指定查找的<strong>起始位置</strong>。语法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">indexOf</span>(想要查询的字符串, [起始位置]);</span><br></pre></td></tr></table></figure>\n\n<p>举例 3：（两个参数时，需要特别注意）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">result = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标为3的位置开始查找 &#x27;a&#x27;这个字符 【重要】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：9</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>indexOf()</code>方法中携带了两个参数，具体解释请看注释。</p>\n<h3 id=\"indexOf-举例\"><a href=\"#indexOf-举例\" class=\"headerlink\" title=\"indexOf 举例\"></a>indexOf 举例</h3><p><strong>案例</strong>：查找字符串”qianguyihao”中，所有 <code>a</code> 出现的位置以及次数。</p>\n<p>思路：</p>\n<p>（1）先查找第一个 a 出现的位置。</p>\n<p>（2）只要 indexOf 返回的结果不是 -1 就继续往后查找。</p>\n<p>（3）因为 indexOf 只能查找到第一个，所以后面的查找，可以利用第二个参数，在当前索引加 1，从而继续查找。</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> index = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (index !== -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index);</span><br><span class=\"line\">    num++; <span class=\"comment\">// 每打印一次，就计数一次</span></span><br><span class=\"line\">    index = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;o&#x27;</span>, index + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a 出现的次数是: &#x27;</span> + num);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2、search-：获取字符串中指定内容的索引（参数里一般是正则）\"><a href=\"#2、search-：获取字符串中指定内容的索引（参数里一般是正则）\" class=\"headerlink\" title=\"2、search()：获取字符串中指定内容的索引（参数里一般是正则）\"></a>2、search()：获取字符串中指定内容的索引（参数里一般是正则）</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">search</span>(想要查找的字符串);</span><br><span class=\"line\">索引值 = str.<span class=\"title function_\">search</span>(正则表达式);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>search()</code> 方法里的参数，既可以传字符串，也可以传正则表达式。</p>\n<p><strong>解释</strong>：可以检索一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回其<strong>第一次出现</strong>的索引；如果没有找到指定的内容，则返回 -1。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">search</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：6</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">search</span>(<span class=\"regexp\">/yi/i</span>)); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<p>备注：上方的<code>/yi/i</code>采用的是正则表达式的写法，意思是，让 name去匹配字符<code>yi</code>，忽略大小写。我们在后面会专门介绍正则表达式。</p>\n<h3 id=\"3、includes-：字符串中是否包含指定的内容\"><a href=\"#3、includes-：字符串中是否包含指定的内容\" class=\"headerlink\" title=\"3、includes()：字符串中是否包含指定的内容\"></a>3、includes()：字符串中是否包含指定的内容</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">includes</span>(想要查找的字符串, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回 true；否则返回 false。</p>\n<p>参数中的 <code>position</code>：如果不指定，则默认为0；如果指定，则规定了检索的起始位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;haha&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;yi&#x27;</span>,<span class=\"number\">7</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"4、startsWith-：字符串是否以指定的内容开头\"><a href=\"#4、startsWith-：字符串是否以指定的内容开头\" class=\"headerlink\" title=\"4、startsWith()：字符串是否以指定的内容开头\"></a>4、startsWith()：字符串是否以指定的内容开头</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">startsWith</span>(想要查找的内容, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串是否以指定的子字符串开头。如果是，则返回 true；否则返回 false。</p>\n<p><strong>参数中的position</strong>：</p>\n<ul>\n<li><p>如果不指定，则默认为0。</p>\n</li>\n<li><p>如果指定，则规定了<strong>检索的起始位置</strong>。检索的范围包括：这个指定位置开始，直到字符串的末尾。即：[position, str.length)</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;abcdefg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;a&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;b&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为指定了起始位置为3，所以是在 defg 这个字符串中检索。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5、endsWith-：字符串是否以指定的内容结尾\"><a href=\"#5、endsWith-：字符串是否以指定的内容结尾\" class=\"headerlink\" title=\"5、endsWith()：字符串是否以指定的内容结尾\"></a>5、endsWith()：字符串是否以指定的内容结尾</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">endsWith</span>(想要查找的内容, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串是否以指定的子字符串结尾。如果是，则返回 true；否则返回 false。</p>\n<p><strong>参数中的position</strong>：</p>\n<ul>\n<li><p>如果不指定，则默认为 str.length。</p>\n</li>\n<li><p>如果指定，则规定了<strong>检索的结束位置</strong>。检索的范围包括：从第一个字符串开始，直到这个指定的位置。即：[0, position)</p>\n</li>\n<li><p>或者你可以这样简单理解：endsWith() 方法里的position，表示<strong>检索的长度</strong>。</p>\n</li>\n</ul>\n<p>注意：startsWith() 和 endsWith()这两个方法，他们的 position 的含义是不同的，请仔细区分。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;abcdefg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;g&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;f&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为指定了截止位置为3，所以是在 abc 这个长度为3字符串中检索</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<p>注意看上方的注释。</p>\n<p>参考链接：<a href=\"https://www.softwhy.com/article-2885-1.html\">JavaScript endsWith()介绍</a></p>\n<h2 id=\"获取指定位置的字符\"><a href=\"#获取指定位置的字符\" class=\"headerlink\" title=\"获取指定位置的字符\"></a>获取指定位置的字符</h2><h3 id=\"1、charAt-index\"><a href=\"#1、charAt-index\" class=\"headerlink\" title=\"1、charAt(index)\"></a>1、charAt(index)</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符 = str.<span class=\"title function_\">charAt</span>(index);</span><br></pre></td></tr></table></figure>\n\n<p>解释：返回字符串指定位置的字符。这里的 <code>str.charAt(index)</code>和<code>str[index]</code>的效果是一样的。</p>\n<p>注意：字符串中第一个字符的下标是 0。如果参数 index 不在 [0, string.length) 之间，该方法将返回一个空字符串。</p>\n<p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;smyhvae&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">charAt</span>(i));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1401.png\"></p>\n<p>上面这个例子一般不用。一般打印数组和 json 的时候用索引，打印 String 不建议用索引。</p>\n<h3 id=\"2、str-index\"><a href=\"#2、str-index\" class=\"headerlink\" title=\"2、str[index]\"></a>2、str[index]</h3><p><code>str.charAt(index)</code>和<code>str[index]</code>的效果是一样的，不再赘述。区别在于：<code>str[index]</code>是 H5 标准里新增的特性。</p>\n<h3 id=\"3、charCodeAt-index\"><a href=\"#3、charCodeAt-index\" class=\"headerlink\" title=\"3、charCodeAt(index)\"></a>3、charCodeAt(index)</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符 = str.<span class=\"title function_\">charCodeAt</span>(index);</span><br></pre></td></tr></table></figure>\n\n<p>解释：返回字符串指定位置的字符的 Unicode 编码。不会修改原字符串。</p>\n<p>在实际应用中，通过这个方法，我们可以判断用户按下了哪个按键。</p>\n<p><strong>代码举例</strong>：打印字符串的<strong>占位长度</strong>。</p>\n<p>提示：一个英文占一个位置，一个中文占两个位置。</p>\n<p>思路：判断该字符是否在 0-127 之间（在的话是英文，不在是非英文）。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//    sort();   底层用到了charCodeAt();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;I love my country!我你爱中国！&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：求一个字符串占有几个字符位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//思路；如果是英文，站一个字符位，如果不是英文占两个字符位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//技术点：判断该字符是否在0-127之间。（在的话是英文，不在是非英文）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"title function_\">getZFWlength</span>(str));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(str.<span class=\"property\">length</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义方法：字符位</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getZFWlength</span>(<span class=\"params\">string</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义一个计数器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; string.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//对每一位字符串进行判断，如果Unicode编码在0-127，计数器+1；否则+2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (string.<span class=\"title function_\">charCodeAt</span>(i) &lt; <span class=\"number\">128</span> &amp;&amp; string.<span class=\"title function_\">charCodeAt</span>(i) &gt;= <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                count++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                count += <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> count;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">30</span><br><span class=\"line\">24</span><br></pre></td></tr></table></figure>\n\n<p>从打印结果可以看出：字符串的长度是 24，但是却占了 30 个字符位（一个中文占两个字符位）。</p>\n<p>另外，sort()方法其实底层也是用到了 charCodeAt()，因为用到了 Unicode 编码。</p>\n<h2 id=\"字符串截取\"><a href=\"#字符串截取\" class=\"headerlink\" title=\"字符串截取\"></a>字符串截取</h2><h3 id=\"1、slice\"><a href=\"#1、slice\" class=\"headerlink\" title=\"1、slice()\"></a>1、slice()</h3><blockquote>\n<p>slice() 方法用的最多。</p>\n</blockquote>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str.<span class=\"title function_\">slice</span>(开始索引, 结束索引); <span class=\"comment\">//两个参数都是索引值。包左不包右。</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。</p>\n<p>注意：上面的参数，包左不包右。参数举例如下：</p>\n<ul>\n<li><p><code>(2, 5)</code> 截取时，包左不包右。</p>\n</li>\n<li><p><code>(2)</code> 表示<strong>从指定的索引位置开始，截取到最后</strong>。</p>\n</li>\n<li><p><code>(-3)</code> 表示从倒数第三个开始，截取到最后。</p>\n</li>\n<li><p><code>(1, -1)</code> 表示从第一个截取到倒数第一个。</p>\n</li>\n<li><p><code>(5, 2)</code> 表示前面的大，后面的小，返回值为空。</p>\n</li>\n</ul>\n<h3 id=\"2、substring\"><a href=\"#2、substring\" class=\"headerlink\" title=\"2、substring()\"></a>2、substring()</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str.<span class=\"title function_\">substring</span>(开始索引, 结束索引); <span class=\"comment\">//两个参数都是索引值。包左不包右。</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。和<code>slice()</code>类似。</p>\n<p><code>substring()</code>和<code>slice()</code>是类似的。但不同之处在于：</p>\n<ul>\n<li><p><code>substring()</code>不能接受负值作为参数。如果传递了一个<strong>负值</strong>，则默认使用 0。</p>\n</li>\n<li><p><code>substring()</code>还会自动调整参数的位置，如果第二个参数小于第一个，则自动交换。比如说， <code>substring(1, 0)</code>相当于截取的是第一个字符。</p>\n</li>\n</ul>\n<h3 id=\"3、substr\"><a href=\"#3、substr\" class=\"headerlink\" title=\"3、substr()\"></a>3、substr()</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 = str.<span class=\"title function_\">substr</span>(开始索引, 截取的长度);</span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。</p>\n<p>注意，这个方法的第二个参数<strong>截取的长度</strong>，不是结束索引。</p>\n<p>参数举例：</p>\n<ul>\n<li><p><code>(2,4)</code> 从索引值为 2 的字符开始，截取 4 个字符。</p>\n</li>\n<li><p><code>(1)</code> 从指定位置开始，截取到最后。</p>\n</li>\n<li><p><code>(-3)</code> 从倒数第几个开始，截取到最后。</p>\n</li>\n</ul>\n<p>备注：ECMAscript 没有对 <code>substr()</code> 方法进行标准化，因此不建议使用它。</p>\n<h2 id=\"String-fromCharCode\"><a href=\"#String-fromCharCode\" class=\"headerlink\" title=\"String.fromCharCode()\"></a>String.fromCharCode()</h2><p><code>String.fromCharCode()</code>：根据字符的 Unicode 编码获取字符。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result1 = <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(<span class=\"number\">72</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(<span class=\"number\">20013</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：H</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 打印结果：中</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str1.<span class=\"title function_\">concat</span>(str2)； <span class=\"comment\">//连接两个字符串</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：字符串的连接。</p>\n<p>这种方法基本不用，直接把两个字符串相加就好。</p>\n<p>是的，你会发现，数组中也有<code>concat()</code>方法，用于数组的连接。这个方法在数组中用得挺多的。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;qiangu&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;yihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = str1.<span class=\"title function_\">concat</span>(str2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：qianguyihao</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"split-：字符串转换为数组-【重要】\"><a href=\"#split-：字符串转换为数组-【重要】\" class=\"headerlink\" title=\"split()：字符串转换为数组 【重要】\"></a>split()：字符串转换为数组 【重要】</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的数组 = str.<span class=\"title function_\">split</span>(分隔符);</span><br></pre></td></tr></table></figure>\n\n<p>解释：通过指定的分隔符，将一个字符串拆分成一个<strong>数组</strong>。不会改变原字符串。</p>\n<p>备注：<code>split()</code>这个方法在实际开发中用得非常多。一般来说，从接口拿到的 json 数据中，经常会收到类似于<code>&quot;q, i, a, n&quot;</code>这样的字符串，前端需要将这个字符串拆分成<code>[&#39;q&#39;, &#39;i&#39;, &#39;a&#39;, &#39;n&#39;]</code>数组，这个时候<code>split()</code>方法就派上用场了。</p>\n<p><strong>代码举例 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qian, gu, yi, hao&#x27;</span>; <span class=\"comment\">// 用逗号隔开的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> array = str.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>); <span class=\"comment\">// 将字符串 str 拆分成数组，通过逗号来拆分</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array); <span class=\"comment\">// 打印结果是数组：[&quot;qian&quot;, &quot; gu&quot;, &quot; yi&quot;, &quot; hao&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>代码举例 2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//split()方法：字符串变数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;千古壹号|qianguyihao|许嵩&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;结果1：&#x27;</span> +str3.<span class=\"title function_\">split</span>()); <span class=\"comment\">// 无参数，表示：把整个字符串作为一个元素添加到数组中。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>)); <span class=\"comment\">// 参数为空字符串，则表示：分隔字符串中每一个字符，分别添加到数组中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)); <span class=\"comment\">// 参数为指定字符，表示：用 &#x27;|&#x27; 分隔字符串。此分隔符将不会出现在数组的任意一个元素中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;许&#x27;</span>)); <span class=\"comment\">// 同上</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：（都是数组）</p>\n<p><img src=\"http://img.smyhvae.com/20200611_2050.png\"></p>\n<h2 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace()\"></a>replace()</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的字符串 = str.<span class=\"title function_\">replace</span>(被替换的子串，新的子串);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将字符串中的指定内容，替换为新的内容并返回。不会修改原字符串。</p>\n<p>注意：这个方法，默认只会替换第一个被匹配到的字符。如果要全局替换，需要使用正则。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//replace()方法：替换</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;Today is fine day,today is fine day !&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;today&#x27;</span>, <span class=\"string\">&#x27;tomorrow&#x27;</span>)); <span class=\"comment\">//只能替换第一个today</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/today/gi</span>, <span class=\"string\">&#x27;tomorrow&#x27;</span>)); <span class=\"comment\">//这里用到了正则，才能替换所有的today</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"repeat-：重复字符串\"><a href=\"#repeat-：重复字符串\" class=\"headerlink\" title=\"repeat()：重复字符串\"></a>repeat()：重复字符串</h2><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newStr = str.<span class=\"title function_\">repeat</span>(重复的次数);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将字符串重复指定的次数。会返回新的值，不会修改原字符串。</p>\n<p>举例1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">repeat</span>(<span class=\"number\">2</span>)); <span class=\"comment\">// 打印内容：qianguyihaoqianguyihao</span></span><br></pre></td></tr></table></figure>\n\n<p>举例2：（模糊字符串的后四位）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> telephone = <span class=\"string\">&#x27;13088889999&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> mix_telephone = telephone.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, -<span class=\"number\">4</span>) + <span class=\"string\">&#x27;*&#x27;</span>.<span class=\"title function_\">repeat</span>(<span class=\"number\">4</span>); <span class=\"comment\">// 模糊电话号码的后四位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(telephone); <span class=\"comment\">// 打印结果：13088889999</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(mix_telephone); <span class=\"comment\">// 打印结果：1308888****</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h2 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim()\"></a>trim()</h2><p><code>trim()</code>：去除字符串前后的空白。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//去除字符串前后的空格，trim();</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;   a   b   c   &#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">length</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">trim</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20200607_2132.png\"></p>\n<h2 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h2><p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdEFG&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//转换成小写</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">toLowerCase</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//转换成大写</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">toUpperCase</span>());</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-方法\"><a href=\"#html-方法\" class=\"headerlink\" title=\"html 方法\"></a>html 方法</h2><ul>\n<li><p>anchor() 创建 a 链接</p>\n</li>\n<li><p>big()</p>\n</li>\n<li><p>sub()</p>\n</li>\n<li><p>sup()</p>\n</li>\n<li><p>link()</p>\n</li>\n<li><p>bold()</p>\n</li>\n</ul>\n<p>注意，str.link() 返回值是字符串。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">anchor</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">big</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">sub</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">sup</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">link</span>(<span class=\"string\">&#x27;http://www.baidu.com&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">bold</span>());</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://img.smyhvae.com/20180202_1536.png\"></p>\n<h2 id=\"字符串练习\"><a href=\"#字符串练习\" class=\"headerlink\" title=\"字符串练习\"></a>字符串练习</h2><p><strong>练习 1</strong>：”smyhvaevaesmyh”查找字符串中所有 m 出现的位置。</p>\n<p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;smyhvaevaesmyh&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str2.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果指定位置的符号=== &quot;o&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">//str2[i]</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str2.<span class=\"title function_\">charAt</span>(i) === <span class=\"string\">&#x27;m&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>练习 2</strong>：判断一个字符串中出现次数最多的字符，统计这个次数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;smyhvaevaesmyhvae&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义一个json，然后判断json中是够有该属性，如果有该属性，那么值+1;否则创建一个该属性，并赋值为1；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> json = &#123;&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str2.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//判断：如果有该属性，那么值+1;否则创建一个该属性，并赋值为1；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> key = str2.<span class=\"title function_\">charAt</span>(i);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (json[key] === <span class=\"literal\">undefined</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            json[key] = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            json[key] += <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(json);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//获取json中属性值最大的选项</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> maxKey = <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> maxValue = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> json) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        if(maxKey == &quot;&quot;)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//            maxKey = k;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//            maxValue = json[k];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        &#125;else&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (json[k] &gt; maxValue) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            maxKey = k;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            maxValue = json[k];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxKey);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxValue);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1540.png\"></p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":20,"path":"api/tags/JavaScript.json"}]}