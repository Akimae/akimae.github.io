{"title":"06-基本数据类型：String 和 Boolean","slug":"JavaScript/06-基本数据类型：String 和 Boolean","date":"2023-02-15T12:06:59.447Z","updated":"2023-02-15T12:17:43.488Z","comments":true,"path":"api/articles/JavaScript/06-基本数据类型：String 和 Boolean.json","photos":[],"link":"","excerpt":null,"covers":["http://img.smyhvae.com/20200825_2016.png","http://img.smyhvae.com/20200607_2118.png"],"content":"<p>详细介绍基本数据类型：</p>\n<h2 id=\"String-字符串\"><a href=\"#String-字符串\" class=\"headerlink\" title=\"String 字符串\"></a>String 字符串</h2><h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>字符串型可以是引号中的任意文本，其语法为：双引号 <code>&quot;&quot;</code> 或者单引号 <code>&#39;&#39;</code>。</p>\n<p>来看个示例。下面的这些，都是字符串：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;abcde&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">&#x27;123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"string\">&#x27;哈哈哈哈哈&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">//空字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = haha; <span class=\"comment\">// 没使用引号，到这里会直接报错。因为会被认为是js代码，但是之前并没有定义 haha。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> c);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> d);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> e);</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引号的注意事项\"><a href=\"#引号的注意事项\" class=\"headerlink\" title=\"引号的注意事项\"></a>引号的注意事项</h3><p>1、单引号和双引号不能混用。比如下面这样写是不可以的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&quot;;  // 报错：Uncaught SyntaxError: Invalid or unexpected token</span></span><br></pre></td></tr></table></figure>\n\n<p>2、同类引号不能嵌套：双引号里不能再放双引号，单引号里不能再放单引号。</p>\n<p>3、单引号里可以嵌套双引号；双引号里可以嵌套单引号。</p>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><p>在字符串中我们可以使用<code>\\</code>作为转义字符，当表示一些特殊符号时可以使用<code>\\</code>进行转义。</p>\n<ul>\n<li><p><code>\\&quot;</code> 表示 <code>&quot;</code> 双引号</p>\n</li>\n<li><p><code>\\&#39;</code> 表示 <code>&#39;</code> 单引号</p>\n</li>\n<li><p><code>\\\\</code> 表示<code>\\</code></p>\n</li>\n<li><p><code>\\r</code> 表示回车</p>\n</li>\n<li><p><code>\\n</code> 表示换行。n 的意思是 newline。</p>\n</li>\n<li><p><code>\\t</code> 表示缩进。t 的意思是 tab。</p>\n</li>\n<li><p><code>\\b</code> 表示空格。b 的意思是 blank。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;我说:&quot;今天\\t天气真不错！&quot;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;\\\\\\\\\\\\&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我说:&quot;今天\t天气真不错！&quot;</span><br><span class=\"line\">\\\\\\</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取字符串的长度\"><a href=\"#获取字符串的长度\" class=\"headerlink\" title=\"获取字符串的长度\"></a>获取字符串的长度</h3><p>字符串是由若干个字符组成的，这些字符的数量就是字符串的长度。我们可以通过字符串的 length 属性可以获取整个字符串的长度。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;千古壹号，永不止步！&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;qianguyihao, keep moving!&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1.<span class=\"property\">length</span>); <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"property\">length</span>); <span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"property\">length</span>); <span class=\"comment\">// 11</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str4.<span class=\"property\">length</span>); <span class=\"comment\">// 25</span></span><br></pre></td></tr></table></figure>\n\n<p>由此可见，字符串的 length 属性，在判断字符串的长度时，会认为：</p>\n<ul>\n<li><p>一个中文算一个字符，一个英文算一个字符</p>\n</li>\n<li><p>一个标点符号（包括中文标点、英文标点）算一个字符</p>\n</li>\n<li><p>一个空格算一个字符</p>\n</li>\n</ul>\n<h3 id=\"字符串拼接\"><a href=\"#字符串拼接\" class=\"headerlink\" title=\"字符串拼接\"></a>字符串拼接</h3><p>多个字符串之间可以使用加号 <code>+</code> 进行拼接。</p>\n<p><strong>拼接语法</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 + 任意数据类型 = 拼接之后的新字符串;</span><br></pre></td></tr></table></figure>\n\n<p><strong>拼接规则</strong>：拼接前，会把与字符串相加的这个数据类型转成字符串，然后再拼接成一个新的字符串。</p>\n<p><strong>代码举例</strong>：（字符串与六大数据类型相加）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"string\">&#x27;永不止步&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str5 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str6 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + obj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str4);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str5);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str6);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">千古壹号永不止步</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号666</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号true</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号null</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号undefined</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号[object Object]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串的不可变性\"><a href=\"#字符串的不可变性\" class=\"headerlink\" title=\"字符串的不可变性\"></a>字符串的不可变性</h2><p>字符串里面的值不可被改变。虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>比如上面的代码，当重新给变量 str 赋值时，常量<code>hello</code>不会被修改，依然保存在内存中；str 会改为指向<code>qianguyihao</code>。</p>\n<h2 id=\"模板字符串（模板字面量）\"><a href=\"#模板字符串（模板字面量）\" class=\"headerlink\" title=\"模板字符串（模板字面量）\"></a>模板字符串（模板字面量）</h2><p>ES6 中引入了<strong>模板字符串</strong>，让我们省去了字符串拼接的烦恼。下面一起来看看它的特性。</p>\n<h3 id=\"在模板字符串中插入变量\"><a href=\"#在模板字符串中插入变量\" class=\"headerlink\" title=\"在模板字符串中插入变量\"></a>在模板字符串中插入变量</h3><p>以前，让字符串进行拼接的时候，是这样做的：（传统写法的字符串拼接）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;smyhvae&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"string\">&#x27;26&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;name:&#x27;</span> + name + <span class=\"string\">&#x27;,age:&#x27;</span> + age); <span class=\"comment\">//传统写法</span></span><br></pre></td></tr></table></figure>\n\n<p>这种写法，比较繁琐，而且容易出错。</p>\n<p>现在，有了 ES6 语法，字符串拼接可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"string\">&#x27;26&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是&#x27;</span> + name + <span class=\"string\">&#x27;,age:&#x27;</span> + age); <span class=\"comment\">//传统写法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`我是<span class=\"subst\">$&#123;name&#125;</span>,age:<span class=\"subst\">$&#123;age&#125;</span>`</span>); <span class=\"comment\">//ES6 写法。注意语法格式</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>，上方代码中，倒数第二行用的符号是单引号，最后一行用的符号是反引号（在 tab 键的上方）。</p>\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000010222698\">ES6 的 rest 参数和扩展运算符</a></li>\n</ul>\n<h3 id=\"在模板字符串中插入表达式\"><a href=\"#在模板字符串中插入表达式\" class=\"headerlink\" title=\"在模板字符串中插入表达式\"></a>在模板字符串中插入表达式</h3><p>以前，在字符串中插入表达式的写法必须是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;this is &#x27;</span> + (a + b) + <span class=\"string\">&#x27; and\\nnot &#x27;</span> + (<span class=\"number\">2</span> * a + b) + <span class=\"string\">&#x27;.&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>现在，通过模板字符串，我们可以使用一种更优雅的方式来表示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面这行代码，故意做了换行。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`this is <span class=\"subst\">$&#123;a + b&#125;</span> and</span></span><br><span class=\"line\"><span class=\"string\">not <span class=\"subst\">$&#123;<span class=\"number\">2</span> * a + b&#125;</span>.`</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this is 15 and</span><br><span class=\"line\">not 20.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板字符串中可以换行\"><a href=\"#模板字符串中可以换行\" class=\"headerlink\" title=\"模板字符串中可以换行\"></a>模板字符串中可以换行</h3><p>因为模板字符串支持换行，所以可以让代码写得非常美观。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 模板字符串支持换行</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"string\">`&lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.name&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.age&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.sex&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/div&gt;`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(html); <span class=\"comment\">// 打印结果也会换行</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20200825_2016.png\"></p>\n<h3 id=\"模板字符串中可以调用函数\"><a href=\"#模板字符串中可以调用函数\" class=\"headerlink\" title=\"模板字符串中可以调用函数\"></a>模板字符串中可以调用函数</h3><p>模板字符串中可以调用函数。字符串中调用函数的位置，将会显示函数执行后的返回值。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getName</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`www.<span class=\"subst\">$&#123;getName()&#125;</span>.com`</span>); <span class=\"comment\">// 打印结果：www.qianguyihao.com</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板字符串支持嵌套使用\"><a href=\"#模板字符串支持嵌套使用\" class=\"headerlink\" title=\"模板字符串支持嵌套使用\"></a>模板字符串支持嵌套使用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nameList = [<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"string\">&#x27;解忧少帅&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myTemplate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// join(&#x27;&#x27;) 的意思是，把数组里的内容合并成一个字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t<span class=\"subst\">$&#123;nameList.map((item) =&gt; <span class=\"string\">`&lt;li&gt;<span class=\"subst\">$&#123;item&#125;</span>&lt;/li&gt;`</span>).join(<span class=\"string\">&#x27;&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">\t&lt;/ul&gt;`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">innerHTML</span> = <span class=\"title function_\">myTemplate</span>();</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20200607_2118.png\"></p>\n<h2 id=\"布尔值：Boolean\"><a href=\"#布尔值：Boolean\" class=\"headerlink\" title=\"布尔值：Boolean\"></a>布尔值：Boolean</h2><p>布尔型有两个值：true 和 false。主要用来做逻辑判断： true 表示真，false 表示假。</p>\n<p>布尔值直接使用就可以了，千万不要加引号。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boolean</span><br></pre></td></tr></table></figure>\n\n<p>布尔型和数字型相加时， true 按 1 来算 ，false 按 0 来算。</p>\n","categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]}