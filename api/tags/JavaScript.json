{"name":"JavaScript","slug":"JavaScript","count":52,"postlist":[{"title":"00-编程语言简介","slug":"JavaScript/00-编程语言简介","date":"2023-02-15T12:06:59.435Z","updated":"2023-02-15T12:09:27.178Z","comments":true,"path":"api/articles/JavaScript/00-编程语言简介.json","excerpt":"","keywords":null,"cover":"https://img.smyhvae.com/20211030-0031-2.png","content":"<h2 id=\"编程语言的概念\"><a href=\"#编程语言的概念\" class=\"headerlink\" title=\"编程语言的概念\"></a>编程语言的概念</h2><h3 id=\"编程\"><a href=\"#编程\" class=\"headerlink\" title=\"编程\"></a>编程</h3><p><strong>编程</strong>：让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。</p>\n<p><strong>计算机程序</strong>：就是计算机所执行的一系列的<strong>指令集合</strong>，而程序全部都是用我们所掌握的语言来编写的，所以人们如果要控制计算机，则需要通过计算机语言向计算机发出命令。</p>\n<h3 id=\"计算机语言\"><a href=\"#计算机语言\" class=\"headerlink\" title=\"计算机语言\"></a>计算机语言</h3><p><strong>计算机语言</strong>：人与计算机之间通讯的语言。它是人与计算机之间传递信息的媒介，用来控制计算机的一系列指令。</p>\n<p>计算机语言的种类非常的多，总的来说可以分成三大类：机器语言、汇编语言和高级语言。</p>\n<p>计算机最终所执行的都是机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。</p>\n<h3 id=\"编程语言\"><a href=\"#编程语言\" class=\"headerlink\" title=\"编程语言\"></a>编程语言</h3><p>通过类似于人类语言的 ”语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言。不同的编程语言，有不同的语法，必须遵守。</p>\n<p>如今通用的编程语言有两种形式：汇编语言和高级语言。</p>\n<ul>\n<li><p><strong>汇编语言</strong>：与机器语言实质是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，容易识别和记忆。</p>\n</li>\n<li><p><strong>高级语言</strong>：主要是相对于低级语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，比如：C 语言、C++、Java、C#、PHP、JavaScript、Python、Objective-C、Swift、Go 语言等。</p>\n</li>\n</ul>\n<h2 id=\"编程语言的分类\"><a href=\"#编程语言的分类\" class=\"headerlink\" title=\"编程语言的分类\"></a>编程语言的分类</h2><h3 id=\"翻译器\"><a href=\"#翻译器\" class=\"headerlink\" title=\"翻译器\"></a>翻译器</h3><p>计算机不能直接理解任何除机器语言以外的语言，所以必须要把程序员所编写的高级语言翻译成机器语言，计算机才能执行程序。为此，我们需要一个翻译器。<strong>程序语言翻译成机器语言的工具，被称为翻译器</strong>。</p>\n<p>由此可见，所谓的“翻译”，指的是将人类所编写的源代码转换（翻译）为机器能够执行的指令，这也被称为二进制化。</p>\n<p>翻译器翻译的方式有两种：一种是<strong>编译</strong>，另一种是<strong>解释</strong>。两种方式之间的区别在于<strong>翻译的时机</strong>不同。</p>\n<ul>\n<li><p><strong>编译器</strong>：在代码执行之前，事前把所有的代码一次性翻译好，生成中间代码文件，然后整体执行。</p>\n</li>\n<li><p><strong>解释器</strong>：边翻译，边执行（在代码执行时进行及时翻译，并立即执行）。当编译器以解释的方式运行时，也称之为解释器。</p>\n</li>\n</ul>\n<p>对应的语言，称之为“编译型语言”、“解释型语言”。</p>\n<h3 id=\"1、编译型语言\"><a href=\"#1、编译型语言\" class=\"headerlink\" title=\"1、编译型语言\"></a>1、编译型语言</h3><ul>\n<li><p>定义：需要事先通过编译器<strong>把所有的代码一次性翻译（编译&#x2F;转换）好</strong>，然后整体执行。比如 exe 文件。</p>\n</li>\n<li><p>优点：执行效率高，运行更快。</p>\n</li>\n<li><p>不足：移植性不好，不跨平台；编译之后如果需要修改就需要整个模块重新编译。</p>\n</li>\n<li><p>编译型语言举例：C、C++</p>\n</li>\n</ul>\n<p>比如说，c 语言的代码文件是<code>.c</code>后缀，翻译之后文件是<code>.obj</code>后缀，系统执行的是 obj 文件；再比如， java 语言的代码文件是<code>.java</code>后缀，翻译之后的文件是<code>.class</code>后缀。（但是，Java 语言不是严格的 编译型语言，这个一会儿会讲）</p>\n<p>以 C 语言的<code>hello.c</code>来举例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> <span class=\"type\">const</span> *argv[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello world!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于以上 C 代码，main 是程序入口，实现的功能是打印字符串<code>hello world</code>到屏幕上，编译和执行过程如下：</p>\n<ol>\n<li>C 语言代码经过预处理（比如依赖处理、宏替换）。以上方代码示例，<code>#include&lt;stdio.h&gt;</code>会在预处理阶段被替换。</li>\n<li>编译：编译器会把 C 语言翻译成汇编程序。一条 C 语言通常被编译为多条汇编代码，同时编译器会对程序进行优化，生成目标汇编程序。</li>\n<li>汇编语言通过汇编器再汇编成目标程序<code>hello.o</code>。</li>\n<li>链接：程序中往往包含一些共享目标文件，如示例代码中的<code>printf()</code>函数位于静态库，需要经过链接器进行链接。</li>\n</ol>\n<p><img src=\"https://img.smyhvae.com/20211030-0031-2.png\" alt=\"20211030-0031-2\"></p>\n<p>（上方图片的来源：<a href=\"https://www.jianshu.com/p/230093183f47\">JavaScript 基础-基本概念</a> ）</p>\n<p><img src=\"http://img.smyhvae.com/20211030-0026-2.png\" alt=\"20211030-0026-2\"></p>\n<p>（上方图片的来源：<a href=\"https://p.0x06.cn/zh/program/\">编译型语言</a> ）</p>\n<h3 id=\"2、解释型语言\"><a href=\"#2、解释型语言\" class=\"headerlink\" title=\"2、解释型语言\"></a>2、解释型语言</h3><ul>\n<li><p>定义：在运行过程中（runtime）通过解释器<strong>边翻译边执行</strong>（也就是逐行翻译：翻译一行，执行一行），不需要事先一次性翻译。</p>\n</li>\n<li><p>优点：移植性好，跨平台。</p>\n</li>\n<li><p>缺点：运行速度不如编译型语言。</p>\n</li>\n<li><p>解释型语言举例：JavaScript、PHP、Python。</p>\n</li>\n</ul>\n<h3 id=\"Java-语言\"><a href=\"#Java-语言\" class=\"headerlink\" title=\"Java 语言\"></a>Java 语言</h3><p>Java 语言是属于半编译半解释型语言。</p>\n<p>翻译过程：</p>\n<p>（1）编译：<code>.java</code>代码文件先通过 javac 命令编译成<code>.class</code>文件。</p>\n<p>（2）执行：<code>.class</code>文件再通过 jvm 虚拟机，解释执行。有了 jvm 的存在，让 java 跨平台了。</p>\n","text":"编程语言的概念编程编程：让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。计算机程序：就是计算机所执行的一系列的指令集合，而程序全部都是用我们所掌握的语言来编写的，所以人们如果要控制计算机，则需要通过计算机语言向计算机发出命令。计算机语言计算机语言：","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"01-JavaScript简介","slug":"JavaScript/01-JavaScript简介","date":"2023-02-15T12:06:59.436Z","updated":"2023-02-15T12:10:20.552Z","comments":true,"path":"api/articles/JavaScript/01-JavaScript简介.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"JavaScript-历史和发展\"><a href=\"#JavaScript-历史和发展\" class=\"headerlink\" title=\"JavaScript 历史和发展\"></a>JavaScript 历史和发展</h2><p>Web 前端有三层：</p>\n<ul>\n<li><p>HTML：从语义的角度，描述页面<strong>结构</strong></p>\n</li>\n<li><p>CSS：从审美的角度，描述<strong>样式</strong>（美化页面）</p>\n</li>\n<li><p>JavaScript（简称 JS）：从交互的角度，描述<strong>行为</strong>（实现业务逻辑和页面控制）</p>\n</li>\n</ul>\n<h2 id=\"JavaScript-介绍\"><a href=\"#JavaScript-介绍\" class=\"headerlink\" title=\"JavaScript 介绍\"></a>JavaScript 介绍</h2><h3 id=\"JavaScript-入门易学性\"><a href=\"#JavaScript-入门易学性\" class=\"headerlink\" title=\"JavaScript 入门易学性\"></a>JavaScript 入门易学性</h3><ul>\n<li><p>JavaScript 对初学者比较友好。可以使用任何文本编辑工具编写，只需要浏览器就可以执行程序。</p>\n</li>\n<li><p>JavaScript 是有界面效果的（相比之下，C 语言只有白底黑字）。</p>\n</li>\n<li><p>JavaScript 的入门较简单（进阶不易）。比如，JS 是<strong>弱变量类型</strong>的语言，变量只需要用 var&#x2F;let&#x2F;const 来声明。而 Java 中变量的声明，要根据变量的类型来定义。</p>\n</li>\n</ul>\n<p>Java 中需要这样定义变量：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a;</span><br><span class=\"line\"><span class=\"type\">float</span> a;</span><br><span class=\"line\"><span class=\"type\">double</span> a;</span><br><span class=\"line\">String a;</span><br><span class=\"line\"><span class=\"type\">boolean</span> a;</span><br></pre></td></tr></table></figure>\n\n<p>而 JS 中，只需要用一种方式来定义：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5 写法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6 写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript-既是前端语言，又是后端语言\"><a href=\"#JavaScript-既是前端语言，又是后端语言\" class=\"headerlink\" title=\"JavaScript 既是前端语言，又是后端语言\"></a>JavaScript 既是前端语言，又是后端语言</h3><p>当 JavaScript 运行在用户的终端网页，而不是运行在服务器上的时候，我们称之为“<strong>前端语言</strong>”。前端语言是服务于页面的显示和交互，不能直接操作数据库。</p>\n<p><strong>后端语言</strong>是运行在服务器上的，比如 Java、C++、PHP 等等，这些语言都能够操作数据库（对数据库进行“增删改查”），并在后台执行各种任务。</p>\n<p>另外，Node.js 是用 JavaScript 开发的，我们也可以用 Node.js 技术进行服务器端编程。</p>\n<h3 id=\"JavaScript-的组成\"><a href=\"#JavaScript-的组成\" class=\"headerlink\" title=\"JavaScript 的组成\"></a>JavaScript 的组成</h3><p>JavaScript 基础分为三个部分：</p>\n<ul>\n<li><p><strong>ECMAScript</strong>：JavaScript 的<strong>语法标准</strong>。包括变量、表达式、运算符、函数、if 语句、for 语句等。</p>\n</li>\n<li><p><strong>DOM</strong>：Document Object Model（文档对象模型），JS 操作<strong>页面上的元素</strong>（标签）的 API。比如让盒子移动、变色、改变大小、轮播图等等。</p>\n</li>\n<li><p><strong>BOM</strong>：Browser Object Model（浏览器对象模型），JS 操作<strong>浏览器部分功能</strong>的 API。通过 BOM 可以操作浏览器窗口，比如弹框、控制浏览器跳转、获取浏览器分辨率等等。</p>\n</li>\n</ul>\n<p>通俗理解就是：ECMAScript 是 JS 的语法；DOM 和 BOM 是浏览器运行环境为 JS 提供的 API。</p>\n<h2 id=\"JavaScript-的特点\"><a href=\"#JavaScript-的特点\" class=\"headerlink\" title=\"JavaScript 的特点\"></a>JavaScript 的特点</h2><h3 id=\"特点-1：解释型语言\"><a href=\"#特点-1：解释型语言\" class=\"headerlink\" title=\"特点 1：解释型语言\"></a>特点 1：解释型语言</h3><p>JavaScript 简称 JS，是前端开发的一门脚本语言（解释型语言）。</p>\n<p><strong>解释型语言</strong>的意思是：程序执行之前，不需要事先被翻译为机器码；而是在运行时，边翻译边执行（翻译一行，执行一行）。关于解释型语言的详细介绍，上一篇文章有介绍。</p>\n<p>为什么 JS 是解释型语言呢？这和浏览器的工作原理有关。浏览器中有一个专门的“JS 解析器”可以让 JS 边解析边执行。</p>\n<p>由于少了事先编译这一步骤，所以解释型语言开发起来尤为方便，但是解释型语言运行较慢也是它的劣势。不过解释型语言中使用了 JIT 技术，使得运行速度得以改善。</p>\n<h3 id=\"特点-2：单线程\"><a href=\"#特点-2：单线程\" class=\"headerlink\" title=\"特点 2：单线程\"></a>特点 2：单线程</h3><h3 id=\"特点-3：ECMAScript-标准\"><a href=\"#特点-3：ECMAScript-标准\" class=\"headerlink\" title=\"特点 3：ECMAScript 标准\"></a>特点 3：ECMAScript 标准</h3><p>ECMAScript 是一种由 ECMA 国际（前身为欧洲计算机制造商协会,英文名称是 European Computer Manufacturers Association）制定和发布的脚本语言规范。</p>\n<p>JavaScript 是由公司开发而成的，问题是不便于其他的公司拓展和使用。所以欧洲的这个 ECMA 的组织，牵头制定 JavaScript 的标准，取名为 ECMAScript。</p>\n<p>简单来说，<strong>ECMAScript 不是一门语言，而是一个标准</strong>。ECMAScript 规定了 JS 的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套 JS 语法工业标准。</p>\n<p>ECMAScript 在 2015 年 6 月，发布了 ECMAScript 6 版本（ES6），语言的能力更强，包含了很多新特性），但也要考虑它的浏览器兼容性问题。</p>\n<p>ECMA 赋予了 JavaScript 新的能力和活力。</p>\n","text":"JavaScript 历史和发展Web 前端有三层：HTML：从语义的角度，描述页面结构CSS：从审美的角度，描述样式（美化页面）JavaScript（简称 JS）：从交互的角度，描述行为（实现业务逻辑和页面控制）JavaScript 介绍JavaScript 入门易学性Java","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"02-JavaScript：hello world","slug":"JavaScript/02-开始写JavaScript：hello world","date":"2023-02-15T12:06:59.438Z","updated":"2023-02-15T12:12:38.715Z","comments":true,"path":"api/articles/JavaScript/02-开始写JavaScript：hello world.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180116_1735.gif","content":"<h2 id=\"开始写第一行-JavaScript：hello-world\"><a href=\"#开始写第一行-JavaScript：hello-world\" class=\"headerlink\" title=\"开始写第一行 JavaScript：hello world\"></a>开始写第一行 JavaScript：hello world</h2><p>JS 代码的书写位置在哪里呢？引入 JS 代码，有哪几种方式？有三种方式：（和 CSS 的引入方式类似）</p>\n<ol>\n<li><p><strong>行内式</strong>：写在标签内部。</p>\n</li>\n<li><p><strong>内嵌式</strong>（内联式）：写在 head 标签中。</p>\n</li>\n<li><p><strong>外链式</strong>：引入外部 JS 文件。</p>\n</li>\n</ol>\n<h3 id=\"方式-1：行内式\"><a href=\"#方式-1：行内式\" class=\"headerlink\" title=\"方式 1：行内式\"></a>方式 1：行内式</h3><p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;点我点我&quot;</span> onclick=<span class=\"string\">&quot;alert(&#x27; Hello 方式1&#x27;)&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>完整的可执行代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;点我点我&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;alert(&#x27; Hello 方式1&#x27;)&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>分析</strong>：</p>\n<ul>\n<li><p>可以将单行或少量 JS 代码写在 HTML 标签的事件属性中（以 on 开头的属性），比如放在上面的 <code>onclick</code>点击事件中。</p>\n</li>\n<li><p>这种书写方式，不推荐使用，原因是：可读性差，尤其是需要编写大量 JS 代码时，很难维护；引号多层嵌套时，也容易出错。</p>\n</li>\n<li><p>关于代码中的「引号」，在 HTML 标签中，推荐使用双引号，JS 中我们推荐使用单引号。</p>\n</li>\n</ul>\n<h3 id=\"方式-2、内嵌式（内联式）\"><a href=\"#方式-2、内嵌式（内联式）\" class=\"headerlink\" title=\"方式 2、内嵌式（内联式）\"></a>方式 2、内嵌式（内联式）</h3><p>我们可以在 HTML 页面的 <code>&lt;body&gt;</code> 标签里放入<code>&lt;script type=”text/javascript”&gt;&lt;/script&gt;</code>标签对，并在<code>&lt;script&gt;</code>里书写 JavaScript 代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 在这里写 js 代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;千古壹号 hello 方式2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao hello 方式2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>分析</strong>：</p>\n<ul>\n<li><p>text 表示纯文本，因为 JavaScript 代码本身就是纯文本。</p>\n</li>\n<li><p>可以将多行 JS 代码写到 <code>&lt;script&gt;</code> 标签中。</p>\n</li>\n<li><p>内嵌式 JS 是学习时常用的方式。</p>\n</li>\n</ul>\n<h3 id=\"方式-3：外链式\"><a href=\"#方式-3：外链式\" class=\"headerlink\" title=\"方式 3：外链式\"></a>方式 3：外链式</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 外链式：引入外部的 js 文件：这个 utils.js 文件与当前的 html 文件，处于同一级目录 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;utils.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>分析</strong>：</p>\n<ul>\n<li>上面这段代码，依然是放到 body 标签里，可以和内嵌的 JS 代码并列。</li>\n<li>上方代码的 script 标签已经引入了外部 JS 文件，所以这个标签里面，不可以再写 JS 代码。</li>\n</ul>\n<p><strong>总结</strong>：</p>\n<p>我们在实战开发中，基本都是采用方式 3，因为将 html 文件和 js 文件分开的方式，有利于代码的结构化和复用，符合高内聚、低耦合的思想。很少会有人把一大堆 JS 代码塞到 html 文件里。</p>\n<h3 id=\"关于-window-onload：先加载，最后执行\"><a href=\"#关于-window-onload：先加载，最后执行\" class=\"headerlink\" title=\"关于 window.onload：先加载，最后执行\"></a>关于 window.onload：先加载，最后执行</h3><p>上面的三种方式，有个共同的地方是：JS 代码都是写在<code>&lt;/body&gt;</code>中的，准确来说，是在页面标签元素的后面，在 body<strong>结束标签</strong>的前面。</p>\n<p>为什么一般是按这样的顺序来写呢？这是因为：浏览器默认会<strong>从上至下</strong>解析网页（这句话很重要）。当你<strong>需要通过 JS 来操作界面上的标签元素</strong>的时候，假如将 JS 代码、<code>&lt;script&gt;</code>标签写到<code>&lt;head&gt;</code>标签中，或者写在页面标签元素的前面，那么这样的 JS 是无效的，因为标签元素在此时都还没来得及加载，自然无法操作这个元素。</p>\n<p><strong>重点：</strong></p>\n<p>当你<strong>需要通过 JS 来操作界面上的标签元素</strong>的时候，如果实在想把 JS 写到<code>&lt;head&gt;</code>标签中，那么就必须用 window.onload 将 JS 代码进行包裹。代码格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  window.onload = function()&#123;</span><br><span class=\"line\">    // 这里可以写操作界面元素的JS代码，等页面加载完毕后再执行</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>window.onload</strong>的含义是：等界面上所有内容都加载完毕后（不仅要等文本加载完毕，而且要等图片也要加载完毕），再执行<code>&#123;&#125;</code>中的代码。做到了<strong>先加载，最后执行</strong>，也就是：<strong>等页面加载完毕后再执行</strong>。</p>\n<p>当然，我们可以根据具体需求，将 window.onload 写在 <code>&lt;head&gt;</code>标签中，或者写在<code>&lt;script&gt;</code>标签中。</p>\n<h2 id=\"JavaScript-一些简单的语法规则\"><a href=\"#JavaScript-一些简单的语法规则\" class=\"headerlink\" title=\"JavaScript 一些简单的语法规则\"></a>JavaScript 一些简单的语法规则</h2><p>学习程序，是有规律可循的，程序会有有相同的部分，这些部分就是一种规定，不能更改，我们称之为：语法。我们先来了解一个简单的语法规则。</p>\n<p>1、JS 对换行、缩进、空格不敏感。每一条语句以分号结尾。</p>\n<p>也就是说：</p>\n<p>代码一：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;今天蓝天白云&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;我很高兴&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>等价于代码二：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;今天蓝天白云&#x27;</span>);<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;我很高兴&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>2、每一条语句末尾要加上<strong>分号</strong>。虽然分号不是必须加的，但如果不写分号，浏览器会自动添加分号，导致消耗一些系统资源和性能，甚至有可能<strong>添加错误</strong>。</p>\n<p>3、所有的符号，都是英文的。比如<strong>括号</strong>、引号、分号。</p>\n<p>如果你用的是搜狗拼音，<strong>建议不要用 shift 切换中英文</strong>（可以在搜狗软件里进行设置），不然很容易输入中文的分号；建议用 ctrl+space 切换中英文输入法。</p>\n<p>4、JS 严格区分大小写。</p>\n<h2 id=\"前端代码的注释\"><a href=\"#前端代码的注释\" class=\"headerlink\" title=\"前端代码的注释\"></a>前端代码的注释</h2><p>注释：即解释、注解。注释有利于提高代码的可读性，且有利于程序员之间的沟通。</p>\n<p>注释可以用来解释某一段代码的功能和作用；通过注释，还可以补充代码中未体现出来的部分。</p>\n<p>注释可以是任何文字，可以写中文。</p>\n<p><strong>我们不要把 HTML、CSS、JavaScript 三者的注释格式搞混淆了</strong>。</p>\n<h3 id=\"HTML-的注释\"><a href=\"#HTML-的注释\" class=\"headerlink\" title=\"HTML 的注释\"></a>HTML 的注释</h3><p>格式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 我是 HTML 注释  --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--头部开始--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--头部结束--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--内容开始--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--内容结束--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--底部开始--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--底部结束--&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS-的注释\"><a href=\"#CSS-的注释\" class=\"headerlink\" title=\"CSS 的注释\"></a>CSS 的注释</h3><p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"comment\">/* 我是 CSS 注释 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">font-style</span>: italic;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：CSS 只有<code>/* */</code>这种注释，没有<code>//</code>这种注释。而且注释要写在<code>&lt;style&gt;</code>标签里面才算生效。</p>\n<h3 id=\"JavaScript-的注释\"><a href=\"#JavaScript-的注释\" class=\"headerlink\" title=\"JavaScript 的注释\"></a>JavaScript 的注释</h3><p>单行注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我是注释</span></span><br></pre></td></tr></table></figure>\n\n<p>多行注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t多行注释1</span></span><br><span class=\"line\"><span class=\"comment\">\t多行注释2</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<p>补充：VS Code 中，单行注释的快捷键是「Ctrl + &#x2F;」，多行注释的默认快捷键是「Alt + Shift + A」。</p>\n<p>当然，如果你觉得多行注释的默认快捷键不方便，我们还可以修改默认快捷键。操作如下：</p>\n<p>VS Code –&gt; 首选项 –&gt; 键盘快捷方式 –&gt; 查找“注释”这两个字 –&gt; 将原来的快捷键修改为其他的快捷键，比如「Ctrl + Shift + &#x2F;」。</p>\n<h3 id=\"对注释的认知\"><a href=\"#对注释的认知\" class=\"headerlink\" title=\"对注释的认知\"></a>对注释的认知</h3><p>为什么要写注释：</p>\n<ol>\n<li><p>所有注释都是必要的吗？当然不是。注释不应该用来解释某些代码正在做什么。如果代码无法清楚到去解释自己时，那么代码需要变得更简单。有一些例外，比如正则表达式和复杂算法通常会从解释他们正在做什么事情的注释中获益很多。</p>\n</li>\n<li><p>注释用于解释为什么某些代码存在时很有用。大多数注释都是针对代码本身无法包含的信息，例如决策背后的推理、业务流程、业务逻辑、注意事项、防踩坑指南、参考链接。</p>\n</li>\n<li><p>注释即文档，需要持续更新维护，新陈代谢。文档也会过期，但不能因噎废食。即便文档过期，至少它记载了曾经的开发记录。</p>\n</li>\n</ol>\n<p>推荐阅读：</p>\n<ul>\n<li>开发者代码审查 review 指南：<a href=\"https://jimmysong.io/eng-practices/docs/review/\">https://jimmysong.io/eng-practices/docs/review/</a></li>\n</ul>\n<h2 id=\"JavaScript-输出语句\"><a href=\"#JavaScript-输出语句\" class=\"headerlink\" title=\"JavaScript 输出语句\"></a>JavaScript 输出语句</h2><h3 id=\"弹窗：alert-语句\"><a href=\"#弹窗：alert-语句\" class=\"headerlink\" title=\"弹窗：alert()语句\"></a>弹窗：alert()语句</h3><p>我们要学习的第一个语句，就是 alert 语句。</p>\n<p>代码举例如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;千古壹号&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>alert</strong>（英文翻译为“警报”）的用途：<strong>弹出“警告框”</strong>。它会在弹窗中显示一条信息，并等待用户按下 “OK”。</p>\n<p><code>alert(&quot;&quot;)</code>弹窗的效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_1735.gif\"></p>\n<p>这个弹窗，在 IE 浏览器中长这样：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_1906.png\"></p>\n<p>上面的代码中，如果写了两个 alert()语句，则网页的效果是：弹出第一个警告框，点击确定后，继续弹出第二个警告框。</p>\n<h3 id=\"弹窗：confirm-语句（含确认-x2F-取消）\"><a href=\"#弹窗：confirm-语句（含确认-x2F-取消）\" class=\"headerlink\" title=\"弹窗：confirm()语句（含确认&#x2F;取消）\"></a>弹窗：confirm()语句（含确认&#x2F;取消）</h3><p>代码举例如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var result = confirm(&#x27;你听说过千古壹号吗？&#x27;);</span><br><span class=\"line\">console.log(result);</span><br></pre></td></tr></table></figure>\n\n<p>代码运行后，页面上会显示一个弹窗。弹窗上有“确认”和“取消”两个按钮，点击“确定”返回 <code>true</code>，点击“取消”返回 <code>false</code>。</p>\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20211031-1537.gif\" alt=\"20211031-1537\"></p>\n<h3 id=\"弹出输入框：prompt-语句\"><a href=\"#弹出输入框：prompt-语句\" class=\"headerlink\" title=\"弹出输入框：prompt()语句\"></a>弹出输入框：prompt()语句</h3><p><code>prompt()</code>就是专门弹出能够让用户输入的对话框。用得少，测试的时候偶尔会用。</p>\n<p>JS 代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请随便输入点什么东西吧&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，用户输入的内容，将被传递到变量 a 里面，并在控制台打印出来。</p>\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2230.gif\"></p>\n<p><strong>alert()和 prompt()的区别：</strong></p>\n<ul>\n<li>alert() 语句中可以输出数字和字符串，如果要输出字符串，则必须用引号括起来；prompt()语句中，用户不管输入什么内容，都是字符串。</li>\n<li>prompt() 会返回用户输入的内容。我们可以用一个变量，来接收用户输入的内容。</li>\n</ul>\n<h3 id=\"网页内容区域输出：document-write-语句\"><a href=\"#网页内容区域输出：document-write-语句\" class=\"headerlink\" title=\"网页内容区域输出：document.write()语句\"></a>网页内容区域输出：document.write()语句</h3><p>代码举例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.write(&#x27;千古前端图文教程&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>页面效果：</p>\n<p><img src=\"http://img.smyhvae.com/20211031_1543.png\" alt=\"20211031_1543\"></p>\n<h3 id=\"控制台输出：console-log-打印日志\"><a href=\"#控制台输出：console-log-打印日志\" class=\"headerlink\" title=\"控制台输出：console.log() 打印日志\"></a>控制台输出：console.log() 打印日志</h3><p><code>console.log()</code>表示在控制台中输出。console 表示“控制台”，log 表示“输出”。括号里可以写字符串、数字、变量。</p>\n<p>控制台是程序员调试程序的地方，比如使用 console 语句打印日志，测试程序是否运行正常。</p>\n<p>在 Chrome 浏览器中，按 F12 即可打开控制台，选择「console」栏，即可看到打印的内容。</p>\n<p><code>console.log(&quot;&quot;)</code>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2008.gif\"></p>\n<p>console 语句可以设置不同的打印等级：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;千古壹号1&#x27;</span>); <span class=\"comment\">//普通打印</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;千古壹号2&#x27;</span>); <span class=\"comment\">//警告打印</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;千古壹号3&#x27;</span>); <span class=\"comment\">//错误打印</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"https://img.smyhvae.com/20211031_1552.png\" alt=\"20211031_1552\"></p>\n<p>上图中，不同的打印等级，区别不大，只是颜色背景上的区别，方便肉眼区分、过滤信息。</p>\n<p>普通人是不会在意控制台的，但是有些网站另藏玄机。比如百度首页的控制台，悄悄地放了一段招聘信息的彩蛋，挺有意思：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2010.png\"></p>\n<p>做前端开发时需要经常使用控制台做调试，我们甚至可以直接在控制台输入 JS 语句，然后打印执行结果。</p>\n<p><strong>总结</strong>：alert() 主要用来显示消息给用户，console.log() 用来给程序员做调试用。</p>\n","text":"开始写第一行 JavaScript：hello worldJS 代码的书写位置在哪里呢？引入 JS 代码，有哪几种方式？有三种方式：（和 CSS 的引入方式类似）行内式：写在标签内部。内嵌式（内联式）：写在 head 标签中。外链式：引入外部 JS 文件。方式 1：行内式代码举例","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"04-标识符、关键字、保留字","slug":"JavaScript/04-标识符、关键字、保留字","date":"2023-02-15T12:06:59.442Z","updated":"2023-02-15T12:15:54.804Z","comments":true,"path":"api/articles/JavaScript/04-标识符、关键字、保留字.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"变量的命名规则（重要）\"><a href=\"#变量的命名规则（重要）\" class=\"headerlink\" title=\"变量的命名规则（重要）\"></a>变量的命名规则（重要）</h2><p>JS是大小敏感的语言。也就是说 A 和 a 是两个变量。大写字母是可以使用的，比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> A = <span class=\"number\">250</span>; <span class=\"comment\">//变量1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">888</span>; <span class=\"comment\">//变量2</span></span><br></pre></td></tr></table></figure>\n\n<p>我们来整理一下<strong>变量的命名规则</strong>，非常重要。</p>\n<p>必须遵守：</p>\n<ul>\n<li>只能由字母(A-Z、a-z)、数字(0-9)、下划线(_)、美元符( $ )组成。</li>\n<li>不能以数字开头。必须以字母(A-Z、a-z)、下划线(_)或者美元符( $ )开头。变量名中不允许出现空格。尤其注意，变量名中不能出现<strong>中划线</strong><code>-</code>，很多人写了多年代码都不知道这一点，让人大跌眼镜。</li>\n<li>严格区分大小写（JS 是区分大小写的语言）。</li>\n<li>不能使用 JS 语言中保留的「关键字」和「保留字」作为变量名。下一篇文章会讲。</li>\n<li>变量名长度不能超过 255 个字符。</li>\n<li></li>\n<li>汉语可以作为变量名。但是不建议使用，因为 low。</li>\n</ul>\n<p>建议遵守：</p>\n<ul>\n<li><p>命名要有可读性，方便顾名思义。</p>\n</li>\n<li><p>建议用驼峰命名法。比如 getElementById、getUserInfo、aaaOrBbbAndCcc</p>\n</li>\n</ul>\n<p><strong>补充</strong>：</p>\n<p>1、不能以数字开头，是为了把数字和字母区分开。</p>\n<p>2、JS底层保存标识符的时候，是采用的 Unicode 编码。所以理论上讲，在遵守命名规则的前提下，utf-8中包含的所有内容都可以作为标识符。</p>\n<h2 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h2><p><strong>标识符</strong>：在 JS 中所有的可以由我们<strong>自主命名</strong>的都可以称之为标识符。包括：<strong>变量名、函数名、属性名、参数名</strong>都是属于标识符。</p>\n<p>通俗来讲，标识符就是我们写代码时为某些东西起的名字。类似于人出生的时候，起个人名。</p>\n<p><strong>标识符的命名规则</strong>和变量的命令规则是一样的。关于变量的命名规则，详见上一段。</p>\n<p>标识符不能使用语言中保留的<strong>关键字</strong>及<strong>保留字</strong>。</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p><strong>关键字</strong>：被JS赋予了特殊含义的单词。也就是说，关键字是 JS 本身已经使用了的单词，我们不能再用它们充当变量名、函数名等标识符。关键字在开发工具中会显示特殊的颜色。</p>\n<p>JS 中的关键字如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>、<span class=\"keyword\">else</span>、switch、<span class=\"built_in\">break</span>、<span class=\"keyword\">case</span>、default、<span class=\"keyword\">for</span>、<span class=\"keyword\">in</span>、<span class=\"keyword\">do</span>、<span class=\"keyword\">while</span>、</span><br><span class=\"line\"></span><br><span class=\"line\">var、<span class=\"built_in\">let</span>、const、void、<span class=\"keyword\">function</span>、<span class=\"built_in\">continue</span>、<span class=\"built_in\">return</span>、</span><br><span class=\"line\"></span><br><span class=\"line\">try、catch、finally、throw、debugger、</span><br><span class=\"line\"></span><br><span class=\"line\">this、typeof、instanceof、delete、with、</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span>、new、class、extends、super、with、yield、import、static、</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"literal\">true</span>、<span class=\"literal\">false</span>、null、undefined、NaN</span><br></pre></td></tr></table></figure>\n<h2 id=\"保留字\"><a href=\"#保留字\" class=\"headerlink\" title=\"保留字\"></a>保留字</h2><p><strong>保留字</strong>：实际上就是预留的“关键字”。它们虽然现在还不是关键字，但是未来可能会成为关键字。同样不能用它们当充当变量名、函数名等标识符。</p>\n<p>JS 中的保留字如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum、await</span><br><span class=\"line\"></span><br><span class=\"line\">abstract、boolean、byte、char、double、final、<span class=\"built_in\">float</span>、goto、int、long、native、short、synchronized、transient、volatile、</span><br><span class=\"line\"></span><br><span class=\"line\">arguments <span class=\"built_in\">eval</span> Infinity</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下关键字只在严格模式中被当成保留字，在ES6中是属于关键字</span></span><br><span class=\"line\">implements、interface、package、private、protected、public</span><br></pre></td></tr></table></figure>\n\n<p>当你在网上搜“JS保留字”的时候，你会找到很多版本，每个版本都不一样，各有各的说法。<strong>如果有不一样的地方，请以我写的为准</strong>。</p>\n<p>其实，以谁的版本作为标准并不重要，因为有些单词到底是<strong>关键字</strong>还是<strong>保留字</strong>，并没有严格的界限。JS 关于保留字的规则非常复杂，上放列表中的一些单词在特殊情况下其实是可以使用的。</p>\n<p>我们只需要记住一点：上面提到的所有<strong>关键字</strong>和<strong>保留字</strong>，我们都不要用它们作为变量名或者参数名。不要尝试这些奇怪的做法。</p>\n<p>关于更多：</p>\n<ul>\n<li><p><a href=\"https://www.zhihu.com/question/472379938\">知乎问答：undefined是保留字吗？</a></p>\n</li>\n<li><p>书籍《<a href=\"https://book.douban.com/subject/35469273/\">JavaScript 悟道</a>》的第一章：保留字部分。</p>\n</li>\n</ul>\n","text":"变量的命名规则（重要）JS是大小敏感的语言。也就是说 A 和 a 是两个变量。大写字母是可以使用的，比如：1<br>2<br>var A = 250; //变量1<br>var a = 888; //变量2<br>我们来整理一下变量的命名规则，非常重要。必须遵守：只能由字母(A-","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"05-变量的数据类型：基本数据类型和引用数据类型","slug":"JavaScript/05-变量的数据类型：基本数据类型和引用数据类型","date":"2023-02-15T12:06:59.445Z","updated":"2023-02-15T12:16:27.637Z","comments":true,"path":"api/articles/JavaScript/05-变量的数据类型：基本数据类型和引用数据类型.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"数据分类\"><a href=\"#数据分类\" class=\"headerlink\" title=\"数据分类\"></a>数据分类</h2><p>数据分为：静态数据、动态数据。</p>\n<h3 id=\"静态数据\"><a href=\"#静态数据\" class=\"headerlink\" title=\"静态数据\"></a>静态数据</h3><p>静态数据是指一些永久性的数据。一般是以文件的形式存储在硬盘上，比如文档、照片、视频等文件。</p>\n<p>电脑关闭后，静态数据仍然还在。只要不主动删掉数据或者硬盘没损坏，这些数据就一直都在。</p>\n<h3 id=\"动态数据\"><a href=\"#动态数据\" class=\"headerlink\" title=\"动态数据\"></a>动态数据</h3><p>动态数据是在程序运行过程中，动态产生的临时数据，这些数据可能随时发生变化。一般存储在内存中。</p>\n<p>电脑关闭后，这些数据会被清除。</p>\n<p>为何不把应用程序的动态数据加载到硬盘中执行呢？这主要是因为，内存的访问速度比硬盘快无数倍。</p>\n<h2 id=\"变量的数据类型\"><a href=\"#变量的数据类型\" class=\"headerlink\" title=\"变量的数据类型\"></a>变量的数据类型</h2><h3 id=\"为什么需要数据类型\"><a href=\"#为什么需要数据类型\" class=\"headerlink\" title=\"为什么需要数据类型\"></a>为什么需要数据类型</h3><p>在计算机中，不同的数据所需占用的存储空间不同，为了充分利用存储空间，于是定义了不同的数据类型。而且，不同的数据类型，寓意也不同。</p>\n<p>我们都知道，无论这个变量是字符串类型，还是数字类型，我们都可以直接用 <code>var</code> 去定义它。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;hello word&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">123</span>;</span><br></pre></td></tr></table></figure>\n\n<p>为什么可以这样做呢？这是因为：JavaScript 是一种「弱类型语言」，或者说是一种「动态语言」，这意味着不需要提前声明变量的类型，在程序运行过程中，类型会自动被确定。</p>\n<p><strong>JS 的变量数据类型，是在程序运行的过程中，根据等号右边的值来确定的</strong>。而且，变量的数据类型是可以变化的。比如说：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">name = <span class=\"number\">123</span>; <span class=\"comment\">// 强制将变量 name 修改为 数字类型</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS-中一共有八种数据类型\"><a href=\"#JS-中一共有八种数据类型\" class=\"headerlink\" title=\"JS 中一共有八种数据类型\"></a>JS 中一共有八种数据类型</h3><ul>\n<li><p><strong>基本数据类型（值类型）</strong>：String 字符串、Number 数值、BigInt 大型数值、Boolean 布尔值、Null 空值、Undefined 未定义、Symbol。</p>\n</li>\n<li><p><strong>引用数据类型（引用类型）</strong>：Object 对象。</p>\n</li>\n</ul>\n<p>注意：内置对象 Function、Array、Date、RegExp、Error 等都是属于 Object 类型。也就是说，除了那七种基本数据类型之外，其他的，都称之为 Object 类型。</p>\n<p>BigInt 和 Symbol 是ES6中新增的类型</p>\n<blockquote>\n<p>面试问：引用数据类型有几种？</p>\n</blockquote>\n<blockquote>\n<p>面试答：只有一种，即 Object 类型。</p>\n</blockquote>\n<p><strong>数据类型之间最大的区别</strong>：</p>\n<ul>\n<li><p>基本数据类型：参数赋值的时候，传数值。</p>\n</li>\n<li><p>引用数据类型：参数赋值的时候，传地址。</p>\n</li>\n</ul>\n<h2 id=\"一个经典的例子\"><a href=\"#一个经典的例子\" class=\"headerlink\" title=\"一个经典的例子\"></a>一个经典的例子</h2><p><strong>基本数据类型举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">23</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\"></span><br><span class=\"line\">a++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：24</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 打印结果：23</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的代码中：a 和 b 都是基本数据类型，让 b 等于 a，然后<strong>改变 a 的值之后，发现 b 的值并没有被改变</strong>。</p>\n<p>但是在引用数据类型中，就不同了，我们来看一看。</p>\n<p><strong>引用数据类型举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;smyh&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 让 obj2 等于 obj1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = obj1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改 obj1 的 name 属性</span></span><br><span class=\"line\">obj1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;vae&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1.<span class=\"property\">name</span>); <span class=\"comment\">// 打印结果：vae</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj2.<span class=\"property\">name</span>); <span class=\"comment\">// 打印结果：vae</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的代码中：obj1 和 obj2 都是引用数据类型，让 obj2 等于 obj1，然后<strong>修改 obj1.name 的值之后，发现 obj2.name 的值也发生了改变</strong>。</p>\n<p>从上面的例子中，可以反映出，基本数据类型和引用数据类型是有区别的。</p>\n<p>那到底有什么区别呢？我们进一步往下看。</p>\n<h2 id=\"栈内存和堆内存\"><a href=\"#栈内存和堆内存\" class=\"headerlink\" title=\"栈内存和堆内存\"></a>栈内存和堆内存</h2><p>我们首先记住一句话：JS 中，所有的<strong>变量</strong>都是保存在<strong>栈内存</strong>中的。</p>\n<p>然后来看看下面的区别。</p>\n<p><strong>基本数据类型</strong>：</p>\n<p>基本数据类型的值，直接保存在栈内存中。值与值之间是独立存在，修改一个变量不会影响其他的变量。</p>\n<p><strong>引用数据类型</strong>：</p>\n<p>对象是保存到<strong>堆内存</strong>中的。每创建一个新的对象，就会在堆内存中开辟出一个新的空间；而<strong>变量保存了对象的内存地址</strong>（对象的引用），保存在栈内存当中。如果两个变量保存了同一个对象的引用，当一个通过一个变量修改属性时，另一个也会受到影响。</p>\n","text":"数据分类数据分为：静态数据、动态数据。静态数据静态数据是指一些永久性的数据。一般是以文件的形式存储在硬盘上，比如文档、照片、视频等文件。电脑关闭后，静态数据仍然还在。只要不主动删掉数据或者硬盘没损坏，这些数据就一直都在。动态数据动态数据是在程序运行过程中，动态产生的临时数据，这些","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"03-常量和变量","slug":"JavaScript/03-常量和变量","date":"2023-02-15T12:06:59.441Z","updated":"2023-02-15T12:14:45.665Z","comments":true,"path":"api/articles/JavaScript/03-常量和变量.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180116_2020.png","content":"<h2 id=\"常量（字面量）：数字和字符串\"><a href=\"#常量（字面量）：数字和字符串\" class=\"headerlink\" title=\"常量（字面量）：数字和字符串\"></a>常量（字面量）：数字和字符串</h2><p><strong>常量</strong>也称之为“字面量”，是固定值，不可改变。看见什么，它就是什么。</p>\n<p>常量有下面这几种：</p>\n<ul>\n<li>数字常量（数值常量）</li>\n<li>字符串常量</li>\n<li>布尔常量</li>\n<li>自定义常量</li>\n</ul>\n<h3 id=\"数字常量\"><a href=\"#数字常量\" class=\"headerlink\" title=\"数字常量\"></a>数字常量</h3><p>数字常量非常简单，直接写数字就行，不需要任何其他的符号。既可以是整数，也可以是浮点数。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不需要加引号</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">996</span>); <span class=\"comment\">// 996是整数</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">3.14</span>); <span class=\"comment\">// 3.14是浮点数（即带了小数）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串常量\"><a href=\"#字符串常量\" class=\"headerlink\" title=\"字符串常量\"></a>字符串常量</h3><p>字符串常量就是用单引号或双引号括起来的内容。可以是单词、句子等，一定要加引号。在JS中，只要是单引号或双引号括起来的内容，都是字符串常量。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;996&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;千古壹号，永不止步&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>温馨提示：996 是数字，’996’是字符串。</p>\n<h3 id=\"布尔常量\"><a href=\"#布尔常量\" class=\"headerlink\" title=\"布尔常量\"></a>布尔常量</h3><p>布尔常量就是表达<strong>真</strong>或者<strong>假</strong>，在JS中用 true 和 false 来表达。</p>\n<p>布尔字面量举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;如果为真，就走这里面的代码);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义常量：const\"><a href=\"#自定义常量：const\" class=\"headerlink\" title=\"自定义常量：const\"></a>自定义常量：const</h3><p>自定义常量是ES6中新增的语法。它的语法格式是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> 常量名称 = 常量取值;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;壹号&#x27;</span>; <span class=\"comment\">// 定义常量name，它的取值是 壹号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name =  &#x27;许嵩&#x27;; // 既然 name 是常量，所以这一行是错误的写法，因为 name 无法被修改为其他的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 打印结果：壹号</span></span><br></pre></td></tr></table></figure>\n\n<p>后续ES6的时候，会深入学习 const 用法。</p>\n<h3 id=\"开发技巧：用变量定义常量\"><a href=\"#开发技巧：用变量定义常量\" class=\"headerlink\" title=\"开发技巧：用变量定义常量\"></a>开发技巧：用变量定义常量</h3><p>我们一般不会直接使用常量，否则会导致代码冗余、不易维护。如果多个地方要用到同一个常量，那就建议事先定义一个变量，用来保存这个常量；然后在需要的地方去引用这个变量就行了。另外，当我们学习了ES6中的 const 之后，还可以使用自定义常量达到目的。</p>\n<h2 id=\"变量的概念\"><a href=\"#变量的概念\" class=\"headerlink\" title=\"变量的概念\"></a>变量的概念</h2><p><strong>变量</strong>表示可以被修改的数据。我们通过「变量名」获取数据，甚至修改数据。</p>\n<p>变量还可以用来保存常量。</p>\n<p><strong>本质</strong>：变量是程序在内存中申请的一块用来存放数据的空间。打个比方，超市里的储物格就是变量, 在不同的时间段里, 储物格中存储的数据可以不一样。</p>\n<h2 id=\"变量的定义和赋值\"><a href=\"#变量的定义和赋值\" class=\"headerlink\" title=\"变量的定义和赋值\"></a>变量的定义和赋值</h2><p>定义变量是在告诉浏览器，我们需要一块内存空间，相当于生成超市里的储物格。</p>\n<p>给变量赋值就是往相当于往储物格里塞东西，可能今天上午塞的是面包🍞，下午就换成了蛋糕🍰。</p>\n<h3 id=\"变量的定义-x2F-声明（ES5）\"><a href=\"#变量的定义-x2F-声明（ES5）\" class=\"headerlink\" title=\"变量的定义&#x2F;声明（ES5）\"></a>变量的定义&#x2F;声明（ES5）</h3><p>在 ES6 语法之前，统一使用<code>var</code>关键字来声明一个变量。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name; <span class=\"comment\">// 定义一个名为 name 的变量。name是变量名。</span></span><br></pre></td></tr></table></figure>\n\n<p>var 是英语“variable”变量的缩写。后面要加一个空格，空格后面的东西就是“变量名”。</p>\n<p>PS：<strong>在 JavaScript 中，永远都是用 var 来定义变量</strong>（在 ES6 之前），这和 C、Java 等语言不同。</p>\n<h3 id=\"变量的定义-x2F-声明（ES6）\"><a href=\"#变量的定义-x2F-声明（ES6）\" class=\"headerlink\" title=\"变量的定义&#x2F;声明（ES6）\"></a>变量的定义&#x2F;声明（ES6）</h3><p>在 ES6 语法及之后的版本里，可以使用 <code>const</code>、<code>let</code>关键字来定义一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name; <span class=\"comment\">// 定义一个常量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> age; <span class=\"comment\">// 定义一个变量</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你想定义一个常量，就用 const；如果你想定义一个变量，就用 let。</p>\n<h3 id=\"变量的赋值\"><a href=\"#变量的赋值\" class=\"headerlink\" title=\"变量的赋值\"></a>变量的赋值</h3><p>变量赋值举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>综合起来，变量的定义、赋值、取值，举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义：声明一个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num;</span><br><span class=\"line\"><span class=\"comment\">// 赋值：往变量中存储数据</span></span><br><span class=\"line\">num = <span class=\"number\">996</span>;</span><br><span class=\"line\"><span class=\"comment\">// 取值：从变量中获取存储的数据</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"合并写法\"><a href=\"#合并写法\" class=\"headerlink\" title=\"合并写法\"></a>合并写法</h3><p>变量的定义和赋值，还可以合并写在一起，是实战中常用的写法。举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>; <span class=\"comment\">// ES5语法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = hello; <span class=\"comment\">// ES6 语法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = world; <span class=\"comment\">// ES6 语法</span></span><br><span class=\"line\">c = qianguyihao; <span class=\"comment\">// 修改 变量 C 的值</span></span><br></pre></td></tr></table></figure>\n\n<p>定义一个变量并赋值， 我们称之为<strong>变量的初始化</strong>。如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2020.png\"></p>\n<ul>\n<li>定义变量：var 就是一个<strong>关键字</strong>，用来定义变量。所谓关键字，就是有特殊功能的单词。</li>\n<li>变量赋值：等号表示<strong>赋值</strong>，将等号右边的值，赋给左边的变量。</li>\n<li>变量名：我们可以给变量起个名字。</li>\n</ul>\n<h3 id=\"变量的初始化【重要】\"><a href=\"#变量的初始化【重要】\" class=\"headerlink\" title=\"变量的初始化【重要】\"></a>变量的初始化【重要】</h3><p>第一次给变量赋值，称之为“<strong>变量的初始化</strong>”，这个概念非常重要。第二次给这个变量赋值（也就是修改这个变量的值）就不叫初始化了。</p>\n<p>一个变量如果没有进行初始化（只声明，不赋值），那么这个变量中存储的值是<code>undefined</code>，这个知识点必须知道。</p>\n<p>变量的初始化，可以有两种形式，如下。</p>\n<p>形式1：先定义，在赋值。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name;</span><br><span class=\"line\">name = <span class=\"string\">&#x27;qianguyhihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>形式2：在定义的同时进行初始化。也就是上一小段讲的“合并写法”。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量定义和赋值的补充\"><a href=\"#变量定义和赋值的补充\" class=\"headerlink\" title=\"变量定义和赋值的补充\"></a>变量定义和赋值的补充</h2><h3 id=\"修改变量的值\"><a href=\"#修改变量的值\" class=\"headerlink\" title=\"修改变量的值\"></a>修改变量的值</h3><p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\">a = <span class=\"number\">110</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：110。因为 110 覆盖了 100</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"同时定义多个变量\"><a href=\"#同时定义多个变量\" class=\"headerlink\" title=\"同时定义多个变量\"></a>同时定义多个变量</h3><p>1、同时定义多个变量时，只需要写一个 var， 多个变量名之间用英文逗号隔开。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 同时定义多个变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br></pre></td></tr></table></figure>\n\n<p>2、定义多个变量的同时，分别进行初始化。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义多个变量的同时，进行初始化</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num1 = <span class=\"number\">10</span>, num2 = <span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果多个变量初始化的初始化值都是一样的，则可以这样简写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br><span class=\"line\">num1 = num2 = <span class=\"number\">10</span>; <span class=\"comment\">// 重点在这一行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1); <span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的写法和下面的写法是有区别的：（注意看打印结果）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"变量之间可以相互赋值\"><a href=\"#变量之间可以相互赋值\" class=\"headerlink\" title=\"变量之间可以相互赋值\"></a>变量之间可以相互赋值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num1, num2;</span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\">num2 = num1; <span class=\"comment\">// 把 num1 的值拷贝一份，赋值给 num2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量如果重复定义\"><a href=\"#变量如果重复定义\" class=\"headerlink\" title=\"变量如果重复定义\"></a>变量如果重复定义</h3><p>在ES5中，如果用 var 定义了同名变量，那么，后定义的变量，会覆盖先定义的变量。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;许嵩&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;千古壹号&#x27;</span>; <span class=\"comment\">// 这里会重新定义一个新的变量 name</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 千古壹号</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量声明和赋值的特殊情况\"><a href=\"#变量声明和赋值的特殊情况\" class=\"headerlink\" title=\"变量声明和赋值的特殊情况\"></a>变量声明和赋值的特殊情况</h3><p>变量建议先声明，再使用；否则可能会产生意想不到的结果。具体如下。</p>\n<p><strong>写法 1</strong>、先声明，再赋值：（正常）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：100</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 2</strong>、不声明，直接赋值：（正常）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：100</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 3</strong>、只声明，不赋值：（注意，打印 undefined）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>写法 4</strong>、不声明，不赋值，直接使用：（会报错）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 会报错</span></span><br></pre></td></tr></table></figure>\n\n<p>控制台会报错：</p>\n<p><img src=\"http://img.smyhvae.com/20180116_2040.png\"></p>\n<p><strong>补充</strong>：写法 1 和写法 2 虽然都正常，但这两种写法是有区别的，等以后学习了「变量提升」的概念就明白了。大多数情况下，我们都是采用的写法 1。</p>\n<h2 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h2><p><strong>举例</strong>：交换两个变量的值</p>\n<p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a1 = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a2 = <span class=\"number\">200</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> temp;</span><br><span class=\"line\"></span><br><span class=\"line\">temp = a1;</span><br><span class=\"line\">a1 = a2;</span><br><span class=\"line\">a2 = temp;</span><br></pre></td></tr></table></figure>\n\n","text":"常量（字面量）：数字和字符串常量也称之为“字面量”，是固定值，不可改变。看见什么，它就是什么。常量有下面这几种：数字常量（数值常量）字符串常量布尔常量自定义常量数字常量数字常量非常简单，直接写数字就行，不需要任何其他的符号。既可以是整数，也可以是浮点数。例如：1<br>2<br>","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"08-基本数据类型：Null 和 Undefined","slug":"JavaScript/08-基本数据类型：Null 和 Undefined","date":"2023-02-15T12:06:59.451Z","updated":"2023-02-15T12:18:51.775Z","comments":true,"path":"api/articles/JavaScript/08-基本数据类型：Null 和 Undefined.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<p>很多其他的语言中，只有 null；但 JS 语言中，既有 null，又有 undefined。</p>\n<h2 id=\"Null：空对象\"><a href=\"#Null：空对象\" class=\"headerlink\" title=\"Null：空对象\"></a>Null：空对象</h2><p>null 专门用来定义一个<strong>空对象</strong>。例如：<code>let a = null</code>，又例如 <code>Object.create(null)</code>.</p>\n<p>如果你想定义一个变量用来保存引用类型，但是还没想好放什么内容，这个时候，可以在初始化时将其设置为 null。你可以把 null 理解为：<strong>null 虽然是一个单独的数据类型，但null 相当于是一个 object，只不过地址为空（空指针）而已</strong>。</p>\n<p>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myObj = <span class=\"literal\">null</span>;</span><br><span class=\"line\">cosole.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> myObj); <span class=\"comment\">// 打印结果：object</span></span><br></pre></td></tr></table></figure>\n\n<p>补充：</p>\n<ul>\n<li><p>Null 类型的值只有一个，就是 null。比如 <code>let a = null</code>。</p>\n</li>\n<li><p>从语义上讲，null表示一个空对象，所以使用 typeof 检查一个 null 值时，会返回 object。</p>\n</li>\n</ul>\n<h2 id=\"undefined：未定义类型\"><a href=\"#undefined：未定义类型\" class=\"headerlink\" title=\"undefined：未定义类型\"></a>undefined：未定义类型</h2><h3 id=\"case1：变量已声明，未赋值时\"><a href=\"#case1：变量已声明，未赋值时\" class=\"headerlink\" title=\"case1：变量已声明，未赋值时\"></a>case1：变量已声明，未赋值时</h3><p><strong>声明</strong>了一个变量，但没有<strong>赋值</strong>，此时它的值就是 <code>undefined</code>。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 打印结果：undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> name); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p>补充：</p>\n<ul>\n<li><p>Undefined 类型的值只有一个，就是 undefind。比如 <code>let a = undefined</code>。</p>\n</li>\n<li><p>使用 typeof 检查一个 undefined 值时，会返回 undefined。</p>\n</li>\n</ul>\n<h3 id=\"case2：变量未声明（未定义）时\"><a href=\"#case2：变量未声明（未定义）时\" class=\"headerlink\" title=\"case2：变量未声明（未定义）时\"></a>case2：变量未声明（未定义）时</h3><p>如果你从未声明一个变量，就去使用它，则会报错（这个大家都知道）；此时，如果用 <code>typeof</code> 检查这个变量时，会返回 <code>undefined</code>。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：Uncaught ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"case3：函数无返回值时\"><a href=\"#case3：函数无返回值时\" class=\"headerlink\" title=\"case3：函数无返回值时\"></a>case3：函数无返回值时</h3><p>如果一个函数没有返回值，那么，这个函数的返回值就是 undefined。</p>\n<p>或者，也可以这样理解：在定义一个函数时，如果末尾没有 return 语句，那么，其实就是 <code>return undefined</code>。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">foo</span>()); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"case4：调用函数时，未传参\"><a href=\"#case4：调用函数时，未传参\" class=\"headerlink\" title=\"case4：调用函数时，未传参\"></a>case4：调用函数时，未传参</h3><p>调用函数时，如果没有传参，那么，这个参数的值就是 undefined。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>(); <span class=\"comment\">// 调用函数时，未传参。执行函数后的打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p>实际开发中，如果调用函数时没有传参，我们可以根据需要给形参设置一个默认值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    name = name || <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br></pre></td></tr></table></figure>\n\n<p>等学习了 ES6 之后，上方代码也可以这样写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">name = <span class=\"string\">&#x27;qianguyihao&#x27;</span></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他区别\"><a href=\"#其他区别\" class=\"headerlink\" title=\"其他区别\"></a>其他区别</h2><p>undefined 实际上是由 null 衍生出来的，所以<code>null == undefined</code>的结果为 true。</p>\n<p>但是 <code>null === undefined</code> 的结果是 false。它们虽然相似，但还是有区别的，其中一个区别是，和数字运算时：</p>\n<ul>\n<li><p>10 + null 结果为 10。</p>\n</li>\n<li><p>10 + undefined 结果为 NaN。</p>\n</li>\n</ul>\n<p>规律总结：</p>\n<ul>\n<li><p>任何值和 null 运算，null 可看做 0 运算。</p>\n</li>\n<li><p>任何数据类型和 undefined 运算都是 NaN。</p>\n</li>\n</ul>\n","text":"很多其他的语言中，只有 null；但 JS 语言中，既有 null，又有 undefined。Null：空对象null 专门用来定义一个空对象。例如：let a = null，又例如 Object.create(null).如果你想定义一个变量用来保存引用类型，但是还没想好放什么","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"06-基本数据类型：String 和 Boolean","slug":"JavaScript/06-基本数据类型：String 和 Boolean","date":"2023-02-15T12:06:59.447Z","updated":"2023-02-15T12:17:43.488Z","comments":true,"path":"api/articles/JavaScript/06-基本数据类型：String 和 Boolean.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20200825_2016.png","content":"<p>详细介绍基本数据类型：</p>\n<h2 id=\"String-字符串\"><a href=\"#String-字符串\" class=\"headerlink\" title=\"String 字符串\"></a>String 字符串</h2><h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>字符串型可以是引号中的任意文本，其语法为：双引号 <code>&quot;&quot;</code> 或者单引号 <code>&#39;&#39;</code>。</p>\n<p>来看个示例。下面的这些，都是字符串：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;abcde&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">&#x27;123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"string\">&#x27;哈哈哈哈哈&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">//空字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = haha; <span class=\"comment\">// 没使用引号，到这里会直接报错。因为会被认为是js代码，但是之前并没有定义 haha。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> c);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> d);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> e);</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br><span class=\"line\">string</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引号的注意事项\"><a href=\"#引号的注意事项\" class=\"headerlink\" title=\"引号的注意事项\"></a>引号的注意事项</h3><p>1、单引号和双引号不能混用。比如下面这样写是不可以的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&quot;;  // 报错：Uncaught SyntaxError: Invalid or unexpected token</span></span><br></pre></td></tr></table></figure>\n\n<p>2、同类引号不能嵌套：双引号里不能再放双引号，单引号里不能再放单引号。</p>\n<p>3、单引号里可以嵌套双引号；双引号里可以嵌套单引号。</p>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><p>在字符串中我们可以使用<code>\\</code>作为转义字符，当表示一些特殊符号时可以使用<code>\\</code>进行转义。</p>\n<ul>\n<li><p><code>\\&quot;</code> 表示 <code>&quot;</code> 双引号</p>\n</li>\n<li><p><code>\\&#39;</code> 表示 <code>&#39;</code> 单引号</p>\n</li>\n<li><p><code>\\\\</code> 表示<code>\\</code></p>\n</li>\n<li><p><code>\\r</code> 表示回车</p>\n</li>\n<li><p><code>\\n</code> 表示换行。n 的意思是 newline。</p>\n</li>\n<li><p><code>\\t</code> 表示缩进。t 的意思是 tab。</p>\n</li>\n<li><p><code>\\b</code> 表示空格。b 的意思是 blank。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;我说:&quot;今天\\t天气真不错！&quot;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;\\\\\\\\\\\\&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我说:&quot;今天\t天气真不错！&quot;</span><br><span class=\"line\">\\\\\\</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取字符串的长度\"><a href=\"#获取字符串的长度\" class=\"headerlink\" title=\"获取字符串的长度\"></a>获取字符串的长度</h3><p>字符串是由若干个字符组成的，这些字符的数量就是字符串的长度。我们可以通过字符串的 length 属性可以获取整个字符串的长度。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;千古壹号&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;千古壹号，永不止步！&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;qianguyihao, keep moving!&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1.<span class=\"property\">length</span>); <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"property\">length</span>); <span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"property\">length</span>); <span class=\"comment\">// 11</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str4.<span class=\"property\">length</span>); <span class=\"comment\">// 25</span></span><br></pre></td></tr></table></figure>\n\n<p>由此可见，字符串的 length 属性，在判断字符串的长度时，会认为：</p>\n<ul>\n<li><p>一个中文算一个字符，一个英文算一个字符</p>\n</li>\n<li><p>一个标点符号（包括中文标点、英文标点）算一个字符</p>\n</li>\n<li><p>一个空格算一个字符</p>\n</li>\n</ul>\n<h3 id=\"字符串拼接\"><a href=\"#字符串拼接\" class=\"headerlink\" title=\"字符串拼接\"></a>字符串拼接</h3><p>多个字符串之间可以使用加号 <code>+</code> 进行拼接。</p>\n<p><strong>拼接语法</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 + 任意数据类型 = 拼接之后的新字符串;</span><br></pre></td></tr></table></figure>\n\n<p><strong>拼接规则</strong>：拼接前，会把与字符串相加的这个数据类型转成字符串，然后再拼接成一个新的字符串。</p>\n<p><strong>代码举例</strong>：（字符串与六大数据类型相加）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"string\">&#x27;永不止步&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str4 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str5 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str6 = <span class=\"string\">&#x27;千古壹号&#x27;</span> + obj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str4);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str5);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str6);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">千古壹号永不止步</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号666</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号true</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号null</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号undefined</span><br><span class=\"line\"></span><br><span class=\"line\">千古壹号[object Object]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串的不可变性\"><a href=\"#字符串的不可变性\" class=\"headerlink\" title=\"字符串的不可变性\"></a>字符串的不可变性</h2><p>字符串里面的值不可被改变。虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>比如上面的代码，当重新给变量 str 赋值时，常量<code>hello</code>不会被修改，依然保存在内存中；str 会改为指向<code>qianguyihao</code>。</p>\n<h2 id=\"模板字符串（模板字面量）\"><a href=\"#模板字符串（模板字面量）\" class=\"headerlink\" title=\"模板字符串（模板字面量）\"></a>模板字符串（模板字面量）</h2><p>ES6 中引入了<strong>模板字符串</strong>，让我们省去了字符串拼接的烦恼。下面一起来看看它的特性。</p>\n<h3 id=\"在模板字符串中插入变量\"><a href=\"#在模板字符串中插入变量\" class=\"headerlink\" title=\"在模板字符串中插入变量\"></a>在模板字符串中插入变量</h3><p>以前，让字符串进行拼接的时候，是这样做的：（传统写法的字符串拼接）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;smyhvae&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"string\">&#x27;26&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;name:&#x27;</span> + name + <span class=\"string\">&#x27;,age:&#x27;</span> + age); <span class=\"comment\">//传统写法</span></span><br></pre></td></tr></table></figure>\n\n<p>这种写法，比较繁琐，而且容易出错。</p>\n<p>现在，有了 ES6 语法，字符串拼接可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"string\">&#x27;26&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是&#x27;</span> + name + <span class=\"string\">&#x27;,age:&#x27;</span> + age); <span class=\"comment\">//传统写法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`我是<span class=\"subst\">$&#123;name&#125;</span>,age:<span class=\"subst\">$&#123;age&#125;</span>`</span>); <span class=\"comment\">//ES6 写法。注意语法格式</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>，上方代码中，倒数第二行用的符号是单引号，最后一行用的符号是反引号（在 tab 键的上方）。</p>\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000010222698\">ES6 的 rest 参数和扩展运算符</a></li>\n</ul>\n<h3 id=\"在模板字符串中插入表达式\"><a href=\"#在模板字符串中插入表达式\" class=\"headerlink\" title=\"在模板字符串中插入表达式\"></a>在模板字符串中插入表达式</h3><p>以前，在字符串中插入表达式的写法必须是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;this is &#x27;</span> + (a + b) + <span class=\"string\">&#x27; and\\nnot &#x27;</span> + (<span class=\"number\">2</span> * a + b) + <span class=\"string\">&#x27;.&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>现在，通过模板字符串，我们可以使用一种更优雅的方式来表示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面这行代码，故意做了换行。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`this is <span class=\"subst\">$&#123;a + b&#125;</span> and</span></span><br><span class=\"line\"><span class=\"string\">not <span class=\"subst\">$&#123;<span class=\"number\">2</span> * a + b&#125;</span>.`</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this is 15 and</span><br><span class=\"line\">not 20.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板字符串中可以换行\"><a href=\"#模板字符串中可以换行\" class=\"headerlink\" title=\"模板字符串中可以换行\"></a>模板字符串中可以换行</h3><p>因为模板字符串支持换行，所以可以让代码写得非常美观。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 模板字符串支持换行</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"string\">`&lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.name&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.age&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;span&gt;<span class=\"subst\">$&#123;result.sex&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/div&gt;`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(html); <span class=\"comment\">// 打印结果也会换行</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20200825_2016.png\"></p>\n<h3 id=\"模板字符串中可以调用函数\"><a href=\"#模板字符串中可以调用函数\" class=\"headerlink\" title=\"模板字符串中可以调用函数\"></a>模板字符串中可以调用函数</h3><p>模板字符串中可以调用函数。字符串中调用函数的位置，将会显示函数执行后的返回值。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getName</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`www.<span class=\"subst\">$&#123;getName()&#125;</span>.com`</span>); <span class=\"comment\">// 打印结果：www.qianguyihao.com</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板字符串支持嵌套使用\"><a href=\"#模板字符串支持嵌套使用\" class=\"headerlink\" title=\"模板字符串支持嵌套使用\"></a>模板字符串支持嵌套使用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nameList = [<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"string\">&#x27;解忧少帅&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myTemplate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// join(&#x27;&#x27;) 的意思是，把数组里的内容合并成一个字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t<span class=\"subst\">$&#123;nameList.map((item) =&gt; <span class=\"string\">`&lt;li&gt;<span class=\"subst\">$&#123;item&#125;</span>&lt;/li&gt;`</span>).join(<span class=\"string\">&#x27;&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">\t&lt;/ul&gt;`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">innerHTML</span> = <span class=\"title function_\">myTemplate</span>();</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20200607_2118.png\"></p>\n<h2 id=\"布尔值：Boolean\"><a href=\"#布尔值：Boolean\" class=\"headerlink\" title=\"布尔值：Boolean\"></a>布尔值：Boolean</h2><p>布尔型有两个值：true 和 false。主要用来做逻辑判断： true 表示真，false 表示假。</p>\n<p>布尔值直接使用就可以了，千万不要加引号。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boolean</span><br></pre></td></tr></table></figure>\n\n<p>布尔型和数字型相加时， true 按 1 来算 ，false 按 0 来算。</p>\n","text":"详细介绍基本数据类型：String 字符串语法字符串型可以是引号中的任意文本，其语法为：双引号 &quot;&quot; 或者单引号 &#39;&#39;。来看个示例。下面的这些，都是字符串：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"07-基本数据类型：Number","slug":"JavaScript/07-基本数据类型：Number","date":"2023-02-15T12:06:59.449Z","updated":"2023-02-15T12:18:15.941Z","comments":true,"path":"api/articles/JavaScript/07-基本数据类型：Number.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"数值型：Number\"><a href=\"#数值型：Number\" class=\"headerlink\" title=\"数值型：Number\"></a>数值型：Number</h2><p>在 JS 中所有的数值都是 Number 类型，包括整数和浮点数（小数）。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>; <span class=\"comment\">// 定义一个变量 a，并且赋值整数100</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 输出变量 a 的类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">12.3</span>; <span class=\"comment\">// 定义一个变量 b，并且赋值浮点数 12.3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number</span><br><span class=\"line\"></span><br><span class=\"line\">number</span><br></pre></td></tr></table></figure>\n\n<p>再次补充：在 JS 中，只要是数，就是 Number 数值型的。无论整浮、浮点数（即小数）、无论大小、无论正负，都是 Number 类型的。</p>\n<h3 id=\"数值范围\"><a href=\"#数值范围\" class=\"headerlink\" title=\"数值范围\"></a>数值范围</h3><p>由于内存的限制，ECMAScript 并不能保存世界上所有的数值。</p>\n<ul>\n<li><p>最大值：<code>Number.MAX_VALUE</code>，这个值为： 1.7976931348623157e+308</p>\n</li>\n<li><p>最小值：<code>Number.MIN_VALUE</code>，这个值为： 5e-324</p>\n</li>\n</ul>\n<p>如果使用 Number 表示的变量超过了最大值，则会返回 Infinity。</p>\n<ul>\n<li><p>无穷大（正无穷）：Infinity</p>\n</li>\n<li><p>无穷小（负无穷）：-Infinity</p>\n</li>\n</ul>\n<p>注意：<code>typeof Infinity</code>的返回结果是 number。</p>\n<h3 id=\"NaN\"><a href=\"#NaN\" class=\"headerlink\" title=\"NaN\"></a>NaN</h3><p><strong>NaN</strong>：是一个特殊的数字，表示 Not a Number，非数值。在进行数值运算时，如果得不到正常结果，就会返回 NaN。</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span> / <span class=\"number\">18</span>); <span class=\"comment\">//结果是NaN</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;abc&#x27;</span> * <span class=\"string\">&#x27;abcd&#x27;</span>); <span class=\"comment\">//按理说，字符串相乘是没有结果的，但如果你非要让JS去算，它就一定会给你一个结果，结果是NaN。</span></span><br></pre></td></tr></table></figure>\n\n<p>注意事项：</p>\n<ol>\n<li><p><code>typeof NaN</code>的返回结果是 number。</p>\n</li>\n<li><p><strong>Undefined 和任何数值计算的结果为 NaN。NaN 与任何值都不相等，包括 NaN 本身。</strong></p>\n</li>\n<li><p>关于 isNaN() 函数，可以看后续的文章《JavaScript基础&#x2F;typeof和数据类型转换》。</p>\n</li>\n</ol>\n<h3 id=\"连字符和加号的区别\"><a href=\"#连字符和加号的区别\" class=\"headerlink\" title=\"连字符和加号的区别\"></a>连字符和加号的区别</h3><p>键盘上的<code>+</code>可能是连字符，也可能是数字的加号。如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;我&quot; + &quot;爱&quot; + &quot;你&quot;);\t//连字符，把三个独立的汉字，连接在一起了</span><br><span class=\"line\">console.log(&quot;我+爱+你&quot;);\t\t\t//原样输出</span><br><span class=\"line\">console.log(1+2+3);\t\t\t\t//输出6</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我爱你</span><br><span class=\"line\">我+爱+你</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结</strong>：如果加号两边<strong>都是</strong> Number 类型，此时是数字相加。否则，就是连字符（用来连接字符串）。</p>\n<p>举例 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b);</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12</span><br></pre></td></tr></table></figure>\n\n<p>举例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = 1;</span><br><span class=\"line\">var b = 2;</span><br><span class=\"line\">console.log(&quot;a&quot; + b);\t//&quot;a&quot;就不是变量了！所以就是&quot;a&quot;+2 输出a2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>控制台输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a2</span><br></pre></td></tr></table></figure>\n\n<p>于是我们明白了，在变量中加入字符串进行拼接，可以被同化为字符串。【重要】</p>\n<h3 id=\"隐式转换\"><a href=\"#隐式转换\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><p>我们知道，<code>&quot;2&quot;+1</code>得到的结果其实是字符串，但是<code>&quot;2&quot;-1</code>得到的结果却是数值 1，这是因为计算机自动帮我们进行了“<strong>隐式转换</strong>”。</p>\n<p>也就是说，<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>这几个符号会自动进行隐式转换。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;4&#x27;</span> + <span class=\"number\">3</span> - <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">37</span>;</span><br></pre></td></tr></table></figure>\n\n<p>虽然程序可以对<code>-</code>、<code>*</code>、<code>/</code>、&#96;%&#96;&#96;这几个符号自动进行“隐式转换”；但作为程序员，我们最好自己完成转换，方便程序的可读性。</p>\n<p>关于隐式转换的详细内容，可以看后续的文章《JavaScript基础&#x2F;typeof和数据类型转换》。</p>\n<h2 id=\"浮点数的运算\"><a href=\"#浮点数的运算\" class=\"headerlink\" title=\"浮点数的运算\"></a>浮点数的运算</h2><h3 id=\"运算精度问题\"><a href=\"#运算精度问题\" class=\"headerlink\" title=\"运算精度问题\"></a>运算精度问题</h3><p>在 JS 中，整数的运算<strong>基本</strong>可以保证精确；但是<strong>小数的运算，可能会得到一个不精确的结果</strong>。所以，千万不要使用 JS 进行对精确度要求比较高的运算。</p>\n<p>如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">0.1</span> + <span class=\"number\">0.2</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">//打印结果十分意外：0.30000000000000004</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，打印结果并不是 0.3，而是 0.30000000000000004。</p>\n<p>这是因为，计算机在做运算时，所有的运算都要转换成二进制去计算。然而，有些数字转换成二进制之后，无法精确表示。比如说，0.1 和 0.2 转换成二进制之后，是无穷的，因此存在浮点数的计算不精确的问题。</p>\n<h3 id=\"处理数学运算的精度问题\"><a href=\"#处理数学运算的精度问题\" class=\"headerlink\" title=\"处理数学运算的精度问题\"></a>处理数学运算的精度问题</h3><p>如果只是一些简单的精度问题，可以使用 <code>toFix()</code> 方法进行小数的截取。备注：关于 <code>toFixed()</code>方法， 详见《JavaScript 基础&#x2F;内置对象：Number 和 Math》。</p>\n<p>在实战开发中，关于浮点数计算的精度问题，往往比较复杂。市面上有很多针对数学运算的开源库，比如<a href=\"https://github.com/MikeMcl/decimal.js/\">decimal.js</a>、 <a href=\"https://github.com/josdejong/mathjs\">Math.js</a>。这些开源库都比较成熟，我们可以直接拿来用。</p>\n<ul>\n<li><p>Math.js：属于很全面的运算库，文件很大，压缩后的文件就有 500kb。如果你的项目涉及到大型的复杂运算，可以使用 Math.js。</p>\n</li>\n<li><p>decimal.js：属于轻量的运算库，压缩后的文件只有 32kb。大多数项目的数学运算，使用 decimal.js 足够了。</p>\n</li>\n</ul>\n<p>在使用这几个开源库时，既可以用 cdn 的方式引入，也可以用 npm 包的方式引入。</p>\n<p>比如说，通过 cdn 的方式引入 decimal.js 时，可以这样用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/decimal.js/10.2.0/decimal.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;加法：&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> a = <span class=\"number\">0.1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> b = <span class=\"number\">0.2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(a).<span class=\"title function_\">add</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(b)).<span class=\"title function_\">toNumber</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;减法：&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> a = <span class=\"number\">1.0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> b = <span class=\"number\">0.7</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a - b);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(a).<span class=\"title function_\">sub</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(b)).<span class=\"title function_\">toNumber</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;乘法：&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> a = <span class=\"number\">1.01</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> b = <span class=\"number\">1.003</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a * b);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(a).<span class=\"title function_\">mul</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(b)).<span class=\"title function_\">toNumber</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;除法：&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> a = <span class=\"number\">0.029</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> b = <span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a / b);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(a).<span class=\"title function_\">div</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Decimal</span>(b)).<span class=\"title function_\">toNumber</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加法：</span><br><span class=\"line\">0.30000000000000004</span><br><span class=\"line\">0.3</span><br><span class=\"line\"></span><br><span class=\"line\">减法：</span><br><span class=\"line\">0.30000000000000004</span><br><span class=\"line\">0.3</span><br><span class=\"line\"></span><br><span class=\"line\">乘法：</span><br><span class=\"line\">1.0130299999999999</span><br><span class=\"line\">1.01303</span><br><span class=\"line\"></span><br><span class=\"line\">除法：</span><br><span class=\"line\">0.0029000000000000002</span><br><span class=\"line\">0.0029</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：</p>\n<ul>\n<li><p><a href=\"https://www.bloghome.com.cn/post/nodejsxue-xi-bi-ji-shi-qi-fu-dian-yun-suan-decimal-js.html\">https://www.bloghome.com.cn/post/nodejsxue-xi-bi-ji-shi-qi-fu-dian-yun-suan-decimal-js.html</a></p>\n</li>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/62381711\">https://zhuanlan.zhihu.com/p/62381711</a></p>\n</li>\n</ul>\n<h2 id=\"变量值的传递（赋值）\"><a href=\"#变量值的传递（赋值）\" class=\"headerlink\" title=\"变量值的传递（赋值）\"></a>变量值的传递（赋值）</h2><p>语句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = b;</span><br></pre></td></tr></table></figure>\n\n<p>把 b 的值赋给 a，b 不变。</p>\n<p>将等号右边的值，赋给左边的变量；等号右边的变量，值不变。</p>\n<p>来做几个题目。</p>\n<p>举例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a\t\tb       c</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>; <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>; <span class=\"comment\">// 1     2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">3</span>; <span class=\"comment\">// 1     2       3</span></span><br><span class=\"line\">a = b + c; <span class=\"comment\">// 5     2       3</span></span><br><span class=\"line\">b = c - a; <span class=\"comment\">// 5     -2      3</span></span><br><span class=\"line\">c = a * b; <span class=\"comment\">// 5     -2      -10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c);</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">-2</span><br><span class=\"line\">-10</span><br></pre></td></tr></table></figure>\n\n<p>举例 2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a    b     c</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">3</span>; <span class=\"comment\">// 1     2     3</span></span><br><span class=\"line\">a = a + b; <span class=\"comment\">// 3     2     3</span></span><br><span class=\"line\">b = b + a; <span class=\"comment\">// 3     5     3</span></span><br><span class=\"line\">c = c + b; <span class=\"comment\">// 3     5     8</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">// 8</span></span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n\n<p>举例 3：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a       b</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>; <span class=\"comment\">// &quot;1&quot;     2</span></span><br><span class=\"line\">a = a + b; <span class=\"comment\">// &quot;12&quot;    2</span></span><br><span class=\"line\">b = b + a; <span class=\"comment\">// &quot;12&quot;    &quot;212&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 输出12</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 输出212</span></span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12</span><br><span class=\"line\">212</span><br></pre></td></tr></table></figure>\n\n<p>举例 4：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a         b</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">a = b + a; <span class=\"comment\">//&quot;21&quot;       2</span></span><br><span class=\"line\">b = b + a; <span class=\"comment\">//&quot;21&quot;       &quot;221&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">//21</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">//221</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">21</span><br><span class=\"line\">221</span><br></pre></td></tr></table></figure>\n\n<p>举例 5：（这个例子比较特殊，字符串减去数字）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;3&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a - b);</span><br></pre></td></tr></table></figure>\n\n<p>效果：（注意，字符串 - 数值 &#x3D; 数值）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n\n","text":"数值型：Number在 JS 中所有的数值都是 Number 类型，包括整数和浮点数（小数）。1<br>2<br>3<br>4<br>5<br>var a = 100; // 定义一个变量 a，并且赋值整数100<br>console.log(typeof a); // 输出变量","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"09-数据类","slug":"JavaScript/09-数据类型转换","date":"2023-02-15T12:06:59.453Z","updated":"2023-02-15T12:19:59.273Z","comments":true,"path":"api/articles/JavaScript/09-数据类型转换.json","excerpt":"","keywords":null,"cover":"https://img.smyhvae.com/20211116_1458.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong>变量的数据类型转换</strong>：将一种数据类型转换为另外一种数据类型。</p>\n<p>通常有三种形式的类型转换：</p>\n<ul>\n<li><p>转换为字符串类型</p>\n</li>\n<li><p>转换为数字型</p>\n</li>\n<li><p>转换为布尔型</p>\n</li>\n</ul>\n<p>把某个数据类型转换成 null 或者 undefined 没有意义。</p>\n<h2 id=\"变量的类型转换的分类\"><a href=\"#变量的类型转换的分类\" class=\"headerlink\" title=\"变量的类型转换的分类\"></a>变量的类型转换的分类</h2><p>类型转换分为两种：显式类型转换、隐式类型转换。</p>\n<h3 id=\"显式类型转换\"><a href=\"#显式类型转换\" class=\"headerlink\" title=\"显式类型转换\"></a>显式类型转换</h3><ul>\n<li><p>toString()</p>\n</li>\n<li><p>String()</p>\n</li>\n<li><p>Number()</p>\n</li>\n<li><p>parseInt(string)</p>\n</li>\n<li><p>parseFloat(string)</p>\n</li>\n<li><p>Boolean()</p>\n</li>\n</ul>\n<h3 id=\"隐式类型转换\"><a href=\"#隐式类型转换\" class=\"headerlink\" title=\"隐式类型转换\"></a>隐式类型转换</h3><ul>\n<li><p>isNaN ()</p>\n</li>\n<li><p>自增&#x2F;自减运算符：<code>++</code>、<code>—-</code></p>\n</li>\n<li><p>正号&#x2F;负号：<code>+a</code>、<code>-a</code></p>\n</li>\n<li><p>加号：<code>+</code></p>\n</li>\n<li><p>运算符：<code>-</code>、<code>*</code>、<code>/</code></p>\n</li>\n</ul>\n<h3 id=\"隐式类型转换（特殊）\"><a href=\"#隐式类型转换（特殊）\" class=\"headerlink\" title=\"隐式类型转换（特殊）\"></a>隐式类型转换（特殊）</h3><ul>\n<li><p>逻辑运算符：<code>&amp;&amp;</code>、<code>||</code>、<code>!</code> 。非布尔值进行<strong>与或</strong>运算时，会先将其转换为布尔值，然后再运算。<code>&amp;&amp;</code>、<code>||</code>的运算结果是<strong>原值</strong>，<code>!</code>的运算结果为布尔值。具体可以看下一篇文章《运算符》。</p>\n</li>\n<li><p>关系运算符：<code>&lt;</code>、<code>&gt;</code> <code>&lt;=</code> <code>&gt;=</code>等。关系运算符，得到的运算结果都是布尔值：要么是 true，要么是 false。具体可以看下一篇文章《运算符》。</p>\n</li>\n</ul>\n<p>针对上面这两种类型转换，这篇文章来详细介绍。</p>\n<h2 id=\"一、转换为-String\"><a href=\"#一、转换为-String\" class=\"headerlink\" title=\"一、转换为 String\"></a>一、转换为 String</h2><h3 id=\"1-调用-toString-方法\"><a href=\"#1-调用-toString-方法\" class=\"headerlink\" title=\"1. 调用 toString()方法\"></a>1. 调用 toString()方法</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">常量.<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 这里的常量，不允许是数字，但可以是其它常量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者用一个新的变量接收转换结果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = 变量.<span class=\"title function_\">toString</span>();</span><br></pre></td></tr></table></figure>\n\n<p>【重要】该方法<strong>不会影响到原变量</strong>，它会将转换的结果返回。当然我们还可以直接写成<code>a = a.toString()</code>，这样的话，就是直接修改原变量。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基本数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a1 = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a2 = <span class=\"number\">29</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a3 = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a4 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> a5 = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">29</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// null 和 undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a6 = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a7 = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打印结果都是字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// &quot;qianguyihao&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a2.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// &quot;29&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a3.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// &quot;true&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a4.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// &quot;1,2,3&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a5.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面这两个，打印报错</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a6.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 报错：Uncaught TypeError: Cannot read properties of null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a7.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 报错：Uncaught TypeError: Cannot read properties of undefined</span></span><br></pre></td></tr></table></figure>\n\n<p>小技巧：在 chrome 浏览器的控制台中，Number类型、Boolean类型的打印结果是蓝色的，String类型的打印结果是黑色的。</p>\n<p>一起来看看 toString() 的注意事项。</p>\n<p>（1）null 和 undefined 这两个值没有 toString() 方法，所以它们不能用 toString() 。如果调用，会报错。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span>.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span>.<span class=\"title function_\">toString</span>());</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img.smyhvae.com/20211116_1458.png\"></p>\n<p>如果你不确定一个值是不是<code>null</code>或<code>undefined</code>，可以使用<code>String()</code>函数，下一小段会讲。</p>\n<p>（2）多数情况下，<code>toString()</code>不接收任何参数；当然也有例外：Number 类型的变量，在调用 toString()时，可以在方法中传递一个整数作为参数。此时它会把数字转换为指定的进制，如果不指定则默认转换为 10 进制。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">255</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Number数值在调用toString()时，可以在方法中传递一个整数作为参数</span></span><br><span class=\"line\"><span class=\"comment\">//此时它将会把数字转换为指定的进制,如果不指定则默认转换为10进制</span></span><br><span class=\"line\">a = a.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>); <span class=\"comment\">// 转换为二进制</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// &quot;11111111&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// string</span></span><br></pre></td></tr></table></figure>\n\n<p>（3）纯小数的小数点后面，如果紧跟连续6个或6个以上的“0”时，那么，将用e来表示这个小数。代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> num1 = <span class=\"number\">0.000001</span>; <span class=\"comment\">// 小数点后面紧跟五个零</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 打印结果：&quot;0.000001&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> num2 = <span class=\"number\">0.0000001</span>; <span class=\"comment\">// 小数点后面紧跟六个零</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 【重点关注】打印结果：&quot;1e-7&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> num3 = <span class=\"number\">1.0000001</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num3.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 打印结果：&quot;1.0000001&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> num4 = <span class=\"number\">0.10000001</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num4.<span class=\"title function_\">toString</span>()); <span class=\"comment\">// 打印结果：&quot;0.10000001&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>（4）常量可以直接调用 toString() 方法，但这里的常量，不允许是数字。举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span><span class=\"title function_\">toString</span>(); <span class=\"comment\">// 注意，会报错</span></span><br><span class=\"line\"><span class=\"number\">1.</span>.<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 合法。得到的结果是字符串&quot;1&quot;</span></span><br><span class=\"line\"><span class=\"number\">1.2</span>.<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 合法。得到的结果是字符串&quot;1.2&quot;</span></span><br><span class=\"line\">(<span class=\"number\">1</span>).<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 合法。得到的结果是字符串&quot;1&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，为何出现这样的打印结果？这是因为：</p>\n<ul>\n<li>第一行代码：JS引擎认为<code>1.toString()</code>中的<code>.</code>是小数点，小数点后面的字符是非法的。</li>\n<li>第二行、第三行代码：JS引擎认为第一个<code>.</code>是小数点，第二个<code>.</code>是属性访问的语法，所以能正常解释实行。</li>\n<li>第四行嗲吗：用<code>()</code>排除了<code>.</code>被视为小数点的语法解释，所以这种写法也能正常解释执行。</li>\n</ul>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/88570529a03c\">你不知道的toString方法</a></p>\n<p>（5）既然常量没有方法，那它为什么可以调用 toString()呢？这是因为，除了 null、undefined之外，其他的常量都有对应的特殊的引用类型——<strong>基本包装类型</strong>，所以代码在解释执行的时候，会将常量转为基本包装类型，这样就可以调用相应的引用类型的方法。</p>\n<p>我们在后续的内容《JavaScritpt基础&#x2F;基本包装类型》中会专门讲到基本包装类型。</p>\n<h3 id=\"2-使用-String-函数\"><a href=\"#2-使用-String-函数\" class=\"headerlink\" title=\"2. 使用 String()函数\"></a>2. 使用 String()函数</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">String</span>(变量/常量);</span><br></pre></td></tr></table></figure>\n\n<p>使用 String()函数做强制类型转换时：</p>\n<ul>\n<li>对于 Number、Boolean、String、Object 而言，本质上就是调用 toString()方法，返回结果同 toString()方法。</li>\n<li>但是对于 null 和 undefined，则不会调用 toString()方法。它会将 null 直接转换为 “null”。将 undefined 直接转换为 “undefined”。</li>\n</ul>\n<p>该方法<strong>不会影响到原数值</strong>，它会将转换的结果返回。</p>\n<h3 id=\"3-隐式类型转换：字符串拼接\"><a href=\"#3-隐式类型转换：字符串拼接\" class=\"headerlink\" title=\"3. 隐式类型转换：字符串拼接\"></a>3. 隐式类型转换：字符串拼接</h3><p>格式：变量+”” 或者 变量+”abc”</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">123</span>; <span class=\"comment\">// Number 类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + <span class=\"string\">&#x27;&#x27;</span>); <span class=\"comment\">// 打印结果：&quot;123&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + <span class=\"string\">&#x27;haha&#x27;</span>); <span class=\"comment\">// 打印结果：&quot;123haha&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的例子中，打印的结果，都是字符串类型的数据。实际上底层是调用的 String() 函数。</p>\n<h3 id=\"prompt-：用户的输入\"><a href=\"#prompt-：用户的输入\" class=\"headerlink\" title=\"prompt()：用户的输入\"></a>prompt()：用户的输入</h3><p>我们在前面的《JavaScript基础&#x2F;02-JavaScript书写方式：hello world》就讲过，<code>prompt()</code>就是专门用来弹出能够让用户输入的对话框。重要的是：用户不管输入什么，都当字符串处理。</p>\n<h2 id=\"二、转换为-Number\"><a href=\"#二、转换为-Number\" class=\"headerlink\" title=\"二、转换为 Number\"></a>二、转换为 Number</h2><h3 id=\"1-使用-Number-函数\"><a href=\"#1-使用-Number-函数\" class=\"headerlink\" title=\"1. 使用 Number() 函数\"></a>1. 使用 Number() 函数</h3><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title class_\">Number</span>(变量/常量);</span><br></pre></td></tr></table></figure>\n\n<p><strong>情况一：字符串 –&gt; 数字</strong></p>\n<p>（1）如果字符串中是纯数字，则直接将其转换为数字。</p>\n<p>（2）如果字符串是一个<strong>空串</strong>或者是一个<strong>全是空格</strong>的字符串，则转换为 0。</p>\n<p>（3）只要字符串中包含了其他非数字的内容（<code>小数点</code>按数字来算），则转换为 NaN。怎么理解这里的 <strong>NaN</strong> 呢？可以这样理解，使用 Number() 函数之后，<strong>如果无法转换为数字，就会转换为 NaN</strong>。</p>\n<p><strong>情况二：布尔 –&gt; 数字</strong></p>\n<p>（1）true 转成 1</p>\n<p>（2）false 转成 0</p>\n<p><strong>情况三：null –&gt; 数字</strong>，结果为：0</p>\n<p><strong>情况四：undefined –&gt; 数字</strong>，结果为：NaN</p>\n<h3 id=\"2-隐式类型转换：正负号-a、-a\"><a href=\"#2-隐式类型转换：正负号-a、-a\" class=\"headerlink\" title=\"2. 隐式类型转换：正负号 +a、-a\"></a>2. 隐式类型转换：正负号 <code>+a</code>、<code>-a</code></h3><blockquote>\n<p>注意，这里说的是正号&#x2F;负号，不是加号&#x2F;减号。</p>\n</blockquote>\n<p>任何值做<code>+a</code>、<code>-a</code>运算时， 底层调用的是 Number() 函数。不会改变原数值；得到的结果，会改变正负性。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a1 = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a1); <span class=\"comment\">// 123</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a1); <span class=\"comment\">// -123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a2 = <span class=\"string\">&#x27;123abc&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a2); <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a2); <span class=\"comment\">// NaN</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a3 = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a3); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a3); <span class=\"comment\">// -1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a4 = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a4); <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a4); <span class=\"comment\">// -0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a5 = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a5); <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a5); <span class=\"comment\">// -0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a6 = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(+a6); <span class=\"comment\">// NaN</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(-a6); <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-parseInt-函数：字符串-gt-整数\"><a href=\"#3-使用-parseInt-函数：字符串-gt-整数\" class=\"headerlink\" title=\"3. 使用 parseInt()函数：字符串 -&gt; 整数\"></a>3. 使用 parseInt()函数：字符串 -&gt; 整数</h3><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"built_in\">parseInt</span>(需要转换的字符串)</span><br></pre></td></tr></table></figure>\n\n<p><strong>parseInt()<strong>：将传入的数据当作</strong>字符串</strong>来处理，从左至右提取数值，一旦遇到非数值就立即停止；停止时如果还没有提取到数值，就返回NaN。</p>\n<p>parse 表示“转换”，Int 表示“整数”。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;5&#x27;</span>); <span class=\"comment\">// 得到的结果是数字 5</span></span><br></pre></td></tr></table></figure>\n\n<p>按照上面的规律，parseInt()的转换结果，列举如下。</p>\n<p><strong>情况一：字符串 –&gt; 数字</strong></p>\n<p>（1）<strong>只保留字符串最开头的数字</strong>，后面的中文自动消失。</p>\n<p>（2）如果字符串不是以数字开头，则转换为 NaN。</p>\n<p>（3）如果字符串是一个空串或者是一个全是空格的字符串，转换时会报错。</p>\n<p><strong>情况二：Boolean –&gt; 数字</strong>，结果为：NaN</p>\n<p><strong>情况三：Null –&gt; 数字</strong>，结果为：NaN</p>\n<p><strong>情况四：Undefined –&gt; 数字</strong>，结果为：NaN</p>\n<hr>\n<p>Number() 函数和 parseInt() 函数的区别：</p>\n<p>就拿<code>Number(true)</code> 和 <code>parseInt(true)/parseFloat(true)</code>来举例，二者在使用时，是有区别的：</p>\n<ul>\n<li><p>Number(true) ：千方百计地想转换为数字；如果转换不了则返回 NaN。</p>\n</li>\n<li><p>parseInt(true)&#x2F;parseFloat(true) ：提取出最前面的数字部分；没提取出来，那就返回 NaN。</p>\n</li>\n</ul>\n<p><strong>parseInt()具有以下特性</strong>：</p>\n<p>（1）parseInt()、parseFloat()会将传入的数据当作<strong>字符串</strong>来处理。也就是说，如果对<strong>非 String</strong>使用 parseInt()、parseFloat()，它会<strong>先将其转换为 String</strong> 然后再操作。【重要】</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">168.23</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(a)); <span class=\"comment\">//打印结果：168  （因为是先将 a 转为字符串&quot;168.23&quot;，然后然后再操作）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(b)); <span class=\"comment\">//打印结果：NaN （因为是先将 b 转为字符串&quot;true&quot;，然后然后再操作）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(c)); <span class=\"comment\">//打印结果：NaN  （因为是先将 c 转为字符串&quot;null&quot;，然后然后再操作）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(d)); <span class=\"comment\">//打印结果：NaN  （因为是先将 d 转为字符串&quot;undefined&quot;，然后然后再操作）</span></span><br></pre></td></tr></table></figure>\n\n\n<p>（2）<strong>只保留字符串最开头的数字</strong>，后面的中文自动消失。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;2017在公众号上写了6篇文章&#x27;</span>)); <span class=\"comment\">//打印结果：2017</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;2017.01在公众号上写了6篇文章&#x27;</span>)); <span class=\"comment\">//打印结果仍是：2017   （说明只会取整数）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;aaa2017.01在公众号上写了6篇文章&#x27;</span>)); <span class=\"comment\">//打印结果：NaN （因为不是以数字开头）</span></span><br></pre></td></tr></table></figure>\n\n\n<p>（3）自动截断小数：<strong>取整，不四舍五入</strong>。</p>\n<p>例 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">parseInt</span>(<span class=\"number\">5.8</span>) + <span class=\"built_in\">parseInt</span>(<span class=\"number\">4.7</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n\n<p>例 2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">parseInt</span>(<span class=\"number\">5.8</span> + <span class=\"number\">4.7</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n\n<p>（4）带两个参数时，表示在转换时，包含了进制转换。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;110&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"built_in\">parseInt</span>(a, <span class=\"number\">16</span>); <span class=\"comment\">// 【重要】将 a 当成 十六进制 来看待，转换成 十进制 的 num</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">272</span><br></pre></td></tr></table></figure>\n\n<p>如果你对打印结果感到震惊，请仔细看上面的代码注释。就是说，无论 parseInt() 里面的进制参数是多少，最终的转换结果是十进制。</p>\n<p>我们来看下面的代码，打印结果继续震惊。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;5&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"built_in\">parseInt</span>(a, <span class=\"number\">2</span>); <span class=\"comment\">// 将 a 当成 二进制 来看待，转换成 十进制 的 num</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num); <span class=\"comment\">// 打印结果：NaN。因为 二进制中没有 5 这个数，转换失败。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-parseFloat-函数：字符串-–-gt-浮点数（小数）\"><a href=\"#4-parseFloat-函数：字符串-–-gt-浮点数（小数）\" class=\"headerlink\" title=\"4. parseFloat()函数：字符串 –&gt; 浮点数（小数）\"></a>4. parseFloat()函数：字符串 –&gt; 浮点数（小数）</h3><p>parseFloat()的作用是：将字符串转换为<strong>浮点数</strong>。</p>\n<p>parseFloat()和 parseInt()的作用类似，不同的是，parseFloat()可以获得小数部分。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;123.456.789px&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseFloat</span>(a)); <span class=\"comment\">// 打印结果：123.456</span></span><br></pre></td></tr></table></figure>\n\n<p>parseFloat() 的几个特性，可以参照 parseInt()。</p>\n<h2 id=\"三、转换为-Boolean\"><a href=\"#三、转换为-Boolean\" class=\"headerlink\" title=\"三、转换为 Boolean\"></a>三、转换为 Boolean</h2><h3 id=\"转换结果列举【重要】\"><a href=\"#转换结果列举【重要】\" class=\"headerlink\" title=\"转换结果列举【重要】\"></a>转换结果列举【重要】</h3><p>其他的数据类型都可以转换为 Boolean 类型。无论是隐式转换，还是显示转换，转换结果都是一样的。有下面几种情况：</p>\n<p>（1）情况一：数字 –&gt; 布尔。 0 和 NaN的转换结果 false，其余的都是 true。比如 <code>Boolean(NaN)</code>的结果是 false。</p>\n<p>（2）情况二：字符串 —&gt; 布尔。空串的转换结果是false，其余的都是 true。全是空格的字符串，转换结果也是 true。字符串<code>&#39;0&#39;</code>的转换结果也是 true。</p>\n<p>（3）情况三：null 和 undefined 都会转换为 false。</p>\n<p>（4）情况四：引用数据类型会转换为 true。注意，空数组<code>[]</code>和空对象<code>&#123;&#125;</code>，<strong>转换结果也是 true</strong>，这一点，很多人都不知道。</p>\n<p><strong>重中之重来了：</strong></p>\n<p>转换为 Boolean 的上面这几种情况，<strong>极其重要</strong>，开发中会频繁用到。比如说，我们在项目开发中，经常需要对一些<strong>非布尔值</strong>做逻辑判断，符合条件后，才做下一步的事情。这个逻辑判断就是依据上面的四种情况。</p>\n<p>举例：（接口返回的内容不为空，前端才做进一步的事情）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result1 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = &#123; <span class=\"attr\">a</span>: <span class=\"string\">&#x27;data1&#x27;</span>, <span class=\"attr\">b</span>: <span class=\"string\">&#x27;data2&#x27;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result1) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;因为 result1的内容为空，所以代码进不了这里&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result2 &amp;&amp; result2.<span class=\"property\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接口返回了 result2，且 result2.a 里面有值，前端才做进一步的事情</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;代码能进来，前端继续在这里干活儿&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里再次强调一下，空数组<code>[]</code>和空对象<code>&#123;&#125;</code>转换为 Boolean 值时，转换结果为 true。</p>\n<h3 id=\"1-隐式类型转换：逻辑运算\"><a href=\"#1-隐式类型转换：逻辑运算\" class=\"headerlink\" title=\"1. 隐式类型转换：逻辑运算\"></a>1. 隐式类型转换：逻辑运算</h3><p>当非 Boolean 类型的数值和 Boolean 类型的数值做比较时，会先把前者<strong>临时</strong>进行隐式转换为 Boolean 类型，然后再做比较；且不会改变前者的数据类型。举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a == <span class=\"literal\">true</span>); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 打印结果：number。可见，上面一行代码里，a 做了隐式类型转换，但是 a 的数据类型并没有发生变化，仍然是 Number 类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0</span> == <span class=\"literal\">true</span>); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2. 使用 !!\"></a>2. 使用 <code>!!</code></h3><p>使用 <code>!!</code>可以显式转换为 Boolean 类型。比如 <code>!!3</code>的结果是 true。</p>\n<h3 id=\"3-使用-Boolean-函数\"><a href=\"#3-使用-Boolean-函数\" class=\"headerlink\" title=\"3. 使用  Boolean()函数\"></a>3. 使用  Boolean()函数</h3><p>使用 Boolean()函数可以显式转换为 Boolean 类型。</p>\n<h2 id=\"知识补充：其他进制的数字\"><a href=\"#知识补充：其他进制的数字\" class=\"headerlink\" title=\"知识补充：其他进制的数字\"></a>知识补充：其他进制的数字</h2><ul>\n<li><p>16 进制的数字，以<code>0x</code>开头</p>\n</li>\n<li><p>8 进制的数字，以<code>0</code>开头</p>\n</li>\n<li><p>2 进制的数字，<code>0b</code>开头（不是所有的浏览器都支持：chrome 和火狐支持，IE 不支持）</p>\n</li>\n</ul>\n<p>比如<code>070</code>这个字符串，如果我调用 parseInt()转成数字时，有些浏览器会当成 8 进制解析，有些会当成 10 进制解析。</p>\n<p>所以，比较建议的做法是：可以在 parseInt()中传递第二个参数，来指定当前数字的进制。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;070&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"built_in\">parseInt</span>(a, <span class=\"number\">8</span>); <span class=\"comment\">//将 070 当成八进制来看待，转换结果为十进制。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：56。这个地方要好好理解。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"隐式类型转换-1\"><a href=\"#隐式类型转换-1\" class=\"headerlink\" title=\"隐式类型转换\"></a>隐式类型转换</h2><p>重点：<strong>隐式类型转换，内部调用的都是显式类型的方法</strong>。</p>\n<p>常见的隐式类型转换，包括下面这几种：</p>\n<ul>\n<li><p>isNaN() 函数</p>\n</li>\n<li><p>运算符：加号 <code>+</code></p>\n</li>\n<li><p>运算符：<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code></p>\n</li>\n<li><p>运算符：正号&#x2F;负号 +a<code>、</code>-a&#96;</p>\n</li>\n<li><p>自增&#x2F;自减运算符：<code>++</code>、<code>—-</code></p>\n</li>\n</ul>\n<p>本段先来讲一下 isNaN() ，其他内容，将在下一节《JavaScript基础&#x2F;运算符》中讲到。</p>\n<h3 id=\"isNaN-函数\"><a href=\"#isNaN-函数\" class=\"headerlink\" title=\"isNaN() 函数\"></a>isNaN() 函数</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">isNaN</span>(参数);</span><br></pre></td></tr></table></figure>\n\n<p>解释：判断指定的参数是否为 NaN（非数字类型），返回结果为 Boolean 类型。也就是说：<strong>任何不能被转换为数值的参数，都会让这个函数返回 true</strong>。</p>\n<p><strong>执行过程</strong>：</p>\n<p>（1）先调用<code>Number(参数)</code>函数；</p>\n<p>（2）然后将<code>Number(参数)</code>的返回结果是否为数值。如果不为数值，则最终结果为 true；如果为数值，则最终结果为 false。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&#x27;123&#x27;</span>)); <span class=\"comment\">// 返回结果：false。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"literal\">null</span>)); <span class=\"comment\">// 返回结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&#x27;abc&#x27;</span>)); <span class=\"comment\">// 返回结果：true。因为 Number(&#x27;abc&#x27;) 的返回结果是 NaN</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"literal\">undefined</span>)); <span class=\"comment\">// 返回结果：true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"title class_\">NaN</span>)); <span class=\"comment\">// 返回结果：true</span></span><br></pre></td></tr></table></figure>\n\n","text":"前言变量的数据类型转换：将一种数据类型转换为另外一种数据类型。通常有三种形式的类型转换：转换为字符串类型转换为数字型转换为布尔型把某个数据类型转换成 null 或者 undefined 没有意义。变量的类型转换的分类类型转换分为两种：显式类型转换、隐式类型转换。显式类型转换toS","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"10-运算符","slug":"JavaScript/10-运算符","date":"2023-02-15T12:06:59.457Z","updated":"2023-02-15T12:21:08.507Z","comments":true,"path":"api/articles/JavaScript/10-运算符.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20181222_1218.png","content":"<h2 id=\"运算符的定义和分类\"><a href=\"#运算符的定义和分类\" class=\"headerlink\" title=\"运算符的定义和分类\"></a>运算符的定义和分类</h2><h3 id=\"运算符的定义\"><a href=\"#运算符的定义\" class=\"headerlink\" title=\"运算符的定义\"></a>运算符的定义</h3><p><strong>运算符</strong>：也叫操作符，是一种符号。通过运算符可以对一个或多个值进行运算，并获取运算结果。</p>\n<p><strong>表达式</strong>：数字、运算符、变量的组合（组成的式子）。</p>\n<p>表达式最终都会有一个运算结果，我们将这个结果称为表达式的<strong>返回值</strong>。</p>\n<p>比如：<code>+</code>、<code>*</code>、<code>/</code>、<code>()</code> 都是<strong>运算符</strong>，而<code>（3+5）/2</code>则是<strong>表达式</strong>。</p>\n<p>比如：typeof 就是运算符，可以获得一个值的类型。它会将该值的类型以<strong>字符串</strong>的形式返回，返回值可以是 number、string、boolean、undefined、object。</p>\n<h3 id=\"运算符的分类\"><a href=\"#运算符的分类\" class=\"headerlink\" title=\"运算符的分类\"></a>运算符的分类</h3><p>JS 中的运算符，分类如下：</p>\n<ul>\n<li>算数运算符</li>\n<li>自增&#x2F;自减运算符</li>\n<li>一元运算符</li>\n<li>三元运算符（条件运算符）</li>\n<li>逻辑运算符</li>\n<li>赋值运算符</li>\n<li>比较运算符</li>\n</ul>\n<p>下面来逐一讲解。</p>\n<h2 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h2><p><strong>算术运算符</strong>：用于执行两个变量或值的算术运算。</p>\n<p>常见的算数运算符有以下几种：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">+</td>\n<td align=\"center\">加、字符串连接</td>\n</tr>\n<tr>\n<td align=\"left\">-</td>\n<td align=\"center\">减</td>\n</tr>\n<tr>\n<td align=\"left\">*</td>\n<td align=\"center\">乘</td>\n</tr>\n<tr>\n<td align=\"left\">&#x2F;</td>\n<td align=\"center\">除</td>\n</tr>\n<tr>\n<td align=\"left\">%</td>\n<td align=\"center\">获取余数（取余、取模）</td>\n</tr>\n</tbody></table>\n<p><strong>求余的举例</strong>：</p>\n<p>假设用户输入 345，怎么分别得到 3、4、5 这三个数呢？</p>\n<p><strong>答案</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">得到3的方法：345 除以100，得到3.45然后取整，得到3。即：parseInt(345/100)</span><br><span class=\"line\"></span><br><span class=\"line\">得到4的方法：345 除以100，余数是45，除以10，得到4.5，取整。即：parseInt(345 % 100 / 10)</span><br><span class=\"line\"></span><br><span class=\"line\">得到5的方法：345 除以10，余数就是5。即：345 % 10</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"算数运算符的运算规则\"><a href=\"#算数运算符的运算规则\" class=\"headerlink\" title=\"算数运算符的运算规则\"></a>算数运算符的运算规则</h3><p>（1）<code>* / %</code> 的优先级高于 <code>+ -</code></p>\n<p>（2）无论是<code>+ - * / %</code>都是左结合性（从左至右计算）</p>\n<p>（2）小括号<code>( )</code>：能够影响计算顺序，且可以嵌套。没有中括号、没有大括号，只有小括号。</p>\n<p>举例 1：（取余）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> % <span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果为 3。</p>\n<p>举例 2：（注意运算符的优先级）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span> + ((<span class=\"number\">2</span> * <span class=\"number\">3</span>) % <span class=\"number\">4</span>) / <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n\n<p>结果分析：</p>\n<p>原式 &#x3D; 1 + 6 % 4 &#x2F; 3 &#x3D; 1 + 2 &#x2F; 3 &#x3D; 1.66666666666666</p>\n<h3 id=\"取模（取余）运算\"><a href=\"#取模（取余）运算\" class=\"headerlink\" title=\"取模（取余）运算\"></a>取模（取余）运算</h3><p>格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">余数 = m % n;</span><br></pre></td></tr></table></figure>\n\n<p>计算结果注意：</p>\n<ul>\n<li><p>取余运算结果的正负性，取决于 m，而不是 n。比如：<code>10 % -3</code>的运算结果是 1。<code>-10 % 3</code>的运算结果是-1。</p>\n</li>\n<li><p>如果 n &lt; 0，那就先把 n 取绝对值后，再计算。等价于 m % (-n)。</p>\n</li>\n<li><p>如果 n 是 0，那么结果是 NaN。</p>\n</li>\n<li><p>在 n &gt; 0 的情况下：</p>\n<ul>\n<li>如果 m&gt;&#x3D;n，那就正常取余。</li>\n<li>如果 m&lt;n，那结果就是 m。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"浮点数运算的精度问题\"><a href=\"#浮点数运算的精度问题\" class=\"headerlink\" title=\"浮点数运算的精度问题\"></a>浮点数运算的精度问题</h3><p>浮点数值的最高精度是 17 位小数，但在进行算术计算时，会丢失精度，导致计算不够准确。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span>); <span class=\"comment\">// 运算结果不是 0.3，而是 0.30000000000000004</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0.07</span> * <span class=\"number\">100</span>); <span class=\"comment\">// 运算结果不是 7，而是 7.000000000000001</span></span><br></pre></td></tr></table></figure>\n\n<p>因此，<strong>不要直接判断两个浮点数是否相等</strong>。前面的文章《JavaScript 基础：基本数据类型：Number》有详细介绍。</p>\n<h3 id=\"隐式类型转换——运算符：加号\"><a href=\"#隐式类型转换——运算符：加号\" class=\"headerlink\" title=\"隐式类型转换——运算符：加号 +\"></a>隐式类型转换——运算符：加号 <code>+</code></h3><ol>\n<li><strong>字符串 + XX &#x3D; 字符串</strong></li>\n</ol>\n<p>任何值和字符串做加法运算，都会先调用 String() 函数转换为字符串，然后再做拼串操作。最终的运算结果是字符串。</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result1 = <span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&#x27;3&#x27;</span>; <span class=\"comment\">// 字符串：33</span></span><br><span class=\"line\"></span><br><span class=\"line\">result2 = <span class=\"string\">&#x27;1&#x27;</span> + <span class=\"number\">2</span> + <span class=\"number\">3</span>; <span class=\"comment\">// 字符串：123</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>Boolean + 数字 &#x3D; 数字</strong></li>\n</ol>\n<p>Boolean 型和数字型相加时， true 按 1 来算 ，false 按 0 来算。这里其实是先调 Number() 函数，将 Boolean 类型转为 Number 类型，然后再和 数字相加。</p>\n<ol start=\"3\">\n<li><strong>null + 数字 &#x3D; 数字</strong></li>\n</ol>\n<p>等价于：0 + 数字</p>\n<ol start=\"4\">\n<li><strong>undefined + 数字 &#x3D; NaN</strong></li>\n</ol>\n<p>计算结果：NaN</p>\n<ol start=\"5\">\n<li>任何值和 <strong>NaN</strong> 运算的结果都是 NaN。</li>\n</ol>\n<h3 id=\"隐式类型转换——运算符：-、-、-、\"><a href=\"#隐式类型转换——运算符：-、-、-、\" class=\"headerlink\" title=\"隐式类型转换——运算符：-、*、/、%\"></a>隐式类型转换——运算符：<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code></h3><p>任何非 Number 类型的值做<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>运算时，会将这些值转换为 Number 然后再运算(内部调用的是 Number() 函数），运算结果是 Number 类型。</p>\n<p>任何数据和 NaN进行运算，结果都是NaN。</p>\n<p>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result1 = <span class=\"number\">100</span> - <span class=\"string\">&#x27;1&#x27;</span>; <span class=\"comment\">// 99</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = <span class=\"literal\">true</span> + <span class=\"title class_\">NaN</span>; <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自增和自减运算符\"><a href=\"#自增和自减运算符\" class=\"headerlink\" title=\"自增和自减运算符\"></a>自增和自减运算符</h2><h3 id=\"自增运算符\"><a href=\"#自增运算符\" class=\"headerlink\" title=\"自增运算符 ++\"></a>自增运算符 <code>++</code></h3><p>作用：可以快速对一个变量进行加1操作。只能操作变量，不能操作常量或者表达式。</p>\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a1 = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a2 = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">a1++;</span><br><span class=\"line\"><span class=\"keyword\">const</span> result = a1++ + a2; <span class=\"comment\">// result的结果为4</span></span><br><span class=\"line\"><span class=\"comment\">// (a1+a2)++; // 报错，没有这种写法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a3 = <span class=\"number\">3</span>;</span><br><span class=\"line\">a3++; <span class=\"comment\">// 报错，因为常量无法再自加</span></span><br></pre></td></tr></table></figure>\n\n<p>自增分成两种：<code>a++</code>和<code>++a</code>。共同点：</p>\n<p>（1）无论是 <code>a++</code> 还是<code>++a</code>，自增都会使原变量的值加 1。</p>\n<p>（2）<strong>我们要注意的是</strong>：<code>a</code>是变量，而<code>a++</code>和<code>++a</code>是<strong>表达式</strong>。</p>\n<p>那这两种自增，有啥区别呢？区别是：<code>a++</code> 和 <code>++a</code>的值不同：（也就是说，表达式的值不同）</p>\n<ul>\n<li><p><code>a++</code>这个表达式的值等于原变量的值（a 自增前的值）。可以这样理解：先把 a 的值赋值给表达式，然后 a 再自增。</p>\n</li>\n<li><p><code>++a</code>这个表达式的值等于新值 （a 自增后的值）。 可以这样理解：a 先自增，然后把自增后的值赋值给表达式。</p>\n</li>\n</ul>\n<h3 id=\"自减运算符\"><a href=\"#自减运算符\" class=\"headerlink\" title=\"自减运算符 --\"></a>自减运算符 <code>--</code></h3><p>作用：可以快速对一个变量进行减1操作。原理同自增运算符。</p>\n<p>开发时，大多使用后置的自增&#x2F;自减，并且代码独占一行，例如：<code>num++</code>，或者 <code>num--</code>。</p>\n<h3 id=\"代码举例\"><a href=\"#代码举例\" class=\"headerlink\" title=\"代码举例\"></a>代码举例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> n1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> n2 = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = n1++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(n1); <span class=\"comment\">// 11</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">result = ++n1;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(n1); <span class=\"comment\">//12</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">//12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = n2--;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(n2); <span class=\"comment\">// 19</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 20</span></span><br><span class=\"line\"></span><br><span class=\"line\">result2 = --n2;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(n2); <span class=\"comment\">// 18</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 18</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"隐式类型转换\"><a href=\"#隐式类型转换\" class=\"headerlink\" title=\"隐式类型转换\"></a>隐式类型转换</h3><p>自增和自减时，a的执行过程：</p>\n<p>（1）先调用<code>Number(a)</code>函数；</p>\n<p>（2）然后将<code>Number(a)</code>的返回结果进行 加 1 操作，得到的结果赋值给 a。</p>\n<p>举例 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&#x27;666&#x27;</span>; <span class=\"comment\">// 这里不能用 const 定义，否则报错。</span></span><br><span class=\"line\">a++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：667</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 打印结果： number</span></span><br></pre></td></tr></table></figure>\n\n<p>举例2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&#x27;abc&#x27;</span>;</span><br><span class=\"line\">a++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：NaN。因为 Number(&#x27;abc&#x27;)的结果为 NaN，再自增后，结果依然是 NaN</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 打印结果：number</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一元运算符\"><a href=\"#一元运算符\" class=\"headerlink\" title=\"一元运算符\"></a>一元运算符</h2><p>一元运算符，只需要一个操作数。常见的一元运算符如下。</p>\n<h3 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h3><blockquote>\n<p>typeof 就是典型的一元运算符，因为后面只跟一个操作数。</p>\n</blockquote>\n<p><code>typeof()</code>表示“<strong>获取变量的数据类型</strong>”，它是 JS 提供的一个操作符。返回的是小写，语法为：（两种写法都可以）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 写法1</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> 变量;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写法2</span></span><br><span class=\"line\"><span class=\"title function_\">typeof</span>(变量);</span><br></pre></td></tr></table></figure>\n\n<p>typeof 这个运算符的返回结果就是变量的类型。那返回结果的类型是什么呢？是字符串。</p>\n<p><strong>返回结果</strong>：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">typeof 的语法</th>\n<th align=\"center\">返回结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">typeof 数字（含 typeof NaN）</td>\n<td align=\"center\">number</td>\n</tr>\n<tr>\n<td align=\"left\">typeof 字符串</td>\n<td align=\"center\">string</td>\n</tr>\n<tr>\n<td align=\"left\">typeof 布尔型</td>\n<td align=\"center\">boolean</td>\n</tr>\n<tr>\n<td align=\"left\">typeof 对象</td>\n<td align=\"center\">object</td>\n</tr>\n<tr>\n<td align=\"left\">typeof 方法</td>\n<td align=\"center\">function</td>\n</tr>\n<tr>\n<td align=\"left\">typeof null</td>\n<td align=\"center\">object</td>\n</tr>\n<tr>\n<td align=\"left\">typeof undefined</td>\n<td align=\"center\">undefined</td>\n</tr>\n</tbody></table>\n<p>备注 1：为啥 <code>typeof null</code>的返回值也是 object 呢？因为 null 代表的是<strong>空对象</strong>。</p>\n<p>备注 2：<code>typeof NaN</code>的返回值是 number，上一篇文章中讲过，NaN 是一个特殊的数字。</p>\n<p><strong>返回结果举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 打印结果：string</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> []); <span class=\"comment\">// 空数组的打印结果：object</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> &#123;&#125;); <span class=\"comment\">// 空对象的打印结果：object</span></span><br></pre></td></tr></table></figure>\n\n<p>代码解释：这里的空数组<code>[]</code>、空对象<code>&#123;&#125;</code> ，为啥他们在使用 typeof 时，返回值也是 <code>object</code>呢？因为空数组、空对象都是<strong>引用数据类型 Object</strong>。</p>\n<p>typeof 无法区分数组，但 instanceof 可以。比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<p>关于 instanceof 的详细内容，以后讲对象的时候，会详细介绍。</p>\n<h3 id=\"正号-x2F-负号：-a、-a\"><a href=\"#正号-x2F-负号：-a、-a\" class=\"headerlink\" title=\"正号&#x2F;负号：+a、-a\"></a>正号&#x2F;负号：<code>+a</code>、<code>-a</code></h3><blockquote>\n<p>注意，这里说的是正号&#x2F;负号，不是加号&#x2F;减号。</p>\n</blockquote>\n<p>（1）不会改变原数值。</p>\n<p>（1）正号不会对数字产生任何影响。比如说，<code>2</code>和<code>+2</code>是一样的。</p>\n<p>（2）我们可以对其他的数据类型使用<code>+</code>，来将其转换为 number【重要的小技巧】。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"literal\">true</span>;</span><br><span class=\"line\">a = +a; <span class=\"comment\">// 注意这行代码的一元运算符操作</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a：&#x27;</span> + a);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">&#x27;18&#x27;</span>;</span><br><span class=\"line\">b = +b; <span class=\"comment\">// 注意这行代码的一元运算符操作</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;b：&#x27;</span> + b);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a：1</span><br><span class=\"line\">number</span><br><span class=\"line\"></span><br><span class=\"line\">-----------------</span><br><span class=\"line\"></span><br><span class=\"line\">b：18</span><br><span class=\"line\">number</span><br></pre></td></tr></table></figure>\n\n<p>（3）负号可以对数字进行取反。</p>\n<h3 id=\"隐式类型转换——正号-x2F-负号\"><a href=\"#隐式类型转换——正号-x2F-负号\" class=\"headerlink\" title=\"隐式类型转换——正号&#x2F;负号\"></a>隐式类型转换——正号&#x2F;负号</h3><p>任何值做<code>+a</code>、<code>-a</code>运算时， 内部调用的是 Number() 函数。</p>\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;666&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> b = +a; <span class=\"comment\">// 对 a 进行一元运算，b是运算结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// 打印结果：string。说明 a 的数据类型保持不变。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：&quot;666&quot;。不会改变原数值。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b); <span class=\"comment\">// 打印结果：number。说明 b 的数据类型发生了变化。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 打印结果：666</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h2><p>三目运算符也叫三元运算符、条件运算符。</p>\n<p>语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">条件表达式 ? 语句1 : 语句2;</span><br></pre></td></tr></table></figure>\n\n<p><strong>执行流程</strong>——条件运算符在执行时，首先对条件表达式进行求值：</p>\n<ul>\n<li><p>如果该值为 true，则执行语句 1，并返回执行结果</p>\n</li>\n<li><p>如果该值为 false，则执行语句 2，并返回执行结果</p>\n</li>\n</ul>\n<p>如果条件表达式的求值结果是一个非布尔值，会将其转换为布尔值然后再运算。</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><p>逻辑运算符有三个：</p>\n<ul>\n<li><p><code>&amp;&amp;</code>： 与（且）。两个都为真，结果才为真。特点：一假则假。</p>\n</li>\n<li><p><code>||</code> ：或。只要有一个是真，结果就是真。特点：特点: 一真则真。</p>\n</li>\n<li><p><code>!</code> ：非。对一个布尔值进行取反。特点: 真变假, 假变真。</p>\n</li>\n</ul>\n<p>注意：能参与逻辑运算的，都是布尔值。</p>\n<p><strong>连比的写法：</strong></p>\n<p>来看看逻辑运算符连比的写法。</p>\n<p>举例 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> &lt; <span class=\"number\">2</span> &amp;&amp; <span class=\"number\">2</span> &lt; <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果为 false。</p>\n<p>举例 2：（判断一个人的年龄是否在 18~65 岁之间）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入您的年龄&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a &gt;= <span class=\"number\">18</span> &amp;&amp; a &lt; <span class=\"number\">65</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;可以上班&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;准备退休&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>PS：上面的<code>a&gt;=18 &amp;&amp; a&lt;= 65</code>千万别想当然地写成<code> 18&lt;= a &lt;= 65</code>，没有这种语法。</p>\n<h3 id=\"非布尔值的与或运算【重要】\"><a href=\"#非布尔值的与或运算【重要】\" class=\"headerlink\" title=\"非布尔值的与或运算【重要】\"></a>非布尔值的与或运算【重要】</h3><blockquote>\n<p>之所以重要，是因为在实际开发中，我们经常用这种代码做容错处理或者兜底处理。</p>\n</blockquote>\n<p>非布尔值进行<strong>与或运算</strong>时，会先将其转换为布尔值，然后再运算，但返回结果是<strong>原值</strong>。比如说：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"number\">5</span> &amp;&amp; <span class=\"number\">6</span>; <span class=\"comment\">// 运算过程：true &amp;&amp; true;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result：&#x27;</span> + result); <span class=\"comment\">// 打印结果：6（也就是最后面的那个值）</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码可以看到，虽然运算过程为布尔值的运算，但返回结果是原值。</p>\n<p>那么，返回结果是哪个原值呢？我们来看一下。</p>\n<p>1、两个非布尔值，做逻辑运算：</p>\n<p><strong>与运算</strong>的返回结果：</p>\n<ul>\n<li><p>如果第一个值为 false，则只执行第一条语句，并直接返回第一个值；不会再往后执行。</p>\n</li>\n<li><p>如果第一个值为 true，则继续执行第二条语句，并返回第二个值（无论第二个值的结果如何）。</p>\n</li>\n</ul>\n<p><strong>或运算</strong>的返回结果：</p>\n<ul>\n<li><p>如果第一个值为 true，则只执行第一条语句，并直接返回第一个值；不会再往后执行。</p>\n</li>\n<li><p>如果第一个值为 false，则继续执行第二条语句，并返回第二个值（无论第二个值的结果如何）。</p>\n</li>\n</ul>\n<p>2、三个及以上的非布尔值，做逻辑运算：</p>\n<p><strong>与运算</strong>的返回结果：（value1 &amp;&amp; value2 &amp;&amp; value3）</p>\n<ul>\n<li>从左到右依次计算操作数，找到第一个为 false 的值为止。</li>\n<li>如果所有的值都为 true，则返回最后一个值。</li>\n</ul>\n<p><strong>或运算</strong>的返回结果：（value1 || value2 || value3）</p>\n<ul>\n<li>从左到右依次计算操作数，找到第一个为 true 的值为止。</li>\n<li>如果所有的值都为 false，则返回最后一个值。</li>\n</ul>\n<h3 id=\"非布尔值的-运算\"><a href=\"#非布尔值的-运算\" class=\"headerlink\" title=\"非布尔值的 ! 运算\"></a>非布尔值的 <code>!</code> 运算</h3><p>非布尔值进行<strong>非运算</strong>时，会先将其转换为布尔值，然后再运算，返回结果是<strong>布尔值</strong>。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">a = !a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a); <span class=\"comment\">// boolean</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"短路运算的妙用【重要】\"><a href=\"#短路运算的妙用【重要】\" class=\"headerlink\" title=\"短路运算的妙用【重要】\"></a>短路运算的妙用【重要】</h3><blockquote>\n<p>下方举例中的写法技巧，在实际开发中，经常用到。这种写法，是一种很好的「容错、容灾、降级」方案，需要多看几遍。</p>\n</blockquote>\n<p>1、JS 中的<code>&amp;&amp;</code>属于<strong>短路</strong>的与：</p>\n<ul>\n<li><p>如果第一个值为 false，则不会执行后面的内容。</p>\n</li>\n<li><p>如果第一个值为 true，则继续执行第二条语句，并返回第二个值。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a1 = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 第一个值为true，会继续执行后面的内容</span></span><br><span class=\"line\">a1 &amp;&amp; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;看 a1 出不出来&#x27;</span>); <span class=\"comment\">// 可以弹出 alert 框</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a2 = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"comment\">// 第一个值为false，不会继续执行后面的内容</span></span><br><span class=\"line\">a2 &amp;&amp; <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;看 a2 出不出来&#x27;</span>); <span class=\"comment\">// 不会弹出 alert 框</span></span><br></pre></td></tr></table></figure>\n\n<p>2、JS 中的<code>||</code>属于<strong>短路</strong>的或：</p>\n<ul>\n<li><p>如果第一个值为 true，则不会执行后面的内容。</p>\n</li>\n<li><p>如果第一个值为 false，则继续执行第二条语句，并返回第二个值。</p>\n</li>\n</ul>\n<p>实际开发中，我们经常是这样来做「容错处理」的，如下。</p>\n<p>举例1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result; <span class=\"comment\">// 请求接口时，后台返回的内容</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> errorMsg = <span class=\"string\">&#x27;&#x27;</span>; <span class=\"comment\">// 前端的文案提示</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result &amp; result.<span class=\"property\">retCode</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  errorMsg = <span class=\"string\">&#x27;恭喜你中奖啦~&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result &amp;&amp; result.<span class=\"property\">retCode</span> != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 接口返回异常码时</span></span><br><span class=\"line\">\terrorMsg = result.<span class=\"property\">msg</span> || <span class=\"string\">&#x27;活动太火爆，请稍后再试&#x27;</span>; <span class=\"comment\">// 文案提示信息，优先用 接口返回的msg字段，其次用 &#x27;活动太火爆，请稍后再试&#x27; 这个文案兜底。</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!result) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 接口挂掉时</span></span><br><span class=\"line\">\terrorMsg = <span class=\"string\">&#x27;网络异常，请稍后再试&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例2，当前端成功调用一个接口后，返回的数据为 result 对象。这个时候，我们用变量 a 来接收 result 里的图片资源：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (result.<span class=\"property\">retCode</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = result &amp;&amp; result.<span class=\"property\">data</span> &amp;&amp; result.<span class=\"property\">data</span>.<span class=\"property\">imgUrl</span> || <span class=\"string\">&#x27;http://img.smyhvae.com/20160401_01.jpg&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的意思是，获取返回结果中的<code>result.data.imgUrl</code>这个图片资源；如果返回结果中没有 <code>result.data.imgUrl</code> 这个字段，就用 <code>http://img.smyhvae.com/20160401_01.jpg</code> 作为<strong>兜底</strong>图片。这种写法，在实际开发中经常用到。</p>\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><p>赋值：将等号右侧的值赋给符号左侧的变量。</p>\n<h3 id=\"赋值运算符包括哪些\"><a href=\"#赋值运算符包括哪些\" class=\"headerlink\" title=\"赋值运算符包括哪些\"></a>赋值运算符包括哪些</h3><ul>\n<li><p><code>=</code> 直接赋值。比如 <code>var a = 5</code>。意思是，把 5 这个值，往 a 里面存一份。简称：把 5 赋值给 a。</p>\n</li>\n<li><p><code>+=</code>：比如 a +&#x3D; 5 等价于 a &#x3D; a + 5。</p>\n</li>\n<li><p><code>-=</code>：比如 a -&#x3D; 5 等价于 a &#x3D; a - 5。</p>\n</li>\n<li><p><code>*=</code>：比如 a _ &#x3D; 5 等价于 a &#x3D; a -5。</p>\n</li>\n<li><p><code>/=</code>：比如 a &#x2F;&#x3D; 5 等价于 a &#x3D; a &#x2F; 5。</p>\n</li>\n<li><p><code>%=</code>：比如 a %&#x3D; 5 等价于 a &#x3D; a % 5。</p>\n</li>\n</ul>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>（1）算数运算符的优先级高于赋值运算符。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"number\">1</span> + <span class=\"number\">2</span>; <span class=\"comment\">// 先计算 1 + 2，再把计算结果赋值给 result。因为算数运算符的优先级高于赋值运算符。</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）赋值运算符的结合性是右结合性（从右至左的顺序计算）。举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a1, a2;</span><br><span class=\"line\">a1 = a2 = <span class=\"number\">3</span>; <span class=\"comment\">// 先将 3 复制给 a2，再将 a2 的值赋值给 a1</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h2><p>比较运算符可以比较两个值之间的大小关系，如果关系成立它会返回 true，如果关系不成立则返回 false。</p>\n<p>比较运算符有很多种，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;\t大于号</span><br><span class=\"line\">&lt;\t小于号</span><br><span class=\"line\">&gt;= \t大于或等于</span><br><span class=\"line\">&lt;=  小于或等于</span><br><span class=\"line\">== \t等于</span><br><span class=\"line\">=== 全等于</span><br><span class=\"line\">!=\t不等于</span><br><span class=\"line\">!== 不全等于</span><br></pre></td></tr></table></figure>\n\n<p><strong>比较运算符，得到的结果都是布尔值：要么是 true，要么是 false</strong>。如果关系成立，就返回true；如果关系不成立，就返回false。</p>\n<p>举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"number\">5</span> &gt; <span class=\"number\">10</span>; <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"非数值的比较\"><a href=\"#非数值的比较\" class=\"headerlink\" title=\"非数值的比较\"></a>非数值的比较</h3><p>（1）对于非数值进行比较时，会将其转换为数值类型（内部是调用<code>Number()方法</code>），再进行比较。</p>\n<p>举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span> &gt; <span class=\"literal\">true</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span> &gt;= <span class=\"literal\">true</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span> &gt; <span class=\"string\">&#x27;0&#x27;</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(10 &gt; null); //true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任何值和NaN做任何比较都是false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">10</span> &lt;= <span class=\"string\">&#x27;hello&#x27;</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> &gt; <span class=\"literal\">false</span>); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）特殊情况：如果参与比较的都是字符串，则<strong>不会</strong>将其转换为数字进行比较，比较的是字符串的<strong>Unicode 编码</strong>。【非常重要，这里是个大坑，很容易踩到】</p>\n<p>比较字符编码时，是一位一位进行比较，顺序从左到右。如果大一样，则继续比较下一位。</p>\n<p>比如说，当你尝试去比较<code>&quot;123&quot;</code>和<code>&quot;56&quot;</code>这两个字符串时，你会发现，字符串”56”竟然比字符串”123”要大（因为 5 比 1 大）。也就是说，下面这样代码的打印结果，其实是 true:（这个我们一定要注意，在日常开发中，很容易忽视）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 比较两个字符串时，比较的是字符串的字符编码，所以可能会得到不可预期的结果</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;56&#x27;</span> &gt; <span class=\"string\">&#x27;123&#x27;</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>因此</strong>：当我们想比较两个字符串型的数字时，<strong>一定一定要先转型</strong>再比较大小，比如 <code>parseInt()</code>。</p>\n<p>（3）任何值和 NaN 做任何比较都是 false。</p>\n<h3 id=\"符号的强调\"><a href=\"#符号的强调\" class=\"headerlink\" title=\"==符号的强调\"></a><code>==</code>符号的强调</h3><p><code>==</code>这个符号，它是<strong>判断是否等于</strong>，而不是赋值。注意事项如下：</p>\n<p>（1）<code>== </code>这个符号，还可以验证字符串是否相同。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我爱你中国&#x27;</span> == <span class=\"string\">&#x27;我爱你中国&#x27;</span>); <span class=\"comment\">// 输出结果为true</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）<code>== </code>这个符号并不严谨，会做隐式转换，将不同的数据类型，<strong>转为相同类型</strong>进行比较。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;6&#x27;</span> == <span class=\"number\">6</span>); <span class=\"comment\">// 打印结果：true。这里的字符串&quot;6&quot;会先转换为数字6，然后再进行比较</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> == <span class=\"string\">&#x27;1&#x27;</span>); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">0</span> == -<span class=\"number\">0</span>); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> == <span class=\"number\">0</span>); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<p>（3）undefined 衍生自 null，所以这两个值做相等判断时，会返回 true。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span> == <span class=\"literal\">null</span>); <span class=\"comment\">//打印结果：true。</span></span><br></pre></td></tr></table></figure>\n\n<p>（4）NaN 不和任何值相等，包括它本身。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">NaN</span> == <span class=\"title class_\">NaN</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">NaN</span> === <span class=\"title class_\">NaN</span>); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<p>问题：那如果我想判断 b 的值是否为 NaN，该怎么办呢？</p>\n<p>答案：可以通过 isNaN()函数来判断一个值是否是 NaN。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(b));</span><br></pre></td></tr></table></figure>\n\n<p>如上方代码所示，如果 b 为 NaN，则返回 true；否则返回 false。</p>\n<h3 id=\"全等符号的强调\"><a href=\"#全等符号的强调\" class=\"headerlink\" title=\"===全等符号的强调\"></a><code>===</code>全等符号的强调</h3><p><strong>全等在比较时，不会做类型转换</strong>。如果要保证<strong>完全等于</strong>（即：不仅要判断取值相等，还要判断数据类型相同），我们就要用三个等号<code>===</code>。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;6&#x27;</span> === <span class=\"number\">6</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span> === <span class=\"number\">6</span>); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<p>上述内容分析出：</p>\n<ul>\n<li><p><code>==</code>两个等号，不严谨，”6”和 6 是 true。</p>\n</li>\n<li><p><code>===</code>三个等号，严谨，”6”和 6 是 false。</p>\n</li>\n</ul>\n<p>另外还有：**<code>==</code>的反面是<code>!=</code>，<code>===</code>的反面是<code>!==</code>**。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> != <span class=\"number\">8</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> != <span class=\"string\">&#x27;3&#x27;</span>); <span class=\"comment\">// false，因为3==&quot;3&quot;是true，所以反过来就是false。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> !== <span class=\"string\">&#x27;3&#x27;</span>); <span class=\"comment\">// true，应为3===&quot;3&quot;是false，所以反过来是true。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"不同数据类型之间的大小比较\"><a href=\"#不同数据类型之间的大小比较\" class=\"headerlink\" title=\"不同数据类型之间的大小比较\"></a>不同数据类型之间的大小比较</h2><p>这一段是比较运算符的延伸，内容繁琐，新手可以不用记，等以后用到的时候再查阅。</p>\n<h3 id=\"数值类型和其他类型比较\"><a href=\"#数值类型和其他类型比较\" class=\"headerlink\" title=\"数值类型和其他类型比较\"></a>数值类型和其他类型比较</h3><p>先将其他类型隐式转换为数值类型（内部是调用<code>Number()</code>方法），然后比较大小。代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串与数字比较</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;200&#x27;</span> &gt; <span class=\"number\">100</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a&#x27;</span> &gt; <span class=\"number\">100</span>); <span class=\"comment\">// false。 &#x27;a&#x27; 被转换成 NaN 进行比较</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;110a&#x27;</span> &gt; <span class=\"number\">100</span>); <span class=\"comment\">// false。 &#x27;110a&#x27; 被转换成 NaN 进行比较。说明`110a`在做隐式转换的时候，是调用了 Number(&#x27;110a&#x27;)方法，而不是调用  parseInt(&#x27;110a&#x27;)方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 布尔值与数字比较</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> == <span class=\"number\">1</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">false</span> == <span class=\"number\">0</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// null 与数字进行比较</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> &lt; <span class=\"number\">0</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> == <span class=\"number\">0</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> &gt; <span class=\"number\">0</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> &lt;= <span class=\"number\">0</span>); <span class=\"comment\">// true。这是一个很严重的bug</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> &gt;= <span class=\"number\">0</span>); <span class=\"comment\">// true。同上</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// undefined 与数字进行比较：结果都是 false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span> &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span> == <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span> &lt; <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">undefined</span> &gt;= <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日期大小比较\"><a href=\"#日期大小比较\" class=\"headerlink\" title=\"日期大小比较\"></a>日期大小比较</h3><p>如果日期的格式为字符串，则比较字符串的<strong>Unicode 编码</strong>。代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myDate1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2022</span>, <span class=\"number\">8</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> myDate2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2022</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> myDate3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2022</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> myDate4 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2023</span>, <span class=\"number\">8</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate1 &lt; myDate2); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate1 &lt; myDate3); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate3 &lt; myDate4); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> date1 = <span class=\"string\">&#x27;2022-08-08&#x27;</span>; <span class=\"comment\">// &quot;2022/08/08&quot;同理</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> date2 = <span class=\"string\">&#x27;2022-08-09&#x27;</span>; <span class=\"comment\">// &quot;2022/08/09&quot;同理</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> date3 = <span class=\"string\">&#x27;2022-09-08&#x27;</span>; <span class=\"comment\">// &quot;2022/09/08&quot;同理</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> date4 = <span class=\"string\">&#x27;2023-08-08&#x27;</span>; <span class=\"comment\">// &quot;2023/08/08&quot;同理</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date1 &lt; date2); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date1 &lt; date3); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date3 &lt; date4); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> time1 = <span class=\"string\">&#x27;2022-08-08 08:00:00&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> time2 = <span class=\"string\">&#x27;2022-08-08 08:00:01&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> time3 = <span class=\"string\">&#x27;2022-08-08 08:01:00&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> time4 = <span class=\"string\">&#x27;2022-08-08 09:00:00&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(time1 &lt; time2); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(time1 &lt; time3); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(time1 &lt; time4); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数据类型不同，此处是先将 myDate1 转为字符串类型，然后比较大小。可想而知，结果都是 false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate1 &gt;= date1); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate1 &lt;= date1); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 虽然时间格式不同，但都是字符串，所以可以比较大小</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date1 &lt; time1); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/w390058785/article/details/79957206\">【JavaScript】探究数据类型之间的隐式转换和大小比较</a></li>\n</ul>\n<h2 id=\"逗号运算符\"><a href=\"#逗号运算符\" class=\"headerlink\" title=\"逗号运算符\"></a>逗号运算符</h2><p>逗号运算符一般用于简化代码。逗号运算符的优先级是所有运算符中最低的。</p>\n<p>逗号运算符也是一个运算符, 所以也有运算符结果。它的运算符结果是最后一个表达式的结果。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 利用逗号运算符同时定义多个变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a, b;</span><br><span class=\"line\"><span class=\"comment\">// 利用逗号运算符同时给多个变量赋值</span></span><br><span class=\"line\">a = <span class=\"number\">10</span>, b = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> res1 = (<span class=\"number\">1</span> + <span class=\"number\">2</span>, <span class=\"number\">3</span> + <span class=\"number\">4</span>, <span class=\"number\">5</span> + <span class=\"number\">6</span>); <span class=\"comment\">// 打印结果：11</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运算符的优先级\"><a href=\"#运算符的优先级\" class=\"headerlink\" title=\"运算符的优先级\"></a>运算符的优先级</h2><p>运算符的优先级如下：（优先级从高到低）</p>\n<ul>\n<li><p><code>.</code>、<code>[]</code>、<code>new</code></p>\n</li>\n<li><p><code>()</code></p>\n</li>\n<li><p><code>++</code>、<code>--</code></p>\n</li>\n<li><p><code>!</code>、<code>~</code>、<code>+</code>（单目）、<code>-</code>（单目）、<code>typeof</code>、<code>void</code>、<code>delete</code></p>\n</li>\n<li><p><code>*</code>、<code>/</code>、<code>%</code></p>\n</li>\n<li><p><code>+</code>（双目）、<code>-</code>（双目）</p>\n</li>\n<li><p><code>&lt;&lt;</code>、<code>&gt;&gt;</code>、<code>&gt;&gt;&gt;</code></p>\n</li>\n<li><p>比较运算符：<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code></p>\n</li>\n<li><p>比较运算符：<code>==</code>、<code>!==</code>、<code>===</code>、<code>!==</code></p>\n</li>\n<li><p><code>&amp;</code></p>\n</li>\n<li><p><code>^</code></p>\n</li>\n<li><p><code>|</code></p>\n</li>\n<li><p>逻辑运算符：<code>&amp;&amp;</code> （注意：逻辑与 <code>&amp;&amp;</code> 比逻辑或 <code>||</code> 的优先级更高）</p>\n</li>\n<li><p>逻辑运算符：<code>||</code></p>\n</li>\n<li><p><code>?:</code></p>\n</li>\n<li><p><code>=</code>、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code>、<code>&lt;&lt;=</code>、<code>&gt;&gt;=</code>、<code>&gt;&gt;&gt;=</code>、<code>&amp;=</code>、<code>^=</code>、<code>|=</code></p>\n</li>\n<li><p><code>,</code></p>\n</li>\n</ul>\n<p>备注：在实际写代码的时候，如果你不清楚哪个优先级更高，可以先尝试把括号用上。</p>\n<h2 id=\"Unicode-编码\"><a href=\"#Unicode-编码\" class=\"headerlink\" title=\"Unicode 编码\"></a>Unicode 编码</h2><blockquote>\n<p>这一段中，我们来讲引申的内容：Unicode 编码的使用。</p>\n</blockquote>\n<p>各位同学可以先在网上查一下“Unicode 编码表”。</p>\n<p>1、在字符串中可以使用转义字符输入 Unicode 编码。格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\u四位编码</span><br></pre></td></tr></table></figure>\n\n<p>举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;\\u2600&#x27;</span>); <span class=\"comment\">// 这里的 2600 采用的是16进制</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;\\u2602&#x27;</span>); <span class=\"comment\">// 这里的 2602 采用的是16进制。</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20181222_1218.png\"></p>\n<p>2、我们还可以在 HTML 网页中使用 Unicode 编码。格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;#四位编码;</span><br></pre></td></tr></table></figure>\n\n<p>PS：我们知道，Unicode 编码采用的是 16 进制，但是，这里的编码需要使用 10 进制。</p>\n<p>举例如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 100px;&quot;</span>&gt;</span><span class=\"symbol\">&amp;#9860;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20181222_1226.png\"></p>\n","text":"运算符的定义和分类运算符的定义运算符：也叫操作符，是一种符号。通过运算符可以对一个或多个值进行运算，并获取运算结果。表达式：数字、运算符、变量的组合（组成的式子）。表达式最终都会有一个运算结果，我们将这个结果称为表达式的返回值。比如：+、*、/、() 都是运算符，而（3+5）/2","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"11-流程控制语句：选择结构","slug":"JavaScript/11-流程控制语句：选择结构（if和switch）","date":"2023-02-15T12:06:59.460Z","updated":"2023-02-15T12:22:44.180Z","comments":true,"path":"api/articles/JavaScript/11-流程控制语句：选择结构（if和switch）.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20181227_1200.png","content":"<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>用<code>&#123;&#125;</code>包围起来的代码，就是代码块。</p>\n<p>在 ES5 语法中，代码块，只具有<strong>分组</strong>的作用，没有其他的用途。代码块中的内容，在外部是完全可见的。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;千古壹号&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a = &#x27;</span> + a);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：（可以看出，虽然变量 a 是定义在代码块中的，但是在外部依然可以访问）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">千古壹号</span><br><span class=\"line\">a = 2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"流程控制语句\"><a href=\"#流程控制语句\" class=\"headerlink\" title=\"流程控制语句\"></a>流程控制语句</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候我们要通过控制语句的执行顺序来实现我们想要的业务逻辑和功能。</p>\n<h3 id=\"流程控制语句分类\"><a href=\"#流程控制语句分类\" class=\"headerlink\" title=\"流程控制语句分类\"></a>流程控制语句分类</h3><ul>\n<li><p>顺序结构</p>\n</li>\n<li><p>选择结构：if 语句、switch 语句</p>\n</li>\n<li><p>循环结构：while 语句、for 语句</p>\n</li>\n</ul>\n<h2 id=\"顺序结构\"><a href=\"#顺序结构\" class=\"headerlink\" title=\"顺序结构\"></a>顺序结构</h2><p>按照代码的先后顺序，依次执行。结构图如下：</p>\n<p><img src=\"http://img.smyhvae.com/20181227_1200.png\"></p>\n<h2 id=\"if-语句\"><a href=\"#if-语句\" class=\"headerlink\" title=\"if 语句\"></a>if 语句</h2><p>if 语句有以下三种形式。</p>\n<h3 id=\"if-语句的三种形式\"><a href=\"#if-语句的三种形式\" class=\"headerlink\" title=\"if 语句的三种形式\"></a>if 语句的三种形式</h3><p>形式1：（条件成立才执行。如果条件不成立，那就什么都不做）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件表达式) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件为真时，做的事情</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于非布尔类型的数据，会先转换成布尔类型再判断。下同。</p>\n<p>形式 2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件表达式) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件为真时，做的事情</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件为假时，做的事情</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>形式3：（多分支的 if 语句）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件表达式<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件1为真时，做的事情</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (条件表达式<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件1不满足，条件2满足时，做的事情</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (条件表达式<span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件1、2不满足，条件3满足时，做的事情</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 条件1、2、3都不满足时，做的事情</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上所有的语句体中，只执行其中一个。</p>\n<h3 id=\"做个题目\"><a href=\"#做个题目\" class=\"headerlink\" title=\"做个题目\"></a>做个题目</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根据BMI（身体质量指数）显示一个人的体型。</span><br><span class=\"line\">BMI指数，就是体重、身高的一个计算公式。公式是：</span><br><span class=\"line\">BMI =体重÷身高的平方</span><br><span class=\"line\"></span><br><span class=\"line\">比如，老师的体重是81.6公斤，身高是1.71米。</span><br><span class=\"line\">那么老师的BMI就是  81.6 ÷ 1.712     等于 27.906022365856163</span><br><span class=\"line\"></span><br><span class=\"line\">过轻：低于18.5</span><br><span class=\"line\">正常：18.5-24.99999999</span><br><span class=\"line\">过重：25-27.9999999</span><br><span class=\"line\">肥胖：28-32</span><br><span class=\"line\">非常肥胖, 高于32</span><br><span class=\"line\"></span><br><span class=\"line\">用JavaScript开发一个程序，让用户先输入自己的体重，然后输入自己的身高（弹出两次prompt框）。</span><br><span class=\"line\">计算它的BMI，根据上表，弹出用户的身体情况。比如“过轻” 、 “正常” 、“过重” 、 “肥胖” 、“非常肥胖”。</span><br></pre></td></tr></table></figure>\n\n<p><strong>答案</strong>：</p>\n<p>写法 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一步，输入身高和体重</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">parseFloat</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入身高，单位是米&#x27;</span>));</span><br><span class=\"line\"><span class=\"keyword\">const</span> weight = <span class=\"built_in\">parseFloat</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入体重，单位是公斤&#x27;</span>));</span><br><span class=\"line\"><span class=\"comment\">//第二步，计算BMI指数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">BMI</span> = weight / <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(height, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">//第三步，if语句来判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &lt; <span class=\"number\">18.5</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;偏瘦&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &lt; <span class=\"number\">25</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;正常&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &lt; <span class=\"number\">28</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;过重&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &lt;= <span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;肥胖&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;非常肥胖&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>写法 2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一步，输入身高和体重</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">parseFloat</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入身高，单位是米&#x27;</span>));</span><br><span class=\"line\"><span class=\"keyword\">const</span> weight = <span class=\"built_in\">parseFloat</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入体重，单位是公斤&#x27;</span>));</span><br><span class=\"line\"><span class=\"comment\">//第二步，计算BMI指数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">BMI</span> = weight / <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(height, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">//第三步，if语句来判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &gt; <span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;非常肥胖&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &gt;= <span class=\"number\">28</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;肥胖&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &gt;= <span class=\"number\">25</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;过重&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable constant_\">BMI</span> &gt;= <span class=\"number\">18.5</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;正常&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;偏瘦&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"if-语句的嵌套\"><a href=\"#if-语句的嵌套\" class=\"headerlink\" title=\"if 语句的嵌套\"></a>if 语句的嵌套</h3><p>我们通过下面这个例子来引出 if 语句的嵌套。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个加油站为了鼓励车主多加油，所以加的多有优惠。</span><br><span class=\"line\">92号汽油，每升6元；如果大于等于20升，那么每升5.9；</span><br><span class=\"line\">97号汽油，每升7元；如果大于等于30升，那么每升6.95</span><br><span class=\"line\">编写JS程序，用户输入自己的汽油编号，然后输入自己加多少升，弹出价格。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://img.smyhvae.com/20180117_2232.png\"></p>\n<p>代码实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一步，输入</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> bianhao = <span class=\"built_in\">parseInt</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;您想加什么油？填写92或者97&#x27;</span>));</span><br><span class=\"line\"><span class=\"keyword\">const</span> sheng = <span class=\"built_in\">parseFloat</span>(<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;您想加多少升？&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二步，判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (bianhao == <span class=\"number\">92</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//编号是92的时候做的事情</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sheng &gt;= <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> price = sheng * <span class=\"number\">5.9</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> price = sheng * <span class=\"number\">6</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bianhao == <span class=\"number\">97</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//编号是97的时候做的事情</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sheng &gt;= <span class=\"number\">30</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> price = sheng * <span class=\"number\">6.95</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> price = sheng * <span class=\"number\">7</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;不好意思，没有这个编号的汽油！&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;价格是&#x27;</span> + price);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"switch-语句（条件分支语句）\"><a href=\"#switch-语句（条件分支语句）\" class=\"headerlink\" title=\"switch 语句（条件分支语句）\"></a>switch 语句（条件分支语句）</h2><p>switch 语句也叫条件分支语句。</p>\n<h3 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(表达式) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> 值<span class=\"number\">1</span>：</span><br><span class=\"line\">\t\t语句体<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> 值<span class=\"number\">2</span>：</span><br><span class=\"line\">\t\t语句体<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">default</span>：</span><br><span class=\"line\">\t\t语句体 n+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：switch 可以理解为“开关、转换” 。case 可以理解为“案例、选项”。</p>\n<h3 id=\"switch-语句的执行流程\"><a href=\"#switch-语句的执行流程\" class=\"headerlink\" title=\"switch 语句的执行流程\"></a>switch 语句的执行流程</h3><p>流程图如下：</p>\n<p><img src=\"http://img.smyhvae.com/20190815_1501.png\"></p>\n<p>执行流程如下：</p>\n<p>（1）首先，计算出表达式的值，和各个 case 依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到 break 就会结束。</p>\n<p>（2）然后，如果所有的 case 都和表达式的值不匹配，就会执行 default 语句体部分。</p>\n<h3 id=\"switch-语句的结束条件【非常重要】\"><a href=\"#switch-语句的结束条件【非常重要】\" class=\"headerlink\" title=\"switch 语句的结束条件【非常重要】\"></a>switch 语句的结束条件【非常重要】</h3><ul>\n<li>情况 a：遇到 break 就结束（而不是遇到 default 就结束）。因为 break 在此处的作用是，立即结束并退出整个 switch 语句。</li>\n<li>情况 b：执行到程序的末尾就结束。</li>\n</ul>\n<p>我们稍后讲 case穿透的时候，你就会明白其中的奥妙了。</p>\n<h3 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h3><p>1、switch 后面的括号里可以是变量、常量、表达式， 通常是一个<strong>变量</strong>（一般做法是：先把表达式存放到变量中）。</p>\n<p>case 后面的值可以是变量、常量、表达式。</p>\n<p>2、**case的判断逻辑是<code>===</code>，不是<code>==</code>**。因此，字符串<code>&#39;6&#39;</code>和 数字 <code>6</code> 是不一样的。</p>\n<p>举例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> msg = <span class=\"string\">&#x27;notice&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (msg) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;notice&#x27;</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;提示&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;warning&#x27;</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;警告&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;error&#x27;</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;错误&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;默认文案&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例 2：（case 后面的是表达式）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">28</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> age &lt; <span class=\"number\">18</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;未成年人&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> age &gt;= <span class=\"number\">18</span> &amp;&amp; age &lt;= <span class=\"number\">65</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;还能干活儿&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> age &gt; <span class=\"number\">65</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;该退休了&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;默认文案&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码解释：由于 switch 里的值是 true，所以，在众多的 case 语句中，会去匹配第一个符合 <code>case true</code>的语句，然后命中这条语句。</p>\n<p>3、default不一定要写在最后面。 switch 中的 default 无论放到什么位置，都会等到所有case 都不匹配再执行。default 也可以省略。</p>\n<h3 id=\"case-穿透\"><a href=\"#case-穿透\" class=\"headerlink\" title=\"case 穿透\"></a>case 穿透</h3><p>switch 语句中的<code>break</code>可以省略，但一般不建议（对于新手而言）。否则结果可能不是你想要的，会出现一个现象：<strong>case 穿透</strong>。</p>\n<p>当然，如果你能利用好 case 穿透，会让代码写得十分优雅。</p>\n<p><strong>举例 1</strong>：（case 穿透的情况）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> num = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//switch判断语句</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (num) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期一&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期二&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期三&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期四&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//break;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期五&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//break;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期六&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;星期日&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;你输入的数据有误&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的运行结果，可能会令你感到意外：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">星期四</span><br><span class=\"line\">星期五</span><br><span class=\"line\">星期六</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的解释：因为在 case 4 和 case 5 中都没有 break，那语句走到 case 6 的 break 才会停止。</p>\n<p><strong>举例 2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//switch判断语句</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> number = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (number) &#123;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是defaul语句&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// break;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;第二个呵呵:&#x27;</span> + number);</span><br><span class=\"line\">    <span class=\"comment\">//break;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;第三个呵呵:&#x27;</span> + number);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;第四个呵呵:&#x27;</span> + number);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的运行结果，你也许会意外：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我是defaul语句</span><br><span class=\"line\">第二个呵呵:5</span><br><span class=\"line\">第三个呵呵:5</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的解释：代码走到 default 时，因为没有遇到 break，所以会继续往下走，直到遇见 break 或者走到程序的末尾。 从这个例子可以看出：switch 语句的结束与 default 的顺序无关。</p>\n<h2 id=\"switch-语句的实战举例：替换-if-语句\"><a href=\"#switch-语句的实战举例：替换-if-语句\" class=\"headerlink\" title=\"switch 语句的实战举例：替换 if 语句\"></a>switch 语句的实战举例：替换 if 语句</h2><p>我们实战开发中，经常需要根据接口的返回码 retCode ，来让前端做不同的展示。</p>\n<p>这种场景是业务开发中经常出现的，请一定要掌握。然而，很多人估计会这么写：</p>\n<h3 id=\"写法-1（不推荐。这种写法太挫了）\"><a href=\"#写法-1（不推荐。这种写法太挫了）\" class=\"headerlink\" title=\"写法 1（不推荐。这种写法太挫了）\"></a>写法 1（不推荐。这种写法太挫了）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> retCode = <span class=\"number\">1003</span>; <span class=\"comment\">// 返回码 retCode 的值可能有很多种情况</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (retCode == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口联调成功&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">101</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动不存在&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">103</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动未开始&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">104</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动已结束&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1001</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;参数错误&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1002</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口频率限制&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1003</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;未登录&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1004</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;（风控用户）提示 活动太火爆啦~军万马都在挤，请稍后再试&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 其他异常返回码</span></span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;系统君失联了，请稍候再试&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果你是按照上面的 <code>if else</code>的方式来写各种条件判断，说明你的代码水平太初级了，会被人喷的，千万不要这么写。这种写法，容易导致<strong>嵌套太深，可读性很差</strong>。</p>\n<p>那要怎么改进呢？继续往下看。</p>\n<h3 id=\"写法-2（推荐。通过-return-的方式，将上面的写法进行改进）\"><a href=\"#写法-2（推荐。通过-return-的方式，将上面的写法进行改进）\" class=\"headerlink\" title=\"写法 2（推荐。通过 return 的方式，将上面的写法进行改进）\"></a>写法 2（推荐。通过 return 的方式，将上面的写法进行改进）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> retCode = <span class=\"number\">1003</span>; <span class=\"comment\">// 返回码 retCode 的值可能有很多种情况</span></span><br><span class=\"line\"><span class=\"title function_\">handleRetCode</span>(retCode);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法：根据接口不同的返回码，处理前端不同的显示状态</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">handleRetCode</span>(<span class=\"params\">retCode</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口联调成功&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">101</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动不存在&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">103</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动未开始&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">104</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动已结束&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1001</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;参数错误&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1002</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口频率限制&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1003</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;未登录&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retCode == <span class=\"number\">1004</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;（风控用户）提示 活动太火爆啦~军万马都在挤，请稍后再试&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 其他异常返回码</span></span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;系统君失联了，请稍候再试&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的写法 2，是比较推荐的写法：直接通过 return 的方式，让 function 里的代码不再继续往下走，这就达到目的了。对了，因为要用到 return ，所以整段代码是封装到一个 function 里的。</p>\n<p>如果你以后看到有前端小白采用的是<strong>写法 1</strong>，请一定要把<strong>写法 2</strong>传授给他：不需要那么多的 if else，直接用 return 返回就行了。</p>\n<h3 id=\"写法-3（推荐。将-if-else-改为-switch）\"><a href=\"#写法-3（推荐。将-if-else-改为-switch）\" class=\"headerlink\" title=\"写法 3（推荐。将 if else 改为 switch）\"></a>写法 3（推荐。将 if else 改为 switch）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> retCode = <span class=\"number\">1003</span>; <span class=\"comment\">// 返回码 retCode 的值可能有很多种情况</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (retCode) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口联调成功&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">101</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动不存在&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">103</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动未开始&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">104</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;活动已结束&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1001</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;参数错误&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1002</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;接口频率限制&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1003</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;未登录&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1004</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;（风控用户）提示 活动太火爆啦~军万马都在挤，请稍后再试&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 其他异常返回码</span></span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;系统君失联了，请稍候再试&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在实战开发中，方式 3 是非常推荐的写法，甚至比方式 2 还要好。我们尽量不要写太多的 if 语句，避免代码嵌套过深。</p>\n<h3 id=\"switch-语句的优雅写法：适时地去掉-break\"><a href=\"#switch-语句的优雅写法：适时地去掉-break\" class=\"headerlink\" title=\"switch 语句的优雅写法：适时地去掉 break\"></a>switch 语句的优雅写法：适时地去掉 break</h3><p>我们先来看看下面这段代码：（不推荐）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> day = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (day) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;relax&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;relax&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码，咋一看，好像没啥毛病。但你有没有发现，重复代码太多了？</p>\n<p>实战开发中，凡是有重复的地方，我们都必须要想办法简化。写代码就是在不断重构的过程。</p>\n<p>上面的代码，可以改进如下：（推荐，非常优雅）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> day = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (day) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;work&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>; <span class=\"comment\">// 在这里放一个 break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;relax&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>; <span class=\"comment\">// 在这里放一个 break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>改进后的这种写法，是最优雅的、最简洁、可读性最好的。</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><h3 id=\"if-和-switch如何选择\"><a href=\"#if-和-switch如何选择\" class=\"headerlink\" title=\"if 和 switch如何选择\"></a>if 和 switch如何选择</h3><p>如果是对区间进行判断，则建议用 if。如果是对几个固定的值进行判断，那么，数量少的话用 if，数量多的话用switch。</p>\n<h3 id=\"用-return-代替-if-else\"><a href=\"#用-return-代替-if-else\" class=\"headerlink\" title=\"用 return 代替 if else\"></a>用 return 代替 if else</h3><p>业务场景举例：</p>\n<p>在实战业务中涉及到调接口时，一般会这样做：</p>\n<ul>\n<li><p>接口返回码为 0 时，前端 resolve。</p>\n</li>\n<li><p>接口返回未登录时，前端跳转到登录页面。</p>\n</li>\n<li><p>接口返回其他情况，或者无返回时，前端 reject。</p>\n</li>\n</ul>\n<p>写法 1、if else 的写法：（不推荐）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (res) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (+res.<span class=\"property\">retCode</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(res);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (+res.<span class=\"property\">retCode</span> == <span class=\"number\">8888</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">goLogin</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">reject</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>写法 2、 return 的写法：（推荐）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!res || +res.<span class=\"property\">retCode</span> !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (+res.<span class=\"property\">retCode</span> === <span class=\"number\">8888</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 未登录</span></span><br><span class=\"line\">        <span class=\"title function_\">goLogin</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">reject</span>(res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">resolve</span>(res);</span><br></pre></td></tr></table></figure>\n\n<p>备注： Promise</p>\n","text":"代码块用&#123;&#125;包围起来的代码，就是代码块。在 ES5 语法中，代码块，只具有分组的作用，没有其他的用途。代码块中的内容，在外部是完全可见的。举例：1<br>2<br>3<br>4<br>5<br>6<br>7<br>&#123;<br>    var a = 2","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"12-流程控制语句：循环结构（for和while）","slug":"JavaScript/12-流程控制语句：循环结构（for和while）","date":"2023-02-15T12:06:59.462Z","updated":"2023-02-15T12:23:14.198Z","comments":true,"path":"api/articles/JavaScript/12-流程控制语句：循环结构（for和while）.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20181229_1415.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>循环语句：通过循环语句可以反复执行一段代码多次。</p>\n<h2 id=\"for-循环\"><a href=\"#for-循环\" class=\"headerlink\" title=\"for 循环\"></a>for 循环</h2><h3 id=\"for-循环的语法\"><a href=\"#for-循环的语法\" class=\"headerlink\" title=\"for 循环的语法\"></a>for 循环的语法</h3><p>语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(①初始化表达式; ②条件表达式; ④更新表达式)&#123;</span><br><span class=\"line\">\t③语句...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①执行初始化表达式，初始化变量（初始化表达式只会执行一次）</span><br><span class=\"line\"></span><br><span class=\"line\">②执行条件表达式，判断是否执行循环：</span><br><span class=\"line\">\t如果为true，则执行循环③</span><br><span class=\"line\">\t如果为false，终止循环</span><br><span class=\"line\"></span><br><span class=\"line\">④执行更新表达式，更新表达式执行完毕继续重复②</span><br></pre></td></tr></table></figure>\n\n<p>for 循环举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的解释：i 是循环变量，1 是初始值，i&lt;100是执行条件，i++是步长。</p>\n<h3 id=\"for-循环举例\"><a href=\"#for-循环举例\" class=\"headerlink\" title=\"for 循环举例\"></a>for 循环举例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">13</span>; i = i + <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的遍历步骤：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">程序一运行，将执行let i = 1;这条语句， 所以i的值是1。</span><br><span class=\"line\">然后程序会验证一下i &lt; 13是否满足，1&lt;13是真，所以执行一次循环体（就是大括号里面的语句）。</span><br><span class=\"line\">执行完循环体之后，会执行i=i+4这条语句，所以i的值，是5。</span><br><span class=\"line\"></span><br><span class=\"line\">程序会会验证一下i &lt; 13是否满足，5&lt;13是真，所以执行一次循环体（就是大括号里面的语句）。</span><br><span class=\"line\">执行完循环体之后，会执行i=i+4这条语句，所以i的值，是9。</span><br><span class=\"line\"></span><br><span class=\"line\">程序会会验证一下i &lt; 13是否满足，9&lt;13是真，所以执行一次循环体（就是大括号里面的语句）。</span><br><span class=\"line\">执行完循环体之后，会执行i=i+4这条语句，所以i的值，是13。</span><br><span class=\"line\"></span><br><span class=\"line\">程序会会验证一下i &lt; 13是否满足，13&lt;13是假，所以不执行循环体了，将退出循环。</span><br><span class=\"line\"></span><br><span class=\"line\">最终输出输出结果为：1、5、9</span><br></pre></td></tr></table></figure>\n\n<p>接下来做几个题目。</p>\n<p><strong>题目 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i = i + <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    i = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：2、6、10</p>\n<p><strong>题目 2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：11</p>\n<p><strong>题目 3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">7</span>; i = i + <span class=\"number\">3</span>) &#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：7</p>\n<p><strong>题目 4</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>死循环。</p>\n<h2 id=\"while-循环语句\"><a href=\"#while-循环语句\" class=\"headerlink\" title=\"while 循环语句\"></a>while 循环语句</h2><h3 id=\"while-循环\"><a href=\"#while-循环\" class=\"headerlink\" title=\"while 循环\"></a>while 循环</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(条件表达式)&#123;</span><br><span class=\"line\">\t语句...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while语句在执行时，先对条件表达式进行求值判断：</span><br><span class=\"line\"></span><br><span class=\"line\">\t如果值为true，则执行循环体：</span><br><span class=\"line\">\t\t循环体执行完毕后，继续对表达式进行判断</span><br><span class=\"line\">\t\t如果为true，则继续执行循环体，以此类推</span><br><span class=\"line\"></span><br><span class=\"line\">\t如果值为false，则终止循环</span><br></pre></td></tr></table></figure>\n\n<p><strong>如果有必要的话，我们可以使用 break 来终止循环</strong>。</p>\n<h3 id=\"do…while-循环\"><a href=\"#do…while-循环\" class=\"headerlink\" title=\"do…while 循环\"></a>do…while 循环</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">\t语句...</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(条件表达式)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do...while语句在执行时，会先执行循环体：</span><br><span class=\"line\"></span><br><span class=\"line\">\t循环体执行完毕以后，再对while后的条件表达式进行判断：</span><br><span class=\"line\">\t\t如果结果为true，则继续执行循环体，执行完毕继续判断，以此类推</span><br><span class=\"line\">\t\t如果结果为false，则终止循环</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"while-循环和-do…while-循环的区别\"><a href=\"#while-循环和-do…while-循环的区别\" class=\"headerlink\" title=\"while 循环和 do…while 循环的区别\"></a>while 循环和 do…while 循环的区别</h3><p>这两个语句的功能类似，不同的是：</p>\n<ul>\n<li>while：先判断后执行。只有条件表达式为真，才会执行循环体。</li>\n<li>do…while：先执行后判断。无论条件表达式是否为真，循环体至少会被执行一次。</li>\n</ul>\n<h3 id=\"while-循环举例\"><a href=\"#while-循环举例\" class=\"headerlink\" title=\"while 循环举例\"></a>while 循环举例</h3><p>题目：假如投资的年利率为 5%，试求从 1000 块增长到 5000 块，需要花费多少年？</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 假如投资的年利率为5%，试求从1000块增长到5000块，需要花费多少年</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//定义一个变量，表示当前的钱数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> money = <span class=\"number\">1000</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//定义一个计数器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//定义一个while循环来计算每年的金额</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">while</span> (money &lt; <span class=\"number\">5000</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                money *= <span class=\"number\">1.05</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//使count自增</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                count++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(money);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;一共需要&#x27;</span> + count + <span class=\"string\">&#x27;年&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5003.18854203379</span><br><span class=\"line\"></span><br><span class=\"line\">一共需要33年</span><br></pre></td></tr></table></figure>\n\n<p>另外，你也可以自己算一下，假如投资的年利率为 5%，从 1000 块增长到 1 万块，需要花费 48 年：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10401.269646942128</span><br><span class=\"line\">一共需要48年</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"break-和-continue\"><a href=\"#break-和-continue\" class=\"headerlink\" title=\"break 和 continue\"></a>break 和 continue</h2><blockquote>\n<p>这个知识点非常重要。</p>\n</blockquote>\n<h3 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h3><ul>\n<li><p>break 可以用来退出 switch 语句或退出<strong>整个</strong>循环语句（循环语句包括 for 循环、while 循环。不包括 if。单独的 if 语句里不能用 break 和 continue，否则会报错）。</p>\n</li>\n<li><p>break 会立即终止离它<strong>最近</strong>的那个循环语句。</p>\n</li>\n<li><p>可以为循环语句创建一个 label，来标识当前的循环（格式：label:循环语句）。使用 break 语句时，可以在 break 后跟着一个 label，这样 break 将会结束指定的循环，而不是最近的。</p>\n</li>\n</ul>\n<p><strong>举例 1</strong>：通过 break 终止循环语句</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;i的值:&#x27;</span> + i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>; <span class=\"comment\">// 注意，虽然在 if 里 使用了 break，但这里的 break 是服务于外面的 for 循环。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i的值:0</span><br><span class=\"line\">i的值:1</span><br><span class=\"line\">i的值:2</span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 2</strong>：label 的使用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">outer</span>: <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;外层循环 i 的值：&#x27;</span> + i);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span> outer; <span class=\"comment\">// 直接跳出outer所在的外层循环（这个outer是我自定义的label）</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;内层循环 j 的值:&#x27;</span> + j);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外层循环 i 的值：0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue\"></a>continue</h3><ul>\n<li><p>continue 只能用于循环语句（包括 for 循环、while 循环，不包括 if。单独的 if 语句里不能用 break 和 continue，否则会报错）。可以用来跳过<strong>当次</strong>循环，继续下一次循环。</p>\n</li>\n<li><p>同样，continue 默认只会离他<strong>最近</strong>的循环起作用。</p>\n</li>\n<li><p>同样，如果需要跳过指定的当次循环，可以使用 label 标签。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;i的值:&#x27;</span> + i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i的值:1</span><br><span class=\"line\"></span><br><span class=\"line\">i的值:3</span><br><span class=\"line\"></span><br><span class=\"line\">i的值:5</span><br><span class=\"line\"></span><br><span class=\"line\">i的值:7</span><br><span class=\"line\"></span><br><span class=\"line\">i的值:9</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"各种练习\"><a href=\"#各种练习\" class=\"headerlink\" title=\"各种练习\"></a>各种练习</h2><h3 id=\"练习一：质数相关\"><a href=\"#练习一：质数相关\" class=\"headerlink\" title=\"练习一：质数相关\"></a>练习一：质数相关</h3><p><strong>题目</strong>：在页面中接收一个用户输入的数字，并判断该数是否是质数。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            质数：只能被1和它自身整除的数，1不是质数也不是合数，质数必须是大于1的自然数。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">const</span> num = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入一个大于1的整数:&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//判断这个值是否合法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;该值不合法！&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//先用flag标志位，来保存当前的数的状态</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//默认当前num是质数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断num是否是质数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//获取2-num之间的数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; num; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//console.log(i);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//判断num是否能被i整除</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (num % i == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//一旦发现：如果num能被i整除，则说明num一定不是质数，</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//此时：设置flag为false，然后跳出 for 循环</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        flag = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//如果num是质数则输出</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (flag) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(num + <span class=\"string\">&#x27;是质数！！！&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;这个不是质数&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习二：质数相关\"><a href=\"#练习二：质数相关\" class=\"headerlink\" title=\"练习二：质数相关\"></a>练习二：质数相关</h3><p><strong>题目</strong>：打印 1~100 之间的所有质数</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 打印出1-100之间所有的质数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//打印2-100之间所有的数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//创建一个布尔值，用来保存结果，默认i是质数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断i是否是质数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//获取到2-i之间的所有的数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">2</span>; j &lt; i; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//判断i是否能被j整除</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (i % j == <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//如果进入判断则证明i不是质数,修改flag值为false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        flag = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//如果是质数，则打印i的值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (flag) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20181229_1415.png\"></p>\n<h3 id=\"练习三：99-乘法表\"><a href=\"#练习三：99-乘法表\" class=\"headerlink\" title=\"练习三：99 乘法表\"></a>练习三：99 乘法表</h3><p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">2000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">span</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 1.打印99乘法表</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *   1*1=1</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *   1*2=2 2*2=4</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *   1*3=3 2*3=6 3*3=9</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *   1*4=4 2*4=8 3*4=12 4*4=16</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *                      ....9*9=81</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             *</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 2.打印出1-100之间所有的质数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//创建外层循环，用来控制乘法表的高度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//创建一个内层循环来控制图形的宽度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;span&gt;&#x27;</span> + j + <span class=\"string\">&#x27;*&#x27;</span> + i + <span class=\"string\">&#x27;=&#x27;</span> + i * j + <span class=\"string\">&#x27;&lt;/span&gt;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//输出一个换行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>页面效果：</p>\n<p><img src=\"http://img.smyhvae.com/20181229_1410.png\"></p>\n","text":"前言循环语句：通过循环语句可以反复执行一段代码多次。for 循环for 循环的语法语法：1<br>2<br>3<br>for(①初始化表达式; ②条件表达式; ④更新表达式)&#123;<br>\t③语句...<br>&#125;<br>执行流程：1<br>2<br>3<br>4<","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"13-对象简介","slug":"JavaScript/13-对象简介","date":"2023-02-15T12:06:59.464Z","updated":"2023-02-15T12:23:48.156Z","comments":true,"path":"api/articles/JavaScript/13-对象简介.json","excerpt":"","keywords":null,"cover":"https://img.smyhvae.com/20221014_1130.png","content":"<h2 id=\"对象简介\"><a href=\"#对象简介\" class=\"headerlink\" title=\"对象简介\"></a>对象简介</h2><h3 id=\"对象的概念\"><a href=\"#对象的概念\" class=\"headerlink\" title=\"对象的概念\"></a>对象的概念</h3><p>在 JavaScript 中，对象是一组<strong>无序</strong>的相关属性和方法的集合。</p>\n<p><strong>对象的作用是：封装信息</strong>。比如 Student 类里可以封装学生的姓名、年龄、成绩等。</p>\n<p>对象具有<strong>特征</strong>（属性）和<strong>行为</strong>（方法）。</p>\n<h3 id=\"对象包括哪些数据类型\"><a href=\"#对象包括哪些数据类型\" class=\"headerlink\" title=\"对象包括哪些数据类型\"></a>对象包括哪些数据类型</h3><p>我们知道，JS 中的数据类型，包括以下几种：</p>\n<ul>\n<li><p><strong>基本数据类型（值类型）</strong>：String 字符串、Number 数值、BigInt 大型数值、Boolean 布尔值、Null 空值、Undefined 未定义、Symbol。</p>\n</li>\n<li><p><strong>引用数据类型（引用类型）</strong>：Object 对象。</p>\n</li>\n</ul>\n<p>只要不是那七种基本数据类型，就全都是对象。对象属于一种复合的数据类型，在对象中可以保存多个不同数据类型的属性。</p>\n<h3 id=\"对象的分类\"><a href=\"#对象的分类\" class=\"headerlink\" title=\"对象的分类\"></a>对象的分类</h3><p>1、内置对象：</p>\n<ul>\n<li><p>由 ES 标准中定义的对象，在任何的 ES 的实现中都可以使用。</p>\n</li>\n<li><p>比如：Object、Math、Date、String、Array、Number、Boolean、Function 等。</p>\n</li>\n</ul>\n<p>2、宿主对象：</p>\n<ul>\n<li><p>由 JS 的运行环境提供的对象，目前来讲主要指由浏览器提供的对象。</p>\n</li>\n<li><p>比如 BOM、DOM，比如<code>console</code>、<code>document</code>。</p>\n</li>\n</ul>\n<p>3、自定义对象：</p>\n<ul>\n<li>由开发人员自己创建的对象。</li>\n</ul>\n<p>通过 new 关键字创建出来的对象实例，都是属于对象类型。</p>\n<h2 id=\"自定义对象\"><a href=\"#自定义对象\" class=\"headerlink\" title=\"自定义对象\"></a>自定义对象</h2><h3 id=\"为什么需要自定义对象\"><a href=\"#为什么需要自定义对象\" class=\"headerlink\" title=\"为什么需要自定义对象\"></a>为什么需要自定义对象</h3><p>保存一个值时，可以使用<strong>变量</strong>，保存多个值（一组值）时，可以使用<strong>数组</strong>。</p>\n<p>比如，如果要保存一个人的信息，通过数组的方式可以这样保存：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"number\">35</span>, <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"string\">&#x27;180&#x27;</span>];</span><br></pre></td></tr></table></figure>\n\n<p>上面这种表达方式比较乱。而如果用 JS 中的<strong>自定义对象</strong>来表达，<strong>结构会更清晰</strong>。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">favor</span>: [<span class=\"string\">&#x27;阅读&#x27;</span>, <span class=\"string\">&#x27;羽毛球&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">sayHi</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>由此可见，自定义对象里面的属性均是<strong>键值对（key: value）</strong>，表示属性和值的映射关系：</p>\n<ul>\n<li><p>键&#x2F;属性：属性名。</p>\n</li>\n<li><p>值：属性值，可以是任意类型的值（数字类型、字符串类型、布尔类型，函数类型等）。</p>\n</li>\n</ul>\n<h3 id=\"自定义对象的语法\"><a href=\"#自定义对象的语法\" class=\"headerlink\" title=\"自定义对象的语法\"></a>自定义对象的语法</h3><p>语法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: value,</span><br><span class=\"line\">    <span class=\"attr\">key</span>: value,</span><br><span class=\"line\">    <span class=\"attr\">key</span>: value,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>key 和 value 之间用冒号分隔，每组 key:vaue 之间用逗号分隔，最后一对 key:value 的末尾可以写逗号，也可以不写逗号。</p>\n<p>问：对象的属性名是否需要加引号？</p>\n<p>答：如果属性名不符合 JS 标识符的命名规范，则需要用引号包裹。比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;my-name&#x27;</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>补充：其实，JS 的内置对象、宿主对象，底层也是通过自定义对象的形式（也就是键值对的形式）进行封装的。</p>\n<h2 id=\"对象的属性值补充\"><a href=\"#对象的属性值补充\" class=\"headerlink\" title=\"对象的属性值补充\"></a>对象的属性值补充</h2><h3 id=\"对象的方法【重要】\"><a href=\"#对象的方法【重要】\" class=\"headerlink\" title=\"对象的方法【重要】\"></a>对象的方法【重要】</h3><p>对象的属性值可以是任何的数据类型，也可以是个<strong>函数</strong>（也称之为方法）。换而言之，<strong>如果对象的属性值是函数，则这个函数也被称之为对象的“方法”</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj.<span class=\"property\">sayName</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 没加括号，就是获取方法</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">sayName</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 加了括号，就是调用方法。即：执行函数内容，并执行函数体的内容</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"title function_\">sayName</span>());</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"https://img.smyhvae.com/20221014_1130.png\"></p>\n<h3 id=\"对象中的属性值，也可以是一个对象\"><a href=\"#对象中的属性值，也可以是一个对象\" class=\"headerlink\" title=\"对象中的属性值，也可以是一个对象\"></a>对象中的属性值，也可以是一个对象</h3><p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建对象 obj1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj1.<span class=\"property\">test</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建对象 obj2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj2.<span class=\"property\">name</span> = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将整个 obj2 对象，设置为 obj1 的属性</span></span><br><span class=\"line\">obj1.<span class=\"property\">test</span> = obj2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1.<span class=\"property\">test</span>.<span class=\"property\">name</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果为：qianguyihao</p>\n<h2 id=\"传值和传址的区别\"><a href=\"#传值和传址的区别\" class=\"headerlink\" title=\"传值和传址的区别\"></a>传值和传址的区别</h2><h3 id=\"对象保存在哪里\"><a href=\"#对象保存在哪里\" class=\"headerlink\" title=\"对象保存在哪里\"></a>对象保存在哪里</h3><p>1、基本数据类型的值直接保存在<strong>栈内存</strong>中，变量与变量之间是独立的，值与值之间是独立的，修改一个变量不会影响其他的变量。</p>\n<p>2、对象是保存到<strong>堆内存</strong>中的，每创建一个新的对象，就会在堆内存中开辟出一个新的空间。变量保存的是对象的内存地址（对象的引用）。换而言之，对象的值是保存在<strong>堆内存</strong>中的，而对象的引用（即变量）是保存在<strong>栈内存</strong>中的。</p>\n<p><strong>如果两个变量保存的是同一个对象引用，当一个通过一个变量修改属性时，另一个也会受到影响</strong>。这句话很重要，我们来看看下面的例子。</p>\n<h3 id=\"传值\"><a href=\"#传值\" class=\"headerlink\" title=\"传值\"></a>传值</h3><p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = a; <span class=\"comment\">// 将 a 赋值给 b</span></span><br><span class=\"line\"></span><br><span class=\"line\">b = <span class=\"number\">2</span>; <span class=\"comment\">// 修改 b 的值</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，当我修改 b 的值之后，a 的值并不会发生改变。这个大家都知道。我们继续往下看。</p>\n<h3 id=\"传址（一个经典的例子）\"><a href=\"#传址（一个经典的例子）\" class=\"headerlink\" title=\"传址（一个经典的例子）\"></a>传址（一个经典的例子）</h3><p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">obj1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;孙悟空&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = obj1; <span class=\"comment\">// 将 obj1 的地址赋值给 obj2。从此， obj1 和 obj2 指向了同一个堆内存空间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改obj2的name属性</span></span><br><span class=\"line\">obj2.<span class=\"property\">name</span> = <span class=\"string\">&#x27;猪八戒&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码中，当我修改 obj2 的 name 属性后，会发现，obj1 的 name 属性也会被修改。因为 obj1 和 obj2 指向的是堆内存中的同一个地址。</p>\n<p>这个例子要尤其注意，实战开发中，很容易忽略。</p>\n<p>对于引用类型的数据，赋值相当于地址拷贝，a、b 指向了同一个堆内存地址。所以改了 b，a 也会变；本质上 a、b 就是一个东西。</p>\n<p>如果你打算把引用类型 A 的值赋值给 B，让 A 和 B 相互不受影响的话，可以通过 Object.assign() 来复制对象。效果如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;孙悟空&#x27;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 复制对象：把 obj1 赋值给 obj3。两者之间互不影响</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, obj1);</span><br></pre></td></tr></table></figure>\n","text":"对象简介对象的概念在 JavaScript 中，对象是一组无序的相关属性和方法的集合。对象的作用是：封装信息。比如 Student 类里可以封装学生的姓名、年龄、成绩等。对象具有特征（属性）和行为（方法）。对象包括哪些数据类型我们知道，JS 中的数据类型，包括以下几种：基本数据类","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"14-基本包装类型","slug":"JavaScript/14-基本包装类型","date":"2023-02-15T12:06:59.467Z","updated":"2023-02-15T12:24:26.005Z","comments":true,"path":"api/articles/JavaScript/14-基本包装类型.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180202_1351.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"基本数据类型不能绑定属性和方法\"><a href=\"#基本数据类型不能绑定属性和方法\" class=\"headerlink\" title=\"基本数据类型不能绑定属性和方法\"></a>基本数据类型不能绑定属性和方法</h2><p>属性和方法只能添加给对象，不能添加给基本数据类型。我们拿字符串来举例。</p>\n<p><strong>1、基本数据类型：</strong></p>\n<p>基本数据类型<code>string</code>是<strong>无法绑定属性和方法</strong>的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">str.<span class=\"property\">aaa</span> = <span class=\"number\">12</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> str); <span class=\"comment\">//打印结果为：string</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">aaa</span>); <span class=\"comment\">//打印结果为：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，当我们尝试打印<code>str.aaa</code>的时候，会发现打印结果为：undefined。也就是说，不能给 <code>string</code> 绑定属性和方法。</p>\n<p>当然，我们可以打印 str.length、str.indexOf(“m”)等等。因为这两个方法的底层做了数据类型转换（<strong>临时</strong>将 <code>string</code> 字符串转换为 <code>String</code> 对象，然后再调用内置方法），也就是我们在下一段将要讲到的<strong>包装类</strong>。</p>\n<p><strong>2、引用数据类型：</strong></p>\n<p>引用数据类型<code>String</code>是可以绑定属性和方法的。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> strObj = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;smyhvae&#x27;</span>);</span><br><span class=\"line\">strObj.<span class=\"property\">aaa</span> = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(strObj);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> strObj); <span class=\"comment\">//打印结果：Object</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(strObj.<span class=\"property\">aaa</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1351.png\"></p>\n<p>内置对象 Number 也有一些自带的方法，比如：</p>\n<ul>\n<li><p>Number.MAX_VALUE;</p>\n</li>\n<li><p>Number.MIN_VALUE;</p>\n</li>\n</ul>\n<p>内置对象 Boolean 也有一些自带的方法，但是用的不多。</p>\n<h3 id=\"基本包装类型\"><a href=\"#基本包装类型\" class=\"headerlink\" title=\"基本包装类型\"></a>基本包装类型</h3><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>JS 中的数据类型包括以下几种。</p>\n<ul>\n<li><p>基本数据类型：String 字符串、Number 数值、BigInt 大型数值、Boolean 布尔值、Null 空值、Undefined 未定义、Symbol。</p>\n</li>\n<li><p>引用数据类型：Object 对象。</p>\n</li>\n</ul>\n<p>JS 为我们提供了三个<strong>基本包装类</strong>：</p>\n<ul>\n<li><p>String()：将基本数据类型字符串，转换为 String 对象。</p>\n</li>\n<li><p>Number()：将基本数据类型的数字，转换为 Number 对象。</p>\n</li>\n<li><p>Boolean()：将基本数据类型的布尔值，转换为 Boolean 对象。</p>\n</li>\n</ul>\n<p>通过上面这这三个包装类，我们可以<strong>将基本数据类型的数据转换为对象</strong>。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str1 = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> str2 = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> bool = <span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> str1); <span class=\"comment\">// 打印结果：string</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> str2); <span class=\"comment\">// 注意，打印结果：object</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>需要注意的是</strong>：我们在实际应用中一般不会使用基本数据类型的<strong>对象</strong>。如果使用基本数据类型的对象，在做一些比较时可能会带来一些<strong>不可预期</strong>的结果。</p>\n<p>比如说：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> boo1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> boo2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(boo1 === boo2); <span class=\"comment\">// 打印结果竟然是：false</span></span><br></pre></td></tr></table></figure>\n\n<p>再比如说：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> boo3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (boo3) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>); <span class=\"comment\">// 这行代码竟然执行了</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本包装类型的作用\"><a href=\"#基本包装类型的作用\" class=\"headerlink\" title=\"基本包装类型的作用\"></a>基本包装类型的作用</h3><p>当我们对一些基本数据类型的值去调用属性和方法时，JS引擎会<strong>临时使用包装类将基本数据类型转换为引用数据类型</strong>（即“隐式类型转换”），这样的话，基本数据类型就有了属性和方法，然后再调用对象的属性和方法；调用完以后，再将其转换为基本数据类型。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">length</span>); <span class=\"comment\">// 打印结果：11</span></span><br></pre></td></tr></table></figure>\n\n<p>比如，上面的代码，执行顺序是这样的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 步骤（1）：把简单数据类型 string 转换为 引用数据类型  String，保存到临时变量中</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> temp = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 步骤（2）：把临时变量的值 赋值给 str</span></span><br><span class=\"line\">str = temp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  步骤（3）：销毁临时变量</span></span><br><span class=\"line\">temp = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"在底层，字符串以字符数组的形式保存\"><a href=\"#在底层，字符串以字符数组的形式保存\" class=\"headerlink\" title=\"在底层，字符串以字符数组的形式保存\"></a>在底层，字符串以字符数组的形式保存</h2><p>在底层，字符串是以字符数组的形式保存的。代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;smyhvae&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">length</span>); <span class=\"comment\">// 获取字符串的长度</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str[<span class=\"number\">2</span>]); <span class=\"comment\">// 获取字符串中的第3个字符（下标为2的字符）</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>smyhvae</code>这个字符串在底层是以<code>[&quot;s&quot;, &quot;m&quot;, &quot;y&quot;, &quot;h&quot;, &quot;v&quot;, &quot;a&quot;, &quot;e&quot;]</code>的形式保存的。因此，我们既可以获取字符串的长度，也可以获取指定索引 index 位置的单个字符。这很像数组中的操作。</p>\n<p>再比如，String 对象的很多内置方法，也可以直接给字符串用。此时，也是临时将字符串转换为 String 对象，然后再调用内置方法。</p>\n","text":"基本数据类型不能绑定属性和方法属性和方法只能添加给对象，不能添加给基本数据类型。我们拿字符串来举例。1、基本数据类型：基本数据类型string是无法绑定属性和方法的。1<br>2<br>3<br>4<br>5<br>var str = &#x27;qianguyihao&#x27","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"16-内置对象：Number和Math","slug":"JavaScript/16-内置对象：Number和Math","date":"2023-02-15T12:06:59.472Z","updated":"2023-02-15T12:25:20.472Z","comments":true,"path":"api/articles/JavaScript/16-内置对象：Number和Math.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180117_1730.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"内置对象-Number-的常见方法\"><a href=\"#内置对象-Number-的常见方法\" class=\"headerlink\" title=\"内置对象 Number 的常见方法\"></a>内置对象 Number 的常见方法</h2><h3 id=\"Number-isInteger-判断是否为整数\"><a href=\"#Number-isInteger-判断是否为整数\" class=\"headerlink\" title=\"Number.isInteger() 判断是否为整数\"></a>Number.isInteger() 判断是否为整数</h3><p>语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = Number.isInteger(数字);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"toFixed-小数点后面保留多少位\"><a href=\"#toFixed-小数点后面保留多少位\" class=\"headerlink\" title=\"toFixed() 小数点后面保留多少位\"></a>toFixed() 小数点后面保留多少位</h3><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 = myNum.<span class=\"title function_\">toFixed</span>(num);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将数字 myNum 的小数点后面保留 num 位小数（四舍五入），并返回。不会改变原数字。注意，<strong>返回结果是字符串</strong>。</p>\n<p>参数 num：指定了小数点后面的位数。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">3.456</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num2 = num.<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num); <span class=\"comment\">// 打印结果：3.456</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num2); <span class=\"comment\">// 打印结果：3.46</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> num); <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> num2); <span class=\"comment\">// string</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>num2</code>的结果是3.46，但是请注意，<code>num</code>的类型Number型，而<code>num2</code>的类型却是String型。</p>\n<h2 id=\"内置对象-Math-的常见方法\"><a href=\"#内置对象-Math-的常见方法\" class=\"headerlink\" title=\"内置对象 Math 的常见方法\"></a>内置对象 Math 的常见方法</h2><p>Math 和其他的对象不同，它不是一个构造函数，不需要创建对象。所以我们不需要 通过 new 来调用，而是直接使用里面的属性和方法即可。</p>\n<p>Math属于一个工具类，里面封装了数学运算相关的属性和方法。如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Math.PI</td>\n<td align=\"left\">圆周率</td>\n<td align=\"left\">Math对象的属性</td>\n</tr>\n<tr>\n<td align=\"left\">Math.abs()</td>\n<td align=\"left\"><strong>返回绝对值</strong></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.random()</td>\n<td align=\"left\">生成0-1之间的<strong>随机浮点数</strong></td>\n<td align=\"left\">取值范围是 [0，1)</td>\n</tr>\n<tr>\n<td align=\"left\">Math.floor()</td>\n<td align=\"left\"><strong>向下取整</strong>（往小取值）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.ceil()</td>\n<td align=\"left\"><strong>向上取整</strong>（往大取值）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.round()</td>\n<td align=\"left\">四舍五入取整（正数四舍五入，负数五舍六入）</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.max(x, y, z)</td>\n<td align=\"left\">返回多个数中的最大值</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.min(x, y, z)</td>\n<td align=\"left\">返回多个数中的最小值</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.pow(x,y)</td>\n<td align=\"left\">乘方：返回 x 的 y 次幂</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Math.sqrt()</td>\n<td align=\"left\">开方：对一个数进行开方运算</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = -<span class=\"number\">0.6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(num));        <span class=\"comment\">//取绝对值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(num));      <span class=\"comment\">//向下取整，向小取</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(num));       <span class=\"comment\">//向上取整，向大取</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(num));      <span class=\"comment\">//四舍五入取整（正数四舍五入，负数五舍六入）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>());        <span class=\"comment\">//生成0-1之间的随机数</span></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.6</span><br><span class=\"line\"></span><br><span class=\"line\">-1</span><br><span class=\"line\"></span><br><span class=\"line\">-0</span><br><span class=\"line\"></span><br><span class=\"line\">-1</span><br><span class=\"line\"></span><br><span class=\"line\">0.6453756205275165</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Math-abs-：获绝对值\"><a href=\"#Math-abs-：获绝对值\" class=\"headerlink\" title=\"Math.abs()：获绝对值\"></a>Math.abs()：获绝对值</h2><p>方法定义：返回绝对值。</p>\n<p>注意：</p>\n<ul>\n<li>参数中可以接收字符串类型的数字，此时会将字符串做隐式类型转换，然后再调用 Math.abs() 方法。</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"number\">2</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(-<span class=\"number\">2</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先做隐式类型转换，将 &#x27;-2&#x27;转换为数字类型 -2，然后再调用 Math.abs()</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"string\">&#x27;-2&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"string\">&#x27;hello&#x27;</span>)); <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Math-random-方法：生成随机数\"><a href=\"#Math-random-方法：生成随机数\" class=\"headerlink\" title=\"Math.random() 方法：生成随机数\"></a>Math.random() 方法：生成随机数</h2><p>方法定义：生成 [0, 1) 之间的<strong>随机浮点数</strong>。</p>\n<p>我们来看几个例子。</p>\n<h3 id=\"生成-0-x-之间的随机数\"><a href=\"#生成-0-x-之间的随机数\" class=\"headerlink\" title=\"生成 [0, x) 之间的随机数\"></a>生成 [0, x) 之间的随机数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*x)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"生成-x-y-之间的随机数\"><a href=\"#生成-x-y-之间的随机数\" class=\"headerlink\" title=\"生成 [x, y) 之间的随机数\"></a>生成 [x, y) 之间的随机数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*(y-x)+x)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【重要】生成-x-y-之间的随机整数\"><a href=\"#【重要】生成-x-y-之间的随机整数\" class=\"headerlink\" title=\"【重要】生成 [x, y]之间的随机整数\"></a>【重要】生成 [x, y]之间的随机整数</h3><p>也就是说：生成两个整数之间的随机整数，<strong>并且要包含这两个整数</strong>。</p>\n<p>这个功能很常用，我们可以将其封装成一个方法，代码实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 生成两个整数之间的随机整数，并且要包含这两个整数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getRandom</span>(<span class=\"params\">min, max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (max - min + <span class=\"number\">1</span>)) + min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getRandom</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例：随机点名\"><a href=\"#举例：随机点名\" class=\"headerlink\" title=\"举例：随机点名\"></a>举例：随机点名</h3><p>根据上面的例子，我们还可以再延伸一下，来看看随机点名的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 生成两个整数之间的随机整数，并且要包含这两个整数</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getRandom</span>(<span class=\"params\">min, max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (max - min + <span class=\"number\">1</span>)) + min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"string\">&#x27;邓紫棋&#x27;</span>, <span class=\"string\">&#x27;毛不易&#x27;</span>, <span class=\"string\">&#x27;解忧邵帅&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"title function_\">getRandom</span>(<span class=\"number\">0</span>, arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>); <span class=\"comment\">// 生成随机的index</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[index]); <span class=\"comment\">// 随机点名</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"pow-：乘方\"><a href=\"#pow-：乘方\" class=\"headerlink\" title=\"pow()：乘方\"></a>pow()：乘方</h2><p>如果想计算 <code>a 的 b 次方</code>，可以使用如下函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.pow(a, b);</span><br></pre></td></tr></table></figure>\n\n<p>Math的中文是“数学”，pow是“幂”。</p>\n<p><strong>举例1：</strong></p>\n<p><img src=\"http://img.smyhvae.com/20180117_1730.png\"></p>\n<p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.pow(3, Math.pow(2, 2));</span><br><span class=\"line\">console.log(a);</span><br></pre></td></tr></table></figure>\n\n<p><strong>举例2：</strong></p>\n<p><img src=\"http://img.smyhvae.com/20180117_1740.png\"></p>\n<p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.pow(Math.pow(3, 2), 4);</span><br><span class=\"line\">console.log(a);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqrt-：开方\"><a href=\"#sqrt-：开方\" class=\"headerlink\" title=\"sqrt()：开方\"></a>sqrt()：开方</h2><p>如果想计算数值a的开二次方，可以使用如下函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.sqrt(a);</span><br></pre></td></tr></table></figure>\n\n<p>sqrt即“square 开方”。比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = Math.sqrt(36);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"url-编码和解码\"><a href=\"#url-编码和解码\" class=\"headerlink\" title=\"url 编码和解码\"></a>url 编码和解码</h2><p>URI (Uniform ResourceIdentifiers,通用资源标识符)进行编码，以便发送给浏览器。有效的URI中不能包含某些字符，例如空格。而这URI编码方法就可以对URI进行编码，它们用特殊的UTF-8编码替换所有无效的字符，从而让浏览器能够接受和理解。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">encodeURIComponent</span>();   <span class=\"comment\">//把字符串作为 URI 组件进行编码</span></span><br><span class=\"line\"><span class=\"built_in\">decodeURIComponent</span>();   <span class=\"comment\">//把字符串作为 URI 组件进行解码</span></span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&quot;http://www.cnblogs.com/smyhvae/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"built_in\">encodeURIComponent</span>(url);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);                           <span class=\"comment\">//打印url的编码</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">decodeURIComponent</span>(str));       <span class=\"comment\">//对url进行编码后，再解码，还原为url</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1432.png\"></p>\n","text":"内置对象 Number 的常见方法Number.isInteger() 判断是否为整数语法：1<br>布尔值 = Number.isInteger(数字);<br>toFixed() 小数点后面保留多少位语法：1<br>字符串 = myNum.toFixed(num);<br>解","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"15-内置对象 String：字符串的常见方法","slug":"JavaScript/15-内置对象 String：字符串的常见方法","date":"2023-02-15T12:06:59.470Z","updated":"2023-02-15T12:25:02.011Z","comments":true,"path":"api/articles/JavaScript/15-内置对象 String：字符串的常见方法.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180202_1420.png","content":"<h2 id=\"内置对象简介\"><a href=\"#内置对象简介\" class=\"headerlink\" title=\"内置对象简介\"></a>内置对象简介</h2><blockquote>\n<p>JavaScript 中的对象分为3种：自定义对象、内置对象、浏览器对象。</p>\n</blockquote>\n<blockquote>\n<p>前面两种对象：是JS的基础内容，属于 ECMAScript； 第三个浏览器对象：属于JS独有，即 JS 内置的API。</p>\n</blockquote>\n<p><strong>内置对象</strong>：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用或者基本而必要的功能（属性和方法）。</p>\n<p>内置对象最大的优点就是帮助我们快速开发。</p>\n<p><strong>JavaScript的内置对象</strong>：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内置对象</th>\n<th align=\"left\">对象说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Arguments</td>\n<td align=\"left\">函数参数集合</td>\n</tr>\n<tr>\n<td align=\"left\">Array</td>\n<td align=\"left\">数组</td>\n</tr>\n<tr>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">布尔对象</td>\n</tr>\n<tr>\n<td align=\"left\">Math</td>\n<td align=\"left\">数学对象</td>\n</tr>\n<tr>\n<td align=\"left\">Date</td>\n<td align=\"left\">日期时间</td>\n</tr>\n<tr>\n<td align=\"left\">Error</td>\n<td align=\"left\">异常对象</td>\n</tr>\n<tr>\n<td align=\"left\">Function</td>\n<td align=\"left\">函数构造器</td>\n</tr>\n<tr>\n<td align=\"left\">Number</td>\n<td align=\"left\">数值对象</td>\n</tr>\n<tr>\n<td align=\"left\">Object</td>\n<td align=\"left\">基础对象</td>\n</tr>\n<tr>\n<td align=\"left\">RegExp</td>\n<td align=\"left\">正则表达式对象</td>\n</tr>\n<tr>\n<td align=\"left\">String</td>\n<td align=\"left\">字符串对象</td>\n</tr>\n</tbody></table>\n<h2 id=\"字符串前言\"><a href=\"#字符串前言\" class=\"headerlink\" title=\"字符串前言\"></a>字符串前言</h2><blockquote>\n<p>在日常开发中，String 对象（字符串对象）的使用频率是非常高的。所以有必要详细介绍。</p>\n</blockquote>\n<p>需要注意的是：<strong>字符串的所有方法，都不会改变原字符串</strong>（字符串的不可变性），操作完成后会返回一个新的值。</p>\n<p>字符串的常见方法如下。</p>\n<h2 id=\"查找字符串\"><a href=\"#查找字符串\" class=\"headerlink\" title=\"查找字符串\"></a>查找字符串</h2><h3 id=\"1、indexOf-x2F-lastIndexOf-：获取字符串中指定内容的索引\"><a href=\"#1、indexOf-x2F-lastIndexOf-：获取字符串中指定内容的索引\" class=\"headerlink\" title=\"1、indexOf()&#x2F;lastIndexOf()：获取字符串中指定内容的索引\"></a>1、indexOf()&#x2F;lastIndexOf()：获取字符串中指定内容的索引</h3><blockquote>\n<p>这个方法，是使用频率最高的一个方法。</p>\n</blockquote>\n<p><strong>语法 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">indexOf</span>(想要查询的字符串);</span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>indexOf()</code> 是从前向后查找字符串的位置。同理，<code>lastIndexOf()</code>是从后向前寻找。</p>\n<p><strong>解释</strong>：可以检索一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回其<strong>第一次出现</strong>的索引；如果没有找到指定的内容，则返回 -1。</p>\n<p>因此可以得出一个重要技巧：</p>\n<ul>\n<li><p><strong>如果获取的索引值为 0，说明字符串是以查询的参数为开头的</strong>。</p>\n</li>\n<li><p>如果获取的索引值为-1，说明这个字符串中没有指定的内容。</p>\n</li>\n</ul>\n<p>举例 1：(查找单个字符)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;abcdea&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//给字符查索引(索引值为0,说明字符串以查询的参数为开头)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1420.png\"></p>\n<p>举例 2：（查找字符串）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>语法 2</strong>：</p>\n<p>这个方法还可以指定第二个参数，用来指定查找的<strong>起始位置</strong>。语法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">indexOf</span>(想要查询的字符串, [起始位置]);</span><br></pre></td></tr></table></figure>\n\n<p>举例 3：（两个参数时，需要特别注意）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">result = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标为3的位置开始查找 &#x27;a&#x27;这个字符 【重要】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：9</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>indexOf()</code>方法中携带了两个参数，具体解释请看注释。</p>\n<h3 id=\"indexOf-举例\"><a href=\"#indexOf-举例\" class=\"headerlink\" title=\"indexOf 举例\"></a>indexOf 举例</h3><p><strong>案例</strong>：查找字符串”qianguyihao”中，所有 <code>a</code> 出现的位置以及次数。</p>\n<p>思路：</p>\n<p>（1）先查找第一个 a 出现的位置。</p>\n<p>（2）只要 indexOf 返回的结果不是 -1 就继续往后查找。</p>\n<p>（3）因为 indexOf 只能查找到第一个，所以后面的查找，可以利用第二个参数，在当前索引加 1，从而继续查找。</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> index = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (index !== -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index);</span><br><span class=\"line\">    num++; <span class=\"comment\">// 每打印一次，就计数一次</span></span><br><span class=\"line\">    index = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;o&#x27;</span>, index + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a 出现的次数是: &#x27;</span> + num);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2、search-：获取字符串中指定内容的索引（参数里一般是正则）\"><a href=\"#2、search-：获取字符串中指定内容的索引（参数里一般是正则）\" class=\"headerlink\" title=\"2、search()：获取字符串中指定内容的索引（参数里一般是正则）\"></a>2、search()：获取字符串中指定内容的索引（参数里一般是正则）</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = str.<span class=\"title function_\">search</span>(想要查找的字符串);</span><br><span class=\"line\">索引值 = str.<span class=\"title function_\">search</span>(正则表达式);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>search()</code> 方法里的参数，既可以传字符串，也可以传正则表达式。</p>\n<p><strong>解释</strong>：可以检索一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回其<strong>第一次出现</strong>的索引；如果没有找到指定的内容，则返回 -1。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">search</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：6</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">search</span>(<span class=\"regexp\">/yi/i</span>)); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<p>备注：上方的<code>/yi/i</code>采用的是正则表达式的写法，意思是，让 name去匹配字符<code>yi</code>，忽略大小写。我们在后面会专门介绍正则表达式。</p>\n<h3 id=\"3、includes-：字符串中是否包含指定的内容\"><a href=\"#3、includes-：字符串中是否包含指定的内容\" class=\"headerlink\" title=\"3、includes()：字符串中是否包含指定的内容\"></a>3、includes()：字符串中是否包含指定的内容</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">includes</span>(想要查找的字符串, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串中是否含有指定内容。如果字符串中含有该内容，则会返回 true；否则返回 false。</p>\n<p>参数中的 <code>position</code>：如果不指定，则默认为0；如果指定，则规定了检索的起始位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;yi&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;haha&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;yi&#x27;</span>,<span class=\"number\">7</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"4、startsWith-：字符串是否以指定的内容开头\"><a href=\"#4、startsWith-：字符串是否以指定的内容开头\" class=\"headerlink\" title=\"4、startsWith()：字符串是否以指定的内容开头\"></a>4、startsWith()：字符串是否以指定的内容开头</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">startsWith</span>(想要查找的内容, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串是否以指定的子字符串开头。如果是，则返回 true；否则返回 false。</p>\n<p><strong>参数中的position</strong>：</p>\n<ul>\n<li><p>如果不指定，则默认为0。</p>\n</li>\n<li><p>如果指定，则规定了<strong>检索的起始位置</strong>。检索的范围包括：这个指定位置开始，直到字符串的末尾。即：[position, str.length)</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;abcdefg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;a&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;b&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为指定了起始位置为3，所以是在 defg 这个字符串中检索。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">startsWith</span>(<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5、endsWith-：字符串是否以指定的内容结尾\"><a href=\"#5、endsWith-：字符串是否以指定的内容结尾\" class=\"headerlink\" title=\"5、endsWith()：字符串是否以指定的内容结尾\"></a>5、endsWith()：字符串是否以指定的内容结尾</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = str.<span class=\"title function_\">endsWith</span>(想要查找的内容, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个字符串是否以指定的子字符串结尾。如果是，则返回 true；否则返回 false。</p>\n<p><strong>参数中的position</strong>：</p>\n<ul>\n<li><p>如果不指定，则默认为 str.length。</p>\n</li>\n<li><p>如果指定，则规定了<strong>检索的结束位置</strong>。检索的范围包括：从第一个字符串开始，直到这个指定的位置。即：[0, position)</p>\n</li>\n<li><p>或者你可以这样简单理解：endsWith() 方法里的position，表示<strong>检索的长度</strong>。</p>\n</li>\n</ul>\n<p>注意：startsWith() 和 endsWith()这两个方法，他们的 position 的含义是不同的，请仔细区分。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;abcdefg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;g&#x27;</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;f&#x27;</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为指定了截止位置为3，所以是在 abc 这个长度为3字符串中检索</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"number\">3</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<p>注意看上方的注释。</p>\n<p>参考链接：<a href=\"https://www.softwhy.com/article-2885-1.html\">JavaScript endsWith()介绍</a></p>\n<h2 id=\"获取指定位置的字符\"><a href=\"#获取指定位置的字符\" class=\"headerlink\" title=\"获取指定位置的字符\"></a>获取指定位置的字符</h2><h3 id=\"1、charAt-index\"><a href=\"#1、charAt-index\" class=\"headerlink\" title=\"1、charAt(index)\"></a>1、charAt(index)</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符 = str.<span class=\"title function_\">charAt</span>(index);</span><br></pre></td></tr></table></figure>\n\n<p>解释：返回字符串指定位置的字符。这里的 <code>str.charAt(index)</code>和<code>str[index]</code>的效果是一样的。</p>\n<p>注意：字符串中第一个字符的下标是 0。如果参数 index 不在 [0, string.length) 之间，该方法将返回一个空字符串。</p>\n<p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;smyhvae&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">charAt</span>(i));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1401.png\"></p>\n<p>上面这个例子一般不用。一般打印数组和 json 的时候用索引，打印 String 不建议用索引。</p>\n<h3 id=\"2、str-index\"><a href=\"#2、str-index\" class=\"headerlink\" title=\"2、str[index]\"></a>2、str[index]</h3><p><code>str.charAt(index)</code>和<code>str[index]</code>的效果是一样的，不再赘述。区别在于：<code>str[index]</code>是 H5 标准里新增的特性。</p>\n<h3 id=\"3、charCodeAt-index\"><a href=\"#3、charCodeAt-index\" class=\"headerlink\" title=\"3、charCodeAt(index)\"></a>3、charCodeAt(index)</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符 = str.<span class=\"title function_\">charCodeAt</span>(index);</span><br></pre></td></tr></table></figure>\n\n<p>解释：返回字符串指定位置的字符的 Unicode 编码。不会修改原字符串。</p>\n<p>在实际应用中，通过这个方法，我们可以判断用户按下了哪个按键。</p>\n<p><strong>代码举例</strong>：打印字符串的<strong>占位长度</strong>。</p>\n<p>提示：一个英文占一个位置，一个中文占两个位置。</p>\n<p>思路：判断该字符是否在 0-127 之间（在的话是英文，不在是非英文）。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//    sort();   底层用到了charCodeAt();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;I love my country!我你爱中国！&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：求一个字符串占有几个字符位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//思路；如果是英文，站一个字符位，如果不是英文占两个字符位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//技术点：判断该字符是否在0-127之间。（在的话是英文，不在是非英文）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"title function_\">getZFWlength</span>(str));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(str.<span class=\"property\">length</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义方法：字符位</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getZFWlength</span>(<span class=\"params\">string</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义一个计数器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; string.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//对每一位字符串进行判断，如果Unicode编码在0-127，计数器+1；否则+2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (string.<span class=\"title function_\">charCodeAt</span>(i) &lt; <span class=\"number\">128</span> &amp;&amp; string.<span class=\"title function_\">charCodeAt</span>(i) &gt;= <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                count++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                count += <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> count;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">30</span><br><span class=\"line\">24</span><br></pre></td></tr></table></figure>\n\n<p>从打印结果可以看出：字符串的长度是 24，但是却占了 30 个字符位（一个中文占两个字符位）。</p>\n<p>另外，sort()方法其实底层也是用到了 charCodeAt()，因为用到了 Unicode 编码。</p>\n<h2 id=\"字符串截取\"><a href=\"#字符串截取\" class=\"headerlink\" title=\"字符串截取\"></a>字符串截取</h2><h3 id=\"1、slice\"><a href=\"#1、slice\" class=\"headerlink\" title=\"1、slice()\"></a>1、slice()</h3><blockquote>\n<p>slice() 方法用的最多。</p>\n</blockquote>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str.<span class=\"title function_\">slice</span>(开始索引, 结束索引); <span class=\"comment\">//两个参数都是索引值。包左不包右。</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。</p>\n<p>注意：上面的参数，包左不包右。参数举例如下：</p>\n<ul>\n<li><p><code>(2, 5)</code> 截取时，包左不包右。</p>\n</li>\n<li><p><code>(2)</code> 表示<strong>从指定的索引位置开始，截取到最后</strong>。</p>\n</li>\n<li><p><code>(-3)</code> 表示从倒数第三个开始，截取到最后。</p>\n</li>\n<li><p><code>(1, -1)</code> 表示从第一个截取到倒数第一个。</p>\n</li>\n<li><p><code>(5, 2)</code> 表示前面的大，后面的小，返回值为空。</p>\n</li>\n</ul>\n<h3 id=\"2、substring\"><a href=\"#2、substring\" class=\"headerlink\" title=\"2、substring()\"></a>2、substring()</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str.<span class=\"title function_\">substring</span>(开始索引, 结束索引); <span class=\"comment\">//两个参数都是索引值。包左不包右。</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。和<code>slice()</code>类似。</p>\n<p><code>substring()</code>和<code>slice()</code>是类似的。但不同之处在于：</p>\n<ul>\n<li><p><code>substring()</code>不能接受负值作为参数。如果传递了一个<strong>负值</strong>，则默认使用 0。</p>\n</li>\n<li><p><code>substring()</code>还会自动调整参数的位置，如果第二个参数小于第一个，则自动交换。比如说， <code>substring(1, 0)</code>相当于截取的是第一个字符。</p>\n</li>\n</ul>\n<h3 id=\"3、substr\"><a href=\"#3、substr\" class=\"headerlink\" title=\"3、substr()\"></a>3、substr()</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 = str.<span class=\"title function_\">substr</span>(开始索引, 截取的长度);</span><br></pre></td></tr></table></figure>\n\n<p>解释：从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。</p>\n<p>注意，这个方法的第二个参数<strong>截取的长度</strong>，不是结束索引。</p>\n<p>参数举例：</p>\n<ul>\n<li><p><code>(2,4)</code> 从索引值为 2 的字符开始，截取 4 个字符。</p>\n</li>\n<li><p><code>(1)</code> 从指定位置开始，截取到最后。</p>\n</li>\n<li><p><code>(-3)</code> 从倒数第几个开始，截取到最后。</p>\n</li>\n</ul>\n<p>备注：ECMAscript 没有对 <code>substr()</code> 方法进行标准化，因此不建议使用它。</p>\n<h2 id=\"String-fromCharCode\"><a href=\"#String-fromCharCode\" class=\"headerlink\" title=\"String.fromCharCode()\"></a>String.fromCharCode()</h2><p><code>String.fromCharCode()</code>：根据字符的 Unicode 编码获取字符。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result1 = <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(<span class=\"number\">72</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(<span class=\"number\">20013</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：H</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 打印结果：中</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新字符串 = str1.<span class=\"title function_\">concat</span>(str2)； <span class=\"comment\">//连接两个字符串</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：字符串的连接。</p>\n<p>这种方法基本不用，直接把两个字符串相加就好。</p>\n<p>是的，你会发现，数组中也有<code>concat()</code>方法，用于数组的连接。这个方法在数组中用得挺多的。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&#x27;qiangu&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;yihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = str1.<span class=\"title function_\">concat</span>(str2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：qianguyihao</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"split-：字符串转换为数组-【重要】\"><a href=\"#split-：字符串转换为数组-【重要】\" class=\"headerlink\" title=\"split()：字符串转换为数组 【重要】\"></a>split()：字符串转换为数组 【重要】</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的数组 = str.<span class=\"title function_\">split</span>(分隔符);</span><br></pre></td></tr></table></figure>\n\n<p>解释：通过指定的分隔符，将一个字符串拆分成一个<strong>数组</strong>。不会改变原字符串。</p>\n<p>备注：<code>split()</code>这个方法在实际开发中用得非常多。一般来说，从接口拿到的 json 数据中，经常会收到类似于<code>&quot;q, i, a, n&quot;</code>这样的字符串，前端需要将这个字符串拆分成<code>[&#39;q&#39;, &#39;i&#39;, &#39;a&#39;, &#39;n&#39;]</code>数组，这个时候<code>split()</code>方法就派上用场了。</p>\n<p><strong>代码举例 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qian, gu, yi, hao&#x27;</span>; <span class=\"comment\">// 用逗号隔开的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> array = str.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>); <span class=\"comment\">// 将字符串 str 拆分成数组，通过逗号来拆分</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array); <span class=\"comment\">// 打印结果是数组：[&quot;qian&quot;, &quot; gu&quot;, &quot; yi&quot;, &quot; hao&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>代码举例 2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//split()方法：字符串变数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str3 = <span class=\"string\">&#x27;千古壹号|qianguyihao|许嵩&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;结果1：&#x27;</span> +str3.<span class=\"title function_\">split</span>()); <span class=\"comment\">// 无参数，表示：把整个字符串作为一个元素添加到数组中。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>)); <span class=\"comment\">// 参数为空字符串，则表示：分隔字符串中每一个字符，分别添加到数组中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;|&#x27;</span>)); <span class=\"comment\">// 参数为指定字符，表示：用 &#x27;|&#x27; 分隔字符串。此分隔符将不会出现在数组的任意一个元素中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str3.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;许&#x27;</span>)); <span class=\"comment\">// 同上</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：（都是数组）</p>\n<p><img src=\"http://img.smyhvae.com/20200611_2050.png\"></p>\n<h2 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace()\"></a>replace()</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的字符串 = str.<span class=\"title function_\">replace</span>(被替换的子串，新的子串);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将字符串中的指定内容，替换为新的内容并返回。不会修改原字符串。</p>\n<p>注意：这个方法，默认只会替换第一个被匹配到的字符。如果要全局替换，需要使用正则。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//replace()方法：替换</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;Today is fine day,today is fine day !&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;today&#x27;</span>, <span class=\"string\">&#x27;tomorrow&#x27;</span>)); <span class=\"comment\">//只能替换第一个today</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/today/gi</span>, <span class=\"string\">&#x27;tomorrow&#x27;</span>)); <span class=\"comment\">//这里用到了正则，才能替换所有的today</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"repeat-：重复字符串\"><a href=\"#repeat-：重复字符串\" class=\"headerlink\" title=\"repeat()：重复字符串\"></a>repeat()：重复字符串</h2><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">newStr = str.<span class=\"title function_\">repeat</span>(重复的次数);</span><br></pre></td></tr></table></figure>\n\n<p>解释：将字符串重复指定的次数。会返回新的值，不会修改原字符串。</p>\n<p>举例1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name.<span class=\"title function_\">repeat</span>(<span class=\"number\">2</span>)); <span class=\"comment\">// 打印内容：qianguyihaoqianguyihao</span></span><br></pre></td></tr></table></figure>\n\n<p>举例2：（模糊字符串的后四位）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> telephone = <span class=\"string\">&#x27;13088889999&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> mix_telephone = telephone.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, -<span class=\"number\">4</span>) + <span class=\"string\">&#x27;*&#x27;</span>.<span class=\"title function_\">repeat</span>(<span class=\"number\">4</span>); <span class=\"comment\">// 模糊电话号码的后四位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(telephone); <span class=\"comment\">// 打印结果：13088889999</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(mix_telephone); <span class=\"comment\">// 打印结果：1308888****</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h2 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim()\"></a>trim()</h2><p><code>trim()</code>：去除字符串前后的空白。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//去除字符串前后的空格，trim();</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;   a   b   c   &#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">length</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">trim</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">trim</span>().<span class=\"property\">length</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20200607_2132.png\"></p>\n<h2 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h2><p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdEFG&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//转换成小写</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">toLowerCase</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//转换成大写</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">toUpperCase</span>());</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"html-方法\"><a href=\"#html-方法\" class=\"headerlink\" title=\"html 方法\"></a>html 方法</h2><ul>\n<li><p>anchor() 创建 a 链接</p>\n</li>\n<li><p>big()</p>\n</li>\n<li><p>sub()</p>\n</li>\n<li><p>sup()</p>\n</li>\n<li><p>link()</p>\n</li>\n<li><p>bold()</p>\n</li>\n</ul>\n<p>注意，str.link() 返回值是字符串。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">anchor</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">big</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">sub</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">sup</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">link</span>(<span class=\"string\">&#x27;http://www.baidu.com&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"title function_\">bold</span>());</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://img.smyhvae.com/20180202_1536.png\"></p>\n<h2 id=\"字符串练习\"><a href=\"#字符串练习\" class=\"headerlink\" title=\"字符串练习\"></a>字符串练习</h2><p><strong>练习 1</strong>：”smyhvaevaesmyh”查找字符串中所有 m 出现的位置。</p>\n<p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;smyhvaevaesmyh&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str2.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果指定位置的符号=== &quot;o&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">//str2[i]</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str2.<span class=\"title function_\">charAt</span>(i) === <span class=\"string\">&#x27;m&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>练习 2</strong>：判断一个字符串中出现次数最多的字符，统计这个次数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> str2 = <span class=\"string\">&#x27;smyhvaevaesmyhvae&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义一个json，然后判断json中是够有该属性，如果有该属性，那么值+1;否则创建一个该属性，并赋值为1；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> json = &#123;&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str2.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//判断：如果有该属性，那么值+1;否则创建一个该属性，并赋值为1；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> key = str2.<span class=\"title function_\">charAt</span>(i);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (json[key] === <span class=\"literal\">undefined</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            json[key] = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            json[key] += <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(json);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//获取json中属性值最大的选项</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> maxKey = <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> maxValue = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> json) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        if(maxKey == &quot;&quot;)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//            maxKey = k;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//            maxValue = json[k];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        &#125;else&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (json[k] &gt; maxValue) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            maxKey = k;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            maxValue = json[k];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxKey);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxValue);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1540.png\"></p>\n","text":"内置对象简介JavaScript 中的对象分为3种：自定义对象、内置对象、浏览器对象。前面两种对象：是JS的基础内容，属于 ECMAScript； 第三个浏览器对象：属于JS独有，即 JS 内置的API。内置对象：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"18-数组简介","slug":"JavaScript/18-数组简介","date":"2023-02-15T12:06:59.477Z","updated":"2023-02-15T12:26:30.049Z","comments":true,"path":"api/articles/JavaScript/18-数组简介.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20200612_1707.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<blockquote>\n<p>之前学习的数据类型，只能存储一个值（字符串也为一个值）。如果我们想存储多个值，就可以使用数组。</p>\n</blockquote>\n<h2 id=\"数组简介\"><a href=\"#数组简介\" class=\"headerlink\" title=\"数组简介\"></a>数组简介</h2><p>数组（Array）是属于<strong>内置对象</strong>，数组和普通对象的功能类似，都可以用来存储一些值。不同的是：</p>\n<ul>\n<li>普通对象是使用字符串作为属性名，而数组是使用数字作为<strong>索引</strong>来操作元素。索引：从 0 开始的整数就是索引。</li>\n</ul>\n<p>数组的存储性能比普通对象要好。在实际开发中我们经常使用数组存储一些数据（尤其是<strong>列表数据</strong>），使用频率非常高。</p>\n<p><img src=\"http://img.smyhvae.com/20200612_1707.png\"></p>\n<p>比如说，上面这个页面的列表数据，它的数据结构就是一个数组。</p>\n<p>数组中的元素可以是任意的数据类型，可以是对象，可以是函数，也可以是数组。数组的元素中，如果存放的是数组，我们就称这种数组为二维数组。</p>\n<p>接下来，我们讲一讲数组的基本操作。</p>\n<h2 id=\"创建数组对象\"><a href=\"#创建数组对象\" class=\"headerlink\" title=\"创建数组对象\"></a>创建数组对象</h2><h3 id=\"方式一：使用字面量创建数组\"><a href=\"#方式一：使用字面量创建数组\" class=\"headerlink\" title=\"方式一：使用字面量创建数组\"></a>方式一：使用字面量创建数组</h3><p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = []; <span class=\"comment\">// 创建一个空的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]; <span class=\"comment\">// 创建带初始值的数组</span></span><br></pre></td></tr></table></figure>\n\n<p>方式一最简单，也用得最多。</p>\n<h3 id=\"方式二：使用构造函数创建数组\"><a href=\"#方式二：使用构造函数创建数组\" class=\"headerlink\" title=\"方式二：使用构造函数创建数组\"></a>方式二：使用构造函数创建数组</h3><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(参数);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = <span class=\"title class_\">Array</span>(参数);</span><br></pre></td></tr></table></figure>\n\n<p>如果<strong>参数为空</strong>，表示创建一个空数组；如果参数是<strong>一个数值</strong>，表示数组的长度；如果<strong>有多个参数</strong>，表示数组中的元素内容。</p>\n<p>举个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方式一</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式二</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(); <span class=\"comment\">// 参数为空：创建空数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">4</span>); <span class=\"comment\">// 参数为 size</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr4 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">17</span>); <span class=\"comment\">// 参数为多个数值：创建一个带数据的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> arr1); <span class=\"comment\">// 打印结果：object</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr1 = &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr2 = &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr3 = &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr3));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr4 = &#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr4));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object;</span><br><span class=\"line\"></span><br><span class=\"line\">arr1 = [<span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\">arr2 = [];</span><br><span class=\"line\">arr3 = [<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>];</span><br><span class=\"line\">arr4 = [<span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">17</span>];</span><br></pre></td></tr></table></figure>\n\n<p>从上方打印结果的第一行可以看出，数组的类型是属于<strong>对象</strong>。</p>\n<h3 id=\"数组中的元素的类型\"><a href=\"#数组中的元素的类型\" class=\"headerlink\" title=\"数组中的元素的类型\"></a>数组中的元素的类型</h3><p>数组中可以存放<strong>任意类型</strong>的数据，例如字符串、数字、布尔值、对象等。</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;qianguyihao&#x27;</span>, <span class=\"number\">28</span>, <span class=\"literal\">true</span>, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span> &#125;];</span><br></pre></td></tr></table></figure>\n\n<p>我们甚至可以在数组里存放数组。比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [</span><br><span class=\"line\">    [<span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>],</span><br><span class=\"line\">    [<span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组的基本操作\"><a href=\"#数组的基本操作\" class=\"headerlink\" title=\"数组的基本操作\"></a>数组的基本操作</h2><h3 id=\"数组的索引\"><a href=\"#数组的索引\" class=\"headerlink\" title=\"数组的索引\"></a>数组的索引</h3><p><strong>索引</strong> (下标) ：用来访问数组元素的序号，代表的是数组中的元素在数组中的位置（下标从 0 开始算起）。</p>\n<p>数组可以通过索引来访问、修改对应的数组元素。我们继续看看。</p>\n<h3 id=\"向数组中添加元素\"><a href=\"#向数组中添加元素\" class=\"headerlink\" title=\"向数组中添加元素\"></a>向数组中添加元素</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组[索引] = 值;</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 向数组中添加元素</span></span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"number\">20</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"number\">30</span>;</span><br><span class=\"line\">arr[<span class=\"number\">3</span>] = <span class=\"number\">40</span>;</span><br><span class=\"line\">arr[<span class=\"number\">5</span>] = <span class=\"number\">50</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[10,20,30,40,null,50]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取数组中的元素\"><a href=\"#获取数组中的元素\" class=\"headerlink\" title=\"获取数组中的元素\"></a>获取数组中的元素</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组[索引];</span><br></pre></td></tr></table></figure>\n\n<p>如果读取不存在的索引（比如元素没那么多），系统不会报错，而是返回 undefined。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[<span class=\"number\">0</span>]); <span class=\"comment\">// 打印结果：21</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[<span class=\"number\">5</span>]); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取数组的长度\"><a href=\"#获取数组的长度\" class=\"headerlink\" title=\"获取数组的长度\"></a>获取数组的长度</h3><p>可以使用<code>length</code>属性来获取数组的长度(即“元素的个数”)。</p>\n<p>数组的长度是元素个数，不要跟索引号混淆。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组的长度 = 数组名.<span class=\"property\">length</span>；</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"property\">length</span>); <span class=\"comment\">// 打印结果：3</span></span><br></pre></td></tr></table></figure>\n\n<p>补充：</p>\n<p>对于连续的数组，使用 length 可以获取到数组的长度（元素的个数）；对于非连续的数组（即“稀疏数组”，本文稍后会讲），length 的值会大于元素的个数。因此，尽量不要创建非连续的数组。</p>\n<h3 id=\"修改数组的长度\"><a href=\"#修改数组的长度\" class=\"headerlink\" title=\"修改数组的长度\"></a>修改数组的长度</h3><p>可以通过修改length属性修改数组的长度。</p>\n<ul>\n<li><p>如果修改的 length 大于原长度，则多出部分会空出来，置为 null。</p>\n</li>\n<li><p>如果修改的 length 小于原长度，则多出的元素会被删除，数组将从后面删除元素。</p>\n</li>\n<li><p>（特例：伪数组 arguments 的长度可以修改，但是不能修改里面的元素，以后单独讲。）</p>\n</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [<span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改数组 arr1 的 length</span></span><br><span class=\"line\">arr1.<span class=\"property\">length</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改数组 arr2 的 length</span></span><br><span class=\"line\">arr2.<span class=\"property\">length</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">11</span>]</span><br><span class=\"line\">[<span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"遍历数组\"><a href=\"#遍历数组\" class=\"headerlink\" title=\"遍历数组\"></a>遍历数组</h3><p><strong>遍历</strong>: 就是把数组中的每个元素从头到尾都访问一次。</p>\n<p>最简单的做法是通过 for 循环，遍历数组中的每一项。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[i]); <span class=\"comment\">// 打印出数组中的每一项</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>下一篇文章，会学习数组的各种方法，到时候，会有更多的做法去遍历数组。</p>\n<h2 id=\"JS语言中，数组的注意点\"><a href=\"#JS语言中，数组的注意点\" class=\"headerlink\" title=\"JS语言中，数组的注意点\"></a>JS语言中，数组的注意点</h2><blockquote>\n<p>和其他编程语言相比，JS语言中的数组比较灵活，有许多与众不同的地方。</p>\n</blockquote>\n<p>1、如果访问数组中不存在的索引时，不会报错，会返回undefined。</p>\n<p>2、当数组的存储空间不够时，数组会自动扩容。其它编程语言中数组的大小是固定的，不会自动扩容。</p>\n<p>3、数组可以存储不同类型数据，其它编程语言中数组只能存储相同类型数据。</p>\n<p>4、数组分配的存储空间不一定是连续的。其它语言数组分配的存储空间是连续的。</p>\n<p>JS中的数组采用”哈希映射”的方式分配存储空间，我们可以通过索引找到对应空间。各大浏览器也对数组分配的存储空间进行了优化：如果存储的都是相同类型的数据，则会尽量分配连续的存储空间；如果存储的不是相同的数据类型，则不会分配连续的存储空间。</p>\n<h2 id=\"数组的解构赋值\"><a href=\"#数组的解构赋值\" class=\"headerlink\" title=\"数组的解构赋值\"></a>数组的解构赋值</h2><p>解构赋值是ES6中新增的一种赋值方式。</p>\n<p>ES5中，如果想把数组中的元素赋值给其他变量，是这样做的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"number\">3</span>,<span class=\"number\">4</span>]];</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = arr[<span class=\"number\">0</span>]; <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = arr[<span class=\"number\">1</span>]; <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = arr[<span class=\"number\">2</span>]; <span class=\"comment\">// [3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这种写法比较啰嗦。通过ES6中的结构复制，我们可以像下面这样做。</p>\n<p>1、数组解构赋值，代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"number\">3</span>, <span class=\"number\">4</span>]];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">// [3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<p>注意点：</p>\n<p>（1）等号左边的个数和格式，必须和右边的一模一样，才能完全解构。</p>\n<p>（2）当然，左边的个数和右边的个数，可以不一样。</p>\n<p>2、默认值。在赋值之前，我们可以给左边的变量指定<strong>默认值</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b = <span class=\"number\">3</span>, c = <span class=\"number\">4</span>] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 2。默认值被覆盖。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">// 4。继续保持默认值。</span></span><br></pre></td></tr></table></figure>\n\n<p>3、我们可以使用ES6中新增的<strong>扩展运算符</strong>打包剩余的数据。如果使用了扩展运算符, 那么扩展运算符只能写在最后。代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, ...b] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// [2, 3]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"稀疏数组与密集数组\"><a href=\"#稀疏数组与密集数组\" class=\"headerlink\" title=\"稀疏数组与密集数组\"></a>稀疏数组与密集数组</h2><blockquote>\n<p> 这个知识点，简单了解即可。</p>\n</blockquote>\n<ul>\n<li><p>稀疏数组：索引不连续、数组长度大于元素个数的数组，可以简单理解为有 <code>empty</code>（有空隙）的数组。</p>\n</li>\n<li><p>密集数组：索引连续、数组长度等于元素个数的数组。</p>\n</li>\n</ul>\n<p>参考链接：</p>\n<ul>\n<li><p><a href=\"https://juejin.cn/post/6975531514444562462\">JavaScript 之稀疏数组与密集数组</a></p>\n</li>\n<li><p><a href=\"https://github.com/JunreyCen/blog/issues/10\">JS 稀疏数组</a></p>\n</li>\n<li><p><a href=\"https://juejin.cn/post/6844904050152964109\">JS 中的稀疏数组和密集数组</a></p>\n</li>\n<li><p>[译]JavaScript中的稀疏数组与密集数组：<a href=\"https://www.cnblogs.com/ziyunfei/archive/2012/09/16/2687165.html\">https://www.cnblogs.com/ziyunfei/archive/2012/09/16/2687165.html</a></p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000008533942\">JavaScript || 数组</a></p>\n</li>\n</ul>\n<h2 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h2><h3 id=\"例-1：翻转数组\"><a href=\"#例-1：翻转数组\" class=\"headerlink\" title=\"例 1：翻转数组\"></a>例 1：翻转数组</h3><p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>]; <span class=\"comment\">// 原始数组</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> newArr = []; <span class=\"comment\">// 翻转后的数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    newArr[i] = arr[arr.<span class=\"property\">length</span> - i - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(newArr));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[50,40,30,20,10]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"例-2：冒泡排序\"><a href=\"#例-2：冒泡排序\" class=\"headerlink\" title=\"例 2：冒泡排序\"></a>例 2：冒泡排序</h3><p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">20</span>, <span class=\"number\">10</span>, <span class=\"number\">50</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arr.<span class=\"property\">length</span> - i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> temp = arr[j];</span><br><span class=\"line\">            arr[j] = arr[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">            arr[j + <span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[10,20,30,40,50]</span><br></pre></td></tr></table></figure>\n\n","text":"之前学习的数据类型，只能存储一个值（字符串也为一个值）。如果我们想存储多个值，就可以使用数组。数组简介数组（Array）是属于内置对象，数组和普通对象的功能类似，都可以用来存储一些值。不同的是：普通对象是使用字符串作为属性名，而数组是使用数字作为索引来操作元素。索引：从 0 开始","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"17-内置对象：Date","slug":"JavaScript/17-内置对象：Date","date":"2023-02-15T12:06:59.475Z","updated":"2023-02-15T12:26:01.669Z","comments":true,"path":"api/articles/JavaScript/17-内置对象：Date.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180202_1110.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"内置对象：Date\"><a href=\"#内置对象：Date\" class=\"headerlink\" title=\"内置对象：Date\"></a>内置对象：Date</h2><blockquote>\n<p>Date 对象在实际开发中，使用得很频繁，且容易在细节地方出错，需要引起重视。</p>\n</blockquote>\n<p>内置对象 Date 用来处理日期和时间。</p>\n<p><strong>需要注意的是</strong>：与 Math 对象不同，Date 对象是一个<strong>构造函数</strong> ，需要<strong>先实例化</strong>后才能使用。</p>\n<h2 id=\"创建Date对象\"><a href=\"#创建Date对象\" class=\"headerlink\" title=\"创建Date对象\"></a>创建Date对象</h2><p>创建Date对象有两种写法：</p>\n<ul>\n<li><p>写法一：如果Date()不写参数，就返回当前时间对象</p>\n</li>\n<li><p>写法二：如果Date()里面写参数，就返回括号里输入的时间对象</p>\n</li>\n</ul>\n<p>针对这两种写法，我们来具体讲一讲。</p>\n<h3 id=\"写法一：不传递参数时，则获取系统的当前时间对象\"><a href=\"#写法一：不传递参数时，则获取系统的当前时间对象\" class=\"headerlink\" title=\"写法一：不传递参数时，则获取系统的当前时间对象\"></a>写法一：不传递参数时，则获取系统的当前时间对象</h3><p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> date1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> date1);</span><br></pre></td></tr></table></figure>\n\n<p>代码解释：不传递参数时，表示的是获取系统的当前时间对象。也可以理解成是：获取当前代码执行的时间。</p>\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mon Feb 17 2020 21:57:22 GMT+0800 (中国标准时间)</span><br><span class=\"line\">object</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"写法二：传递参数\"><a href=\"#写法二：传递参数\" class=\"headerlink\" title=\"写法二：传递参数\"></a>写法二：传递参数</h3><p>传递参数时，表示获取指定时间的时间对象。参数中既可以传递字符串，也可以传递数字，也可以传递时间戳。</p>\n<p>通过传参的这种写法，我们可以把时间字符串&#x2F;时间数字&#x2F;时间戳，按照指定的格式，转换为时间对象。</p>\n<p>举例1：（参数是字符串）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date11 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;2020/02/17 21:00:00&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date11); <span class=\"comment\">// Mon Feb 17 2020 21:00:00 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> date12 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;2020/04/19&#x27;</span>); <span class=\"comment\">// 返回的就是四月</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date12); <span class=\"comment\">// Sun Apr 19 2020 00:00:00 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> date13 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;2020-05-20&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date13); <span class=\"comment\">// Wed May 20 2020 08:00:00 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> date14 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&#x27;Wed Jan 27 2017 12:00:00 GMT+0800 (中国标准时间)&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date14); <span class=\"comment\">// Fri Jan 27 2017 12:00:00 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>\n\n\n<p>举例2：（参数是多个数字）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date21 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2020</span>, <span class=\"number\">2</span>, <span class=\"number\">18</span>); <span class=\"comment\">// 注意，第二个参数返回的是三月，不是二月</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date21); <span class=\"comment\">// Wed Mar 18 2020 00:00:00 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> date22 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">2020</span>, <span class=\"number\">3</span>, <span class=\"number\">18</span>, <span class=\"number\">22</span>, <span class=\"number\">59</span>, <span class=\"number\">58</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date22); <span class=\"comment\">// Sat Apr 18 2020 22:59:58 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> params = [<span class=\"number\">2020</span>, <span class=\"number\">06</span>, <span class=\"number\">12</span>, <span class=\"number\">16</span>, <span class=\"number\">20</span>, <span class=\"number\">59</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> date23 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(...params);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date23); <span class=\"comment\">// Sun Jul 12 2020 16:20:59 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>\n\n\n<p>举例3：（参数是时间戳）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date31 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">1591950413388</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date31); <span class=\"comment\">// Fri Jun 12 2020 16:26:53 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先把时间对象转换成时间戳，然后把时间戳转换成时间对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> date32 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(timestamp);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date32); <span class=\"comment\">// Fri Jun 12 2020 16:28:21 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"日期的格式化\"><a href=\"#日期的格式化\" class=\"headerlink\" title=\"日期的格式化\"></a>日期的格式化</h2><p>上一段内容里，我们获取到了 Date <strong>对象</strong>，但这个对象，打印出来的结果并不是特别直观。</p>\n<p>如果我们需要获取日期的<strong>指定部分</strong>，就需要用到 Date对象自带的方法。</p>\n<p>获取了日期指定的部分之后，我们就可以让日期按照指定的格式，进行展示（即日期的格式化）。比如说，我期望能以 <code>2020-02-02 19:30:59</code> 这种格式进行展示。</p>\n<p>在这之前，我们先来看看 Date 对象有哪些方法。</p>\n<h3 id=\"Date对象的方法\"><a href=\"#Date对象的方法\" class=\"headerlink\" title=\"Date对象的方法\"></a>Date对象的方法</h3><p>Date对象 有如下方法，可以获取日期和时间的<strong>指定部分</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>含义</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getFullYear()</td>\n<td>获取年份</td>\n<td></td>\n</tr>\n<tr>\n<td>getMonth()</td>\n<td><strong>获取月： 0-11</strong></td>\n<td>0代表一月</td>\n</tr>\n<tr>\n<td>getDate()</td>\n<td><strong>获取日：1-31</strong></td>\n<td>获取的是几号</td>\n</tr>\n<tr>\n<td>getDay()</td>\n<td><strong>获取星期：0-6</strong></td>\n<td>0代表周日，1代表周一</td>\n</tr>\n<tr>\n<td>getHours()</td>\n<td>获取小时：0-23</td>\n<td></td>\n</tr>\n<tr>\n<td>getMinutes()</td>\n<td>获取分钟：0-59</td>\n<td></td>\n</tr>\n<tr>\n<td>getSeconds()</td>\n<td>获取秒：0-59</td>\n<td></td>\n</tr>\n<tr>\n<td>getMilliseconds()</td>\n<td>获取毫秒</td>\n<td>1s &#x3D; 1000ms</td>\n</tr>\n</tbody></table>\n<p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 我在执行这行代码时，当前时间为 2019年2月4日，周一，13:23:52</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate); <span class=\"comment\">// 打印结果：Mon Feb 04 2019 13:23:52 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getFullYear</span>()); <span class=\"comment\">// 打印结果：2019</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>); <span class=\"comment\">// 打印结果：2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getDate</span>()); <span class=\"comment\">// 打印结果：4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dayArr  = [<span class=\"string\">&#x27;星期日&#x27;</span>, <span class=\"string\">&#x27;星期一&#x27;</span>, <span class=\"string\">&#x27;星期二&#x27;</span>, <span class=\"string\">&#x27;星期三&#x27;</span>, <span class=\"string\">&#x27;星期四&#x27;</span>,<span class=\"string\">&#x27;星期五&#x27;</span>, <span class=\"string\">&#x27;星期六&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getDay</span>()); <span class=\"comment\">// 打印结果：1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dayArr[myDate.<span class=\"title function_\">getDay</span>()]); <span class=\"comment\">// 打印结果：星期一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getHours</span>()); <span class=\"comment\">// 打印结果：13</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getMinutes</span>()); <span class=\"comment\">// 打印结果：23</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getSeconds</span>()); <span class=\"comment\">// 打印结果：52</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getMilliseconds</span>()); <span class=\"comment\">// 打印结果：393</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getTime</span>()); <span class=\"comment\">// 获取时间戳。打印结果：1549257832393</span></span><br></pre></td></tr></table></figure>\n\n<p>获取了日期和时间的指定部分之后，我们把它们用字符串拼接起来，就可以按照自己想要的格式，来展示日期。</p>\n<h3 id=\"举例：年月日的格式化\"><a href=\"#举例：年月日的格式化\" class=\"headerlink\" title=\"举例：年月日的格式化\"></a>举例：年月日的格式化</h3><p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">formatDate</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    方法：日期格式化。</span></span><br><span class=\"line\"><span class=\"comment\">    格式要求：今年是：2020年02月02日 08:57:09 星期日</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">formatDate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = date.<span class=\"title function_\">getFullYear</span>(); <span class=\"comment\">// 年</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = date.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>; <span class=\"comment\">// 月</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> day = date.<span class=\"title function_\">getDate</span>(); <span class=\"comment\">// 日</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> week = date.<span class=\"title function_\">getDay</span>(); <span class=\"comment\">// 星期几</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> weekArr = [<span class=\"string\">&#x27;星期日&#x27;</span>, <span class=\"string\">&#x27;星期一&#x27;</span>, <span class=\"string\">&#x27;星期二&#x27;</span>, <span class=\"string\">&#x27;星期三&#x27;</span>, <span class=\"string\">&#x27;星期四&#x27;</span>, <span class=\"string\">&#x27;星期五&#x27;</span>, <span class=\"string\">&#x27;星期六&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hour = date.<span class=\"title function_\">getHours</span>(); <span class=\"comment\">// 时</span></span><br><span class=\"line\">    hour = hour &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + hour : hour; <span class=\"comment\">// 如果只有一位，则前面补零</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> minute = date.<span class=\"title function_\">getMinutes</span>(); <span class=\"comment\">// 分</span></span><br><span class=\"line\">    minute = minute &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + minute : minute; <span class=\"comment\">// 如果只有一位，则前面补零</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> second = date.<span class=\"title function_\">getSeconds</span>(); <span class=\"comment\">// 秒</span></span><br><span class=\"line\">    second = second &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + second : second; <span class=\"comment\">// 如果只有一位，则前面补零</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"string\">&#x27;今天是：&#x27;</span> + year + <span class=\"string\">&#x27;年&#x27;</span> + month + <span class=\"string\">&#x27;月&#x27;</span> + day + <span class=\"string\">&#x27;日 &#x27;</span> + hour + <span class=\"string\">&#x27;:&#x27;</span> + minute + <span class=\"string\">&#x27;:&#x27;</span> + second + <span class=\"string\">&#x27; &#x27;</span> + weekArr[week];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n<h2 id=\"获取时间戳\"><a href=\"#获取时间戳\" class=\"headerlink\" title=\"获取时间戳\"></a>获取时间戳</h2><h3 id=\"时间戳的定义和作用\"><a href=\"#时间戳的定义和作用\" class=\"headerlink\" title=\"时间戳的定义和作用\"></a>时间戳的定义和作用</h3><p><strong>时间戳</strong>：指的是从格林威治标准时间的<code>1970年1月1日，0时0分0秒</code>到当前日期所花费的<strong>毫秒数</strong>（1秒 &#x3D; 1000毫秒）。</p>\n<p>计算机底层在保存时间时，使用的都是时间戳。时间戳的存在，就是为了<strong>统一</strong>时间的单位。</p>\n<p>我们经常会利用时间戳来计算时间，因为它更精确。而且，在实战开发中，接口返回给前端的日期数据，都是以时间戳的形式。</p>\n<p>我们再来看下面这样的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&quot;1970/01/01 0:0:0&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDate.<span class=\"title function_\">getTime</span>()); <span class=\"comment\">// 获取时间戳</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果（可能会让你感到惊讶）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"number\">28800000</span></span><br></pre></td></tr></table></figure>\n\n<p>为啥打印结果是<code>-28800000</code>，而不是<code>0</code>呢？这是因为，我们的当前代码，是在中文环境下运行的，与英文时间会存在<strong>8个小时的时差</strong>（中文时间比英文时间早了八个小时）。如果代码是在英文环境下运行，打印结果就是<code>0</code>。</p>\n<h3 id=\"getTime-：获取时间戳\"><a href=\"#getTime-：获取时间戳\" class=\"headerlink\" title=\"getTime()：获取时间戳\"></a>getTime()：获取时间戳</h3><p><code>getTime()</code>  获取日期对象的<strong>时间戳</strong>（单位：毫秒）。这个方法在实战开发中，用得比较多。但还有比它更常用的写法，我们往下看。</p>\n<h3 id=\"获取-Date-对象的时间戳\"><a href=\"#获取-Date-对象的时间戳\" class=\"headerlink\" title=\"获取 Date 对象的时间戳\"></a>获取 Date 对象的时间戳</h3><p>代码演示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方式一：获取 Date 对象的时间戳（最常用的写法）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp1 = +<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(timestamp1); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式二：获取 Date 对象的时间戳（较常用的写法）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(timestamp2); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式三：获取 Date 对象的时间戳</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">valueOf</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(timestamp3); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式4：获取 Date 对象的时间戳</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp4 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() * <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(timestamp4); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式5：获取 Date 对象的时间戳</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> timestamp5 = <span class=\"title class_\">Number</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(timestamp5); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这五种写法都可以获取任意 Date 对象的时间戳，最常见的写法是<strong>方式一</strong>，其次是方式二。</p>\n<p>根据前面所讲的关于「时间戳」的概念，上方代码获取到的时间戳指的是：从 <code>1970年1月1日，0时0分0秒</code> 到现在所花费的总毫秒数。</p>\n<h3 id=\"获取当前时间的时间戳\"><a href=\"#获取当前时间的时间戳\" class=\"headerlink\" title=\"获取当前时间的时间戳\"></a>获取当前时间的时间戳</h3><p>如果我们要获取<strong>当前时间</strong>的时间戳，除了上面的几种方式之外，还有另一种方式。代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方式六：获取当前时间的时间戳（很常用的写法）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()); <span class=\"comment\">// 打印结果举例：1589448165370</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这种方式六，用得也很多。只不过，<code>Date.now()</code>是H5标准中新增的特性，如果你的项目需要兼容低版本的IE浏览器，就不要用了。这年头，谁还用IE呢？</p>\n<h3 id=\"利用时间戳检测代码的执行时间\"><a href=\"#利用时间戳检测代码的执行时间\" class=\"headerlink\" title=\"利用时间戳检测代码的执行时间\"></a>利用时间戳检测代码的执行时间</h3><p>我们可以在业务代码的前面定义 <code>时间戳1</code>，在业务代码的后面定义 <code>时间戳2</code>。把这两个时间戳相减，就能得出业务代码的执行时间。</p>\n<h3 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format()\"></a>format()</h3><p>将时间对象转换为指定格式。</p>\n<p>参考链接：<a href=\"https://www.cnblogs.com/tugenhua0707/p/3776808.html\">https://www.cnblogs.com/tugenhua0707/p/3776808.html</a></p>\n<h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><h3 id=\"举例1：模拟日历\"><a href=\"#举例1：模拟日历\" class=\"headerlink\" title=\"举例1：模拟日历\"></a>举例1：模拟日历</h3><p>要求每天打开这个页面，都能定时显示当前的日期。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">margin</span>: <span class=\"number\">200px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">font</span>: <span class=\"number\">600</span> <span class=\"number\">30px</span>/<span class=\"number\">30px</span> <span class=\"string\">&#x27;simsun&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//模拟日历</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：每天打开这个页面都能定时显示年月日和星期几</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">getCurrentDate</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//1.创建一个当前日期的日期对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//2.然后获取其中的年、月、日和星期</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> year = date.<span class=\"title function_\">getFullYear</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> month = date.<span class=\"title function_\">getMonth</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> hao = date.<span class=\"title function_\">getDate</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> week = date.<span class=\"title function_\">getDay</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//        console.log(year+&quot; &quot;+month+&quot; &quot;+hao+&quot; &quot;+week);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//3.赋值给div</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;星期日&#x27;</span>, <span class=\"string\">&#x27;星期一&#x27;</span>, <span class=\"string\">&#x27;星期二&#x27;</span>, <span class=\"string\">&#x27;星期三&#x27;</span>, <span class=\"string\">&#x27;星期四&#x27;</span>, <span class=\"string\">&#x27;星期五&#x27;</span>, <span class=\"string\">&#x27;星期六&#x27;</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">const</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> <span class=\"string\">&#x27;今天是：&#x27;</span> + year + <span class=\"string\">&#x27;年&#x27;</span> + (month + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;月&#x27;</span> + hao + <span class=\"string\">&#x27;日 &#x27;</span> + arr[week];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">const</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            div.<span class=\"property\">innerText</span> = <span class=\"title function_\">getCurrentDate</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1110.png\"></p>\n<h3 id=\"举例2：发布会倒计时\"><a href=\"#举例2：发布会倒计时\" class=\"headerlink\" title=\"举例2：发布会倒计时\"></a>举例2：发布会倒计时</h3><p>实现思路：</p>\n<ul>\n<li><p>设置一个定时器，每间隔1毫秒就自动刷新一次div的内容。</p>\n</li>\n<li><p>核心算法：输入的时间戳减去当前的时间戳，就是剩余时间（即倒计时），然后转换成时分秒。</p>\n</li>\n</ul>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">1210px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">margin</span>: <span class=\"number\">200px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">font</span>: <span class=\"number\">600</span> <span class=\"number\">30px</span>/<span class=\"number\">30px</span> <span class=\"string\">&#x27;simsun&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">countDown</span>(<span class=\"string\">&#x27;2022/02/03 11:20:00&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">countDown</span>(<span class=\"params\">myTime</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> nowTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> future = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(myTime);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> timeSum = future.<span class=\"title function_\">getTime</span>() - nowTime.<span class=\"title function_\">getTime</span>(); <span class=\"comment\">//获取时间差：发布会时间减去此刻的毫秒值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> day = <span class=\"built_in\">parseInt</span>(timeSum / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span> / <span class=\"number\">24</span>); <span class=\"comment\">// 天</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> hour = <span class=\"built_in\">parseInt</span>((timeSum / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span>) % <span class=\"number\">24</span>); <span class=\"comment\">// 时</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> minu = <span class=\"built_in\">parseInt</span>((timeSum / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>); <span class=\"comment\">// 分</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> sec = <span class=\"built_in\">parseInt</span>((timeSum / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>); <span class=\"comment\">// 秒</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> millsec = <span class=\"built_in\">parseInt</span>(timeSum % <span class=\"number\">1000</span>); <span class=\"comment\">// 毫秒</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//细节处理：所有的时间小于10的时候，在前面自动补0，毫秒值要补双0（比如如，把 8 秒改成 08 秒）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                day = day &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + day : day; <span class=\"comment\">//day小于10吗？如果小于，就补0；如果不小于，就是day本身</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                hour = hour &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + hour : hour;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                minu = minu &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + minu : minu;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                sec = sec &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + sec : sec;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (millsec &lt; <span class=\"number\">10</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    millsec = <span class=\"string\">&#x27;00&#x27;</span> + millsec;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (millsec &lt; <span class=\"number\">100</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    millsec = <span class=\"string\">&#x27;0&#x27;</span> + millsec;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 兜底处理</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (timeSum &lt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    div.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;距离苹果发布会还有00天00小时00分00秒000毫秒&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"built_in\">clearInterval</span>(timer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 前端要显示的文案</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                div.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;距离苹果发布会还有&#x27;</span> + day + <span class=\"string\">&#x27;天&#x27;</span> + hour + <span class=\"string\">&#x27;小时&#x27;</span> + minu + <span class=\"string\">&#x27;分&#x27;</span> + sec + <span class=\"string\">&#x27;秒&#x27;</span> + millsec + <span class=\"string\">&#x27;毫秒&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1130.gif\"></p>\n<h2 id=\"Moment-js\"><a href=\"#Moment-js\" class=\"headerlink\" title=\"Moment.js\"></a>Moment.js</h2><p>Moment.js 是一个轻量级的JavaScript时间库，我们可以利用它很方便地进行时间操作，提升开发效率。</p>\n<ul>\n<li>中文官网：<a href=\"http://momentjs.cn/\">http://momentjs.cn/</a></li>\n</ul>\n<p>使用举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/moment.js/2.26.0/moment.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 按照指定的格式，格式化当前时间</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">moment</span>().<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)); <span class=\"comment\">// 打印结果举例：2020-06-12 16:38:38</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"title function_\">moment</span>().<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)); <span class=\"comment\">// 打印结果：string</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 按照指定的格式，格式化指定的时间</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">moment</span>(<span class=\"string\">&#x27;2020/06/12 18:01:59&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)); <span class=\"comment\">// 打印结果：2020-06-12 18:01:59</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 按照指定的格式，获取七天后的时间</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">moment</span>().<span class=\"title function_\">add</span>(<span class=\"number\">7</span>, <span class=\"string\">&#x27;days&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD hh:mm:ss&#x27;</span>)); <span class=\"comment\">// 打印结果举例：2020-06-19 04:43:56</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","text":"内置对象：DateDate 对象在实际开发中，使用得很频繁，且容易在细节地方出错，需要引起重视。内置对象 Date 用来处理日期和时间。需要注意的是：与 Math 对象不同，Date 对象是一个构造函数 ，需要先实例化后才能使用。创建Date对象创建Date对象有两种写法：写法一","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"21-递归函数","slug":"JavaScript/21-递归函数","date":"2023-02-16T07:30:25.430Z","updated":"2023-02-16T07:49:10.595Z","comments":true,"path":"api/articles/JavaScript/21-递归函数.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"递归函数\"><a href=\"#递归函数\" class=\"headerlink\" title=\"递归函数\"></a>递归函数</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>如果一个函数在内部调用这个函数自身，这个函数就是递归函数。</p>\n<p>递归在数据结构和算法中经常用到，可以将很多复杂的数据模型拆解为简单问题进行求解。一定要掌握。</p>\n<h3 id=\"递归的要素\"><a href=\"#递归的要素\" class=\"headerlink\" title=\"递归的要素\"></a>递归的要素</h3><ul>\n<li>递归模式：把大问题拆解为小问题进行分析。也称为递归体。</li>\n<li>边界条件：需要确定递归到何时结束。也称为递归出口。</li>\n</ul>\n<h3 id=\"代码演示：计算阶乘\"><a href=\"#代码演示：计算阶乘\" class=\"headerlink\" title=\"代码演示：计算阶乘\"></a>代码演示：计算阶乘</h3><p>提问：求一个正整数的阶乘。</p>\n<p><strong>普通写法：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数：计算一个正整数的阶乘</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">factorial</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    result *= i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">factorial</span>(<span class=\"number\">5</span>)); <span class=\"comment\">// 120</span></span><br></pre></td></tr></table></figure>\n\n<p>现在，我们学习了递归函数之后，会有更简洁的写法。</p>\n<p><strong>递归写法：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归函数：计算一个正整数的阶乘</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">factorial</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 递归出口：如果计算1的阶乘，就不用递归了</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 开始递归：如果当前这个 n 不是1，就返回 n * (n-1)!</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> n * <span class=\"title function_\">factorial</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">factorial</span>(<span class=\"number\">5</span>)); <span class=\"comment\">// 120</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"递归函数的案例\"><a href=\"#递归函数的案例\" class=\"headerlink\" title=\"递归函数的案例\"></a>递归函数的案例</h2><h3 id=\"寻找所有的喇叭花数\"><a href=\"#寻找所有的喇叭花数\" class=\"headerlink\" title=\"寻找所有的喇叭花数\"></a>寻找所有的喇叭花数</h3><p>题目：喇叭花数是一个<strong>三位数</strong>，其每一位数字的阶乘之和恰好等于它本身，即<code>abc＝a! + b! + c!</code>，其中abc表示一个三位数。请找出所有的喇叭花数。</p>\n<p>思路：将计算某个数字的阶乘封装成函数。</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归函数：计算一个数的阶乘</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">factorial</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 递归出口：如果计算1的阶乘，就不用递归了</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 开始递归：如果当前这个 n 不是1，就返回 n * (n-1)!</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> n * <span class=\"title function_\">factorial</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 穷举法，从100到999遍历，寻找喇叭花数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">100</span>; i &lt;= <span class=\"number\">999</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 将数字i转为字符串</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> i_str = i.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">  <span class=\"comment\">// abc分别表示百位、十位、个位</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> a = <span class=\"title class_\">Number</span>(i_str[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> b = <span class=\"title class_\">Number</span>(i_str[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> c = <span class=\"title class_\">Number</span>(i_str[<span class=\"number\">2</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 根据喇叭花数的条件进行判断</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">factorial</span>(a) + <span class=\"title function_\">factorial</span>(b) + <span class=\"title function_\">factorial</span>(c) == i) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">145</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a>斐波那契数列</h3><p>斐波那契数列是这样一个数列：1、1、2、3、5、8、13、21、34……最早是由意大利数学家斐波那契开始研究的。它的规律是：下标为0和1的项，值为1；从下标为2的项开始，每一项等于前面两项之和。</p>\n<p>提问：请找出斐波那契数列的前10项。</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归函数：返回斐波那契数列中下标为n的那一项的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fib</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 下标为0和1的项，值为1</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span> || n == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 从下标为2的项开始，每一项等于前面两项之和</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">fib</span>(n - <span class=\"number\">1</span>) + <span class=\"title function_\">fib</span>(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 循环语句：打印斐波那契数列的前10项</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fib</span>(i));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>关于递归的案例，后面还会有更多的应用场景。比如<strong>深拷贝</strong>就会用到递归。</p>\n","text":"递归函数概念如果一个函数在内部调用这个函数自身，这个函数就是递归函数。递归在数据结构和算法中经常用到，可以将很多复杂的数据模型拆解为简单问题进行求解。一定要掌握。递归的要素递归模式：把大问题拆解为小问题进行分析。也称为递归体。边界条件：需要确定递归到何时结束。也称为递归出口。代码","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"20-函数简介","slug":"JavaScript/20-函数简介","date":"2023-02-16T07:30:25.428Z","updated":"2023-02-16T07:31:56.791Z","comments":true,"path":"api/articles/JavaScript/20-函数简介.json","excerpt":"","keywords":null,"cover":"https://img.smyhvae.com/20220725_2000.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"函数的介绍\"><a href=\"#函数的介绍\" class=\"headerlink\" title=\"函数的介绍\"></a>函数的介绍</h2><p>函数：就是一些功能或语句的<strong>封装</strong>。在需要的时候，通过<strong>调用</strong>的形式，执行这些语句。</p>\n<p>补充：</p>\n<ul>\n<li><p><strong>函数也是一个对象</strong></p>\n</li>\n<li><p>使用<code>typeof</code>检查一个函数对象时，会返回 function</p>\n</li>\n</ul>\n<p><strong>函数的作用</strong>：</p>\n<ul>\n<li><p>一次定义，多次调用。将大量重复的语句抽取出来，写在函数里，以后需要这些语句时，可以直接调用函数，避免重复劳动。</p>\n</li>\n<li><p>简化代码，可读性更强，让编程模块化。高内聚、低耦合。</p>\n</li>\n</ul>\n<p>来看个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_\">sayHello</span>();\t<span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"title function_\">sayHello</span>();\t<span class=\"comment\">// 再调用一次函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayHello</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;欢迎&quot;</span>);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;welcome&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数的定义-x2F-声明\"><a href=\"#函数的定义-x2F-声明\" class=\"headerlink\" title=\"函数的定义&#x2F;声明\"></a>函数的定义&#x2F;声明</h2><p>我们使用<code>function</code>关键字定义函数，中文含义是“函数”、“功能”。可以使用如下方式进行定义。</p>\n<h3 id=\"方式一：函数声明（命名函数）\"><a href=\"#方式一：函数声明（命名函数）\" class=\"headerlink\" title=\"方式一：函数声明（命名函数）\"></a>方式一：函数声明（命名函数）</h3><p>使用<code>函数声明</code>来创建一个函数。语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> 函数名([形参<span class=\"number\">1</span>,形参<span class=\"number\">2.</span>..形参N])&#123;  <span class=\"comment\">// 备注：语法中的中括号，表示“可选”</span></span><br><span class=\"line\">\t<span class=\"comment\">// 函数体语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">a, b</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释如下：</p>\n<ul>\n<li><p>函数名：命名规定和变量的命名规定一样，必须符合JS标识符的命名规则。只能是字母、数字、下划线、美元符号，不能以数字开头。</p>\n</li>\n<li><p>圆括号里，是形参列表，可选。即使没有形参，也必须书写圆括号。</p>\n</li>\n<li><p>大括号里，是函数体语句。</p>\n</li>\n</ul>\n<p>PS：在有些编辑器中，方法写完之后，我们在方法的前面输入<code>/**</code>，然后回车，会发现，注释的格式会自动补齐。</p>\n<h3 id=\"方式二：函数表达式（匿名函数）\"><a href=\"#方式二：函数表达式（匿名函数）\" class=\"headerlink\" title=\"方式二：函数表达式（匿名函数）\"></a>方式二：函数表达式（匿名函数）</h3><p>使用<code>函数表达式</code>来创建一个函数。语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> 变量名  = <span class=\"keyword\">function</span>(<span class=\"params\">[形参<span class=\"number\">1</span>,形参<span class=\"number\">2.</span>..形参N]</span>)&#123;</span><br><span class=\"line\">\t语句....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fun2 = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;我是匿名函数中封装的代码&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>解释如下：</p>\n<ul>\n<li><p>上面的 fun2 是变量名，不是函数名。</p>\n</li>\n<li><p>函数表达式的声明方式跟声明变量类似，只不过变量里存的是值，而函数表达式里存的是函数。</p>\n</li>\n<li><p>函数表达式也可以传递参数。</p>\n</li>\n</ul>\n<p>从方式二的举例中可以看出：所谓的“函数表达式”，其实就是将匿名函数赋值给一个变量。因为，一个匿名函数终究还是要给它一个接收对象，进而方便地调用这个函数。</p>\n<h3 id=\"方式三：使用构造函数-new-Function\"><a href=\"#方式三：使用构造函数-new-Function\" class=\"headerlink\" title=\"方式三：使用构造函数 new Function()\"></a>方式三：使用构造函数 new Function()</h3><p>使用构造函数<code>new Function()</code>来创建一个对象。这种方式，用的少。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> 变量名/函数名  = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&#x27;形参1&#x27;</span>, <span class=\"string\">&#x27;形参2&#x27;</span>, <span class=\"string\">&#x27;函数体&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>注意，Function 里面的参数都必须是<strong>字符串</strong>格式。也就是说，形参也必须放在<strong>字符串</strong>里；函数体也是放在<strong>字符串</strong>里包裹起来，放在 Function 的最后一个参数的位置。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fun3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;console.log(&quot;我是函数内部的内容&quot;);  console.log(a + b);&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun3</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// 调用函数</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我是函数内部的内容</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n\n<p><strong>分析</strong>：</p>\n<p>方式3的写法很少用，原因如下：</p>\n<ul>\n<li><p>不方便书写：写法过于啰嗦和麻烦。</p>\n</li>\n<li><p>执行效率较低：首先需要把字符串转换为 js 代码，然后再执行。</p>\n</li>\n</ul>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>1、<strong>所有的函数，都是 <code>Fuction</code> 的“实例”</strong>（或者说是“实例对象”）。函数本质上都是通过 new Function 得到的。</p>\n<p>2、函数既然是实例对象，那么，<strong>函数也属于“对象”</strong>。还可以通过如下特征，来佐证函数属于对象：</p>\n<p>（1）我们直接打印某一个函数，比如 <code>console.log(fun2)</code>，发现它的里面有<code>__proto__</code>。（这个是属于原型的知识，后续再讲）</p>\n<p>（2）我们还可以打印 <code>console.log(fun2 instanceof Object)</code>，发现打印结果为 <code>true</code>。这说明 fun2 函数就是属于 Object。</p>\n<h2 id=\"函数的调用\"><a href=\"#函数的调用\" class=\"headerlink\" title=\"函数的调用\"></a>函数的调用</h2><p>调用函数即：执行函数体中的语句。函数必须要等到被调用时才执行。</p>\n<h3 id=\"方式1：普通函数的调用\"><a href=\"#方式1：普通函数的调用\" class=\"headerlink\" title=\"方式1：普通函数的调用\"></a>方式1：普通函数的调用</h3><p>函数调用的语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 写法1（最常用）</span></span><br><span class=\"line\">函数名();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写法2</span></span><br><span class=\"line\">函数名.<span class=\"title function_\">call</span>();</span><br></pre></td></tr></table></figure>\n\n\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是函数体里面的内容1&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是函数体里面的内容2&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fn1</span>(); <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">fn2.<span class=\"title function_\">call</span>(); <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式2：通过对象的方法来调用\"><a href=\"#方式2：通过对象的方法来调用\" class=\"headerlink\" title=\"方式2：通过对象的方法来调用\"></a>方式2：通过对象的方法来调用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">a</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">fn2</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;千古壹号，永不止步!&#x27;</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"title function_\">fn2</span>(); <span class=\"comment\">// 调用函数</span></span><br></pre></td></tr></table></figure>\n\n<p>如果一个函数是作为一个对象的属性保存，那么，我们称这个函数是这个对象的<strong>方法</strong>。</p>\n<p>PS：关于函数和方法的区别，本文的后续内容里有讲到，可以往下面翻。</p>\n<h3 id=\"方式3：立即执行函数\"><a href=\"#方式3：立即执行函数\" class=\"headerlink\" title=\"方式3：立即执行函数\"></a>方式3：立即执行函数</h3><p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是立即执行函数&#x27;</span>);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>立即执行函数在定义后，会自动调用。</p>\n<p>PS：关于立即执行函数，本文的后续内容里有讲到，可以往下面翻。</p>\n<p>上面讲到的这三种方式，是用得最多的。接下来讲到的三种方式，暂时看不懂也没关系，可以等学完其他的知识点，再回过头来看。</p>\n<h3 id=\"方式4：通过构造函数来调用\"><a href=\"#方式4：通过构造函数来调用\" class=\"headerlink\" title=\"方式4：通过构造函数来调用\"></a>方式4：通过构造函数来调用</h3><p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Fun3</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;千古壹号，永不止步~&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Fun3</span>();</span><br></pre></td></tr></table></figure>\n\n<p>这种方式用得不多。</p>\n<h3 id=\"方式5：绑定事件函数\"><a href=\"#方式5：绑定事件函数\" class=\"headerlink\" title=\"方式5：绑定事件函数\"></a>方式5：绑定事件函数</h3><p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>我是按钮，请点击我<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;点击按钮后，要做的事情&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里涉及到DOM操作和事件的知识点，后续再讲。</p>\n<h3 id=\"方式6：定时器函数\"><a href=\"#方式6：定时器函数\" class=\"headerlink\" title=\"方式6：定时器函数\"></a>方式6：定时器函数</h3><p>代码举例：（每间隔一秒，将 数字 加1）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    num ++;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这里涉及到定时器的知识点。</p>\n<h2 id=\"函数的参数：形参和实参\"><a href=\"#函数的参数：形参和实参\" class=\"headerlink\" title=\"函数的参数：形参和实参\"></a>函数的参数：形参和实参</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>函数的参数包括形参和实参。形参是函数内的一些<strong>待定值</strong>。在调用函数时，需传入这些参数的具体值（即实参）。</p>\n<p>可以在函数的<code>()</code>中指定一个或多个参数，也可以不指定参数。多个参数之间用英文逗号隔开。</p>\n<p>举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// a, b 是形参，表示待定值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\"><span class=\"keyword\">const</span> sum = a + b;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sum);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1, 2 是实参，表示传入的具体值。调用函数时，传入实参</span></span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>形参：</strong></p>\n<ul>\n<li>概念：形式上的参数。定义函数时传递的待定值（此时并不知道是什么值）。</li>\n<li>声明形参相当于在函数内部声明了变量，但并不赋值。也可以说，<strong>形参的默认值是 undefined</strong>。</li>\n</ul>\n<p><strong>实参</strong>：</p>\n<ul>\n<li>概念：实际上的参数。调用函数时传递的具体值。实参将传递给函数中对应的形参。</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"string\">&quot;3&quot;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"string\">&quot;Hello&quot;</span>, <span class=\"string\">&quot;World&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义函数：求和</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7</span><br><span class=\"line\">34</span><br><span class=\"line\">helloworld</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"形参和实参的个数\"><a href=\"#形参和实参的个数\" class=\"headerlink\" title=\"形参和实参的个数\"></a>形参和实参的个数</h3><p>实际参数和形式参数的个数，可以不同。调用函数时，解析器不会检查实参的数量。</p>\n<ul>\n<li>如果实参个数 &gt; 形参个数，则末尾的实参是多余的，不会被赋值，因为没有形参能接收它。</li>\n<li>如果实参个数 &lt; 形参个数，则末尾的形参是多余的，值是 undefined，因为它没有接收到实参。（undefined参与运算时，表达式的运算结果为NaN）</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">3</span><br><span class=\"line\">NaN</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实参的数据类型\"><a href=\"#实参的数据类型\" class=\"headerlink\" title=\"实参的数据类型\"></a>实参的数据类型</h3><p>函数的实参可以是任意的数据类型。调用函数时，解析器不会检查实参类型，所以要注意，是否有可能会接收到非法的参数，如果有可能则需要对参数进行类型检查。</p>\n<h2 id=\"函数的返回值\"><a href=\"#函数的返回值\" class=\"headerlink\" title=\"函数的返回值\"></a>函数的返回值</h2><h3 id=\"return-关键字\"><a href=\"#return-关键字\" class=\"headerlink\" title=\"return 关键字\"></a>return 关键字</h3><p>函数体内可以没有返回值，也可以根据需要加返回值。语法格式：<code>return 函数的返回值</code>。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">sum</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>)); <span class=\"comment\">// 将函数的返回值打印出来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数：求和</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>return关键字的作用既可以是<strong>终止函数</strong>，也可以给函数添加返回值。</p>\n<p>解释：</p>\n<p>（1）return 后的返回值将会作为函数的执行结果返回，可以定义一个变量，来接收该返回值。</p>\n<p>（2）在函数中，return后的语句都不会执行。也就是说，函数在执行完 return 语句之后，会立即退出函数。</p>\n<p>（3）如果return语句后不跟任何值，就相当于返回一个undefined</p>\n<p>（4）如果函数中不写return，则也会返回undefined</p>\n<p>（5）返回值可以是任意的数据类型，可以是对象，也可以是函数。</p>\n<p>（6）return 只能返回一个值。如果用逗号隔开多个值，则以最后一个为准。</p>\n<h3 id=\"break、continue、return-的区别\"><a href=\"#break、continue、return-的区别\" class=\"headerlink\" title=\"break、continue、return 的区别\"></a>break、continue、return 的区别</h3><ul>\n<li><p>break ：结束当前的循环体（如 for、while）</p>\n</li>\n<li><p>continue ：跳出本次循环，继续执行下次循环（如 for、while）</p>\n</li>\n<li><p>return ：1、退出循环。2、返回 return 语句中的值，同时结束当前的函数体内的代码，退出当前函数。</p>\n</li>\n</ul>\n<h2 id=\"函数名、函数体和函数加载问题（重要，请记住）\"><a href=\"#函数名、函数体和函数加载问题（重要，请记住）\" class=\"headerlink\" title=\"函数名、函数体和函数加载问题（重要，请记住）\"></a>函数名、函数体和函数加载问题（重要，请记住）</h2><p>我们要记住：<strong>函数名 &#x3D;&#x3D; 整个函数</strong>。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(fn) == <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义fn方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>我们知道，当我们在调用一个函数时，通常使用<code>函数()</code>这种格式；可如果，我们是直接使用<code>函数</code>这种格式，它的作用相当于整个函数。</p>\n<p><strong>函数的加载问题</strong>：JS加载的时候，只加载函数名，不加载函数体。所以如果想使用内部的成员变量，需要调用函数。</p>\n<h3 id=\"fn-和-fn-的区别【重要】\"><a href=\"#fn-和-fn-的区别【重要】\" class=\"headerlink\" title=\"fn()  和 fn 的区别【重要】\"></a>fn()  和 fn 的区别【重要】</h3><ul>\n<li><p><code>fn()</code>：调用函数。调用之后，还获取了函数的返回值。</p>\n</li>\n<li><p><code>fn</code>：函数对象。相当于直接获取了整个函数对象。</p>\n</li>\n</ul>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>函数也可以成为对象的属性。<strong>如果一个函数是作为一个对象的属性保存，那么，我们称这个函数是这个对象的方法</strong>。</p>\n<p>调用这个函数就说调用对象的方法（method）。函数和方法，有什么本质的区别吗？它只是名称上的区别，并没有其他的区别。</p>\n<p>函数举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n\n<p>方法举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用方法</span></span><br><span class=\"line\">obj.<span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n\n<p>我们可以这样说，如果直接是<code>fn()</code>，那就说明是函数调用。如果是<code>XX.fn()</code>的这种形式，那就说明是<strong>方法</strong>调用。</p>\n<h2 id=\"类数组对象-arguments\"><a href=\"#类数组对象-arguments\" class=\"headerlink\" title=\"类数组对象 arguments\"></a>类数组对象 arguments</h2><blockquote>\n<p>这部分，初学者可能看不懂，可以以后再来看。</p>\n</blockquote>\n<p>在调用函数时，浏览器每次都会传递进两个隐含的参数：</p>\n<ul>\n<li><p>1.函数的上下文对象 this</p>\n</li>\n<li><p>2.<strong>封装实参的对象</strong> arguments</p>\n</li>\n</ul>\n<p>这一段，我们来讲一下 arguments。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"https://img.smyhvae.com/20220725_2000.png\"></p>\n<h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>函数内的 arguments 是一个<strong>类数组对象</strong>，里面存储的是它接收到的<strong>实参列表</strong>。所有函数都内置了一个 arguments 对象，有个讲究的地方是：只有函数才有arguments。</p>\n<p>具体来说，在调用函数时，我们所传递的实参都会在 arguments 中保存。<strong>arguments 代表的是所有实参</strong>。</p>\n<p>arguments 的展示形式是一个<strong>伪数组</strong>。意思是，它和数组有点像，但它并不是数组。它具有以下特点：</p>\n<ul>\n<li><p>可以进行遍历；具有数组的 length 属性，可以获取长度。</p>\n</li>\n<li><p>可以通过索引（从0开始计数）存储数据、获取和操作数据。比如，我们可以通过索引访问某个实参。</p>\n</li>\n<li><p>不能调用数组的方法。比如push()、pop() 等方法都没有。</p>\n</li>\n</ul>\n<p>我们看一下 arguments 的使用。</p>\n<h3 id=\"arguments-length-返回函数实参的个数\"><a href=\"#arguments-length-返回函数实参的个数\" class=\"headerlink\" title=\"arguments.length 返回函数实参的个数\"></a>arguments.length 返回函数实参的个数</h3><p>arguments.length 可以用来获取<strong>实参的个数</strong>。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(fn.<span class=\"property\">length</span>); <span class=\"comment\">//获取形参的个数</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>); <span class=\"comment\">//获取实参的个数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------------&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180125_2140.png\"></p>\n<p>此外，即使我们不定义形参，也可以通过 arguments 来获取实参：arguments[0] 表示第一个实参、arguments[1] 表示第二个实参，以此类推。</p>\n<p>举例：将传入的实参进行求和，无论实参的个数有多少。代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    sum += <span class=\"variable language_\">arguments</span>[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title function_\">foo</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"arguments-callee-返回正在执行的函数\"><a href=\"#arguments-callee-返回正在执行的函数\" class=\"headerlink\" title=\"arguments.callee 返回正在执行的函数\"></a>arguments.callee 返回正在执行的函数</h3><p>arguments 里边有一个属性叫做 callee，这个属性对应一个函数对象，就是当前正在指向的函数对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>.<span class=\"property\">callee</span> == fun); <span class=\"comment\">// 打印结果为true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在使用函数<strong>递归</strong>调用时，推荐使用 arguments.callee 代替函数名本身。</p>\n<h3 id=\"arguments-可以修改元素\"><a href=\"#arguments-可以修改元素\" class=\"headerlink\" title=\"arguments 可以修改元素\"></a>arguments 可以修改元素</h3><p>arguments 还可以<strong>修改元素，但不能改变数组的长度</strong>。举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>] = <span class=\"number\">99</span>; <span class=\"comment\">// 将实参的第一个数改为99</span></span><br><span class=\"line\">    <span class=\"variable language_\">arguments</span>.<span class=\"title function_\">push</span>(<span class=\"number\">8</span>); <span class=\"comment\">// 此方法不通过，因为无法增加元素</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用场景举例\"><a href=\"#使用场景举例\" class=\"headerlink\" title=\"使用场景举例\"></a>使用场景举例</h3><p>当我们不确定有多少个参数传递的时候，可以用 <strong>arguments</strong> 来获取。</p>\n<p><strong>举例</strong>：利用 arguments 求函数实参中的最大值。</p>\n<p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getMaxValue</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> max = <span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"comment\">// 通过 arguments 遍历实参</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (max &lt; <span class=\"variable language_\">arguments</span>[i]) &#123;</span><br><span class=\"line\">\t\t\tmax = <span class=\"variable language_\">arguments</span>[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getMaxValue</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","text":"函数的介绍函数：就是一些功能或语句的封装。在需要的时候，通过调用的形式，执行这些语句。补充：函数也是一个对象使用typeof检查一个函数对象时，会返回 function函数的作用：一次定义，多次调用。将大量重复的语句抽取出来，写在函数里，以后需要这些语句时，可以直接调用函数，避免","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"22-立即执行函数","slug":"JavaScript/22-立即执行函数","date":"2023-02-16T07:30:25.432Z","updated":"2023-02-16T07:48:47.871Z","comments":true,"path":"api/articles/JavaScript/22-立即执行函数.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"立即执行函数-IIFE\"><a href=\"#立即执行函数-IIFE\" class=\"headerlink\" title=\"立即执行函数 IIFE\"></a>立即执行函数 IIFE</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>函数定义完，就立即被调用，这种函数叫做立即执行函数。英文是 IIFE（Immediately-invoked function expression），立即调用函数表达式。</p>\n<h3 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h3><p>语法1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>语法2：（立即执行函数也可以传参）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">&#125;)(a, b);</span><br></pre></td></tr></table></figure>\n\n<p>语法解释：</p>\n<ul>\n<li><code>function()&#123;&#125;</code>这种写法，需要再加一对圆括号，变成&#96;&#96;</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>现有匿名函数如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;a = &quot;</span> + a);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;b = &quot;</span> + b);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>立即执行函数如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;a = &quot;</span> + a);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;b = &quot;</span> + b);</span><br><span class=\"line\">&#125;)(<span class=\"number\">123</span>, <span class=\"number\">456</span>);</span><br></pre></td></tr></table></figure>\n\n<p>立即执行函数往往只会执行一次。为什么呢？因为没有变量保存它，执行完了之后，就找不到它了。</p>\n<h2 id=\"IIFE的作用\"><a href=\"#IIFE的作用\" class=\"headerlink\" title=\"IIFE的作用\"></a>IIFE的作用</h2><h3 id=\"为变量赋值\"><a href=\"#为变量赋值\" class=\"headerlink\" title=\"为变量赋值\"></a>为变量赋值</h3><p>当给变量赋值需要一些较复杂的计算时，使用IIFE显得语法更紧凑。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sex = <span class=\"string\">&#x27;male&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> nickName = (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (sex == <span class=\"string\">&#x27;male&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;帅哥&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;美女&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(nickName);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将全局变量变为局部变量\"><a href=\"#将全局变量变为局部变量\" class=\"headerlink\" title=\"将全局变量变为局部变量\"></a>将全局变量变为局部变量</h3><p>现有如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  arr.<span class=\"title function_\">push</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>](); <span class=\"comment\">// 打印5</span></span><br></pre></td></tr></table></figure>\n\n<p>我们知道，上方代码中，i 是全局变量，所有函数共享内存中的同一个变量i。</p>\n<p>现在，我们通过立即执行函数进行改造：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> (<span class=\"params\">i</span>) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>](); <span class=\"comment\">// 打印2</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，i作为传递给了IIFE的形参，让 i 得以成为 IIFE 的局部变量；并让 IIFE 并形成了闭包（<code>arr[2]()</code>打印出了IIFE内部变量 i 的值，说明形成了闭包）。</p>\n","text":"立即执行函数 IIFE概念函数定义完，就立即被调用，这种函数叫做立即执行函数。英文是 IIFE（Immediately-invoked function expression），立即调用函数表达式。语法格式语法1：1<br>2<br>3<br>(function() &#123;","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"23-作用域、变量提升、函数提升","slug":"JavaScript/23-作用域、变量提升、函数提升","date":"2023-02-16T07:30:25.435Z","updated":"2023-02-16T07:49:36.202Z","comments":true,"path":"api/articles/JavaScript/23-作用域、变量提升、函数提升.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><h3 id=\"作用域（Scope）的概念和分类\"><a href=\"#作用域（Scope）的概念和分类\" class=\"headerlink\" title=\"作用域（Scope）的概念和分类\"></a>作用域（Scope）的概念和分类</h3><ul>\n<li><p><strong>概念</strong>：作用域是一个变量或函数的作用范围。作用域在<strong>函数定义</strong>时，就已经确定了。</p>\n</li>\n<li><p><strong>目的</strong>：为了提高程序的可靠性，同时减少命名冲突。</p>\n</li>\n</ul>\n<p>在 JS 中，一共有两种作用域：（ES5 中）</p>\n<ul>\n<li><strong>全局作用域</strong>：作用于整个 script 标签内部，或者作用于一个独立的 JS 文件。</li>\n<li><strong>函数作用域</strong>（局部作用域）：作用于函数内的代码环境。</li>\n</ul>\n<h3 id=\"全局作用域-和-window-对象\"><a href=\"#全局作用域-和-window-对象\" class=\"headerlink\" title=\"全局作用域 和 window 对象\"></a>全局作用域 和 window 对象</h3><p>直接编写在 script 标签中的 JS 代码，都在全局作用域。全局作用域在页面打开时创建，在页面关闭时销毁。</p>\n<p>在全局作用域中有一个全局对象 window，它代表的是浏览器的窗口，由浏览器创建，我们可以直接使用。相关知识点如下：</p>\n<ul>\n<li>创建的<strong>变量</strong>都会作为 window 对象的属性保存。比如在全局作用域内写 <code>const a = 100</code>，这里的 <code>a</code> 等价于 <code>window.a</code>。</li>\n<li>创建的<strong>函数</strong>都会作为 window 对象的方法保存。</li>\n</ul>\n<h3 id=\"作用域的访问关系\"><a href=\"#作用域的访问关系\" class=\"headerlink\" title=\"作用域的访问关系\"></a>作用域的访问关系</h3><p>在内部作用域中可以访问外部作用域的变量，在外部作用域中无法访问到内部作用域的变量。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;aaa&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> b = <span class=\"string\">&#x27;bbb&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：aaa。说明 内层作用域 可以访问 外层作用域 里的变量</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 报错：Uncaught ReferenceError: b is not defined。说明 外层作用域 无法访问 内层作用域 里的变量</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量的作用域\"><a href=\"#变量的作用域\" class=\"headerlink\" title=\"变量的作用域\"></a>变量的作用域</h3><p>根据作用域的不同，变量可以分为两类：全局变量、局部变量。</p>\n<p><strong>全局变量</strong>：</p>\n<ul>\n<li>在全局作用域下声明的变量，叫「全局变量」。在全局作用域的任何一地方，都可以访问这个变量。</li>\n<li>在全局作用域下声明的变量是全局变量。</li>\n</ul>\n<p><strong>局部变量</strong>：</p>\n<ul>\n<li>定义在函数作用域的变量，叫「局部变量」。仅限函数内部访问这个变量。</li>\n<li>函数的<strong>形参</strong>也是属于局部变量。</li>\n</ul>\n<p>从执行效率来看全局变量和局部变量：</p>\n<ul>\n<li><p>全局变量：只有浏览器关闭时才会被销毁，比较占内存。</p>\n</li>\n<li><p>局部变量：当其所在的代码块运行结束后，就会被销毁，比较节约内存。</p>\n</li>\n</ul>\n<p><strong>特殊情况：</strong></p>\n<p>（1）无论是在函数外还是函数内，变量如果未经声明就赋值（意思是，如果不加var&#x2F;let&#x2F;const），这个变量是<strong>全局变量</strong>。</p>\n<p>比如：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明变量时如果不加var/let/const，这个变量是全局变量。且可以被修改。</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(); <span class=\"comment\">// 这行代码必须要写，否则下一行代码执行时会报错：Uncaught ReferenceError: a is not defined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印结果：1</span></span><br></pre></td></tr></table></figure>\n\n<p>当然，我们不建议这么用。</p>\n<p>（2）如果局部变量和全局变量重名，则在函数内部，变量是以局部变量为准。</p>\n<h3 id=\"作用域的上下级关系\"><a href=\"#作用域的上下级关系\" class=\"headerlink\" title=\"作用域的上下级关系\"></a>作用域的上下级关系</h3><p>当在函数作用域操作一个变量时，它会先在自身作用域中寻找，如果有就直接使用（<strong>就近原则</strong>）。如果没有则向上一级作用域中寻找，直到找到全局作用域；如果全局作用域中依然没有找到，则会报错 ReferenceError。</p>\n<p>在函数中要访问全局变量可以使用 window 对象。（比如说，全局作用域和函数作用域都定义了变量 a，如果想访问全局变量，可以使用<code>window.a</code>）</p>\n<h2 id=\"全局作用域的预处理\"><a href=\"#全局作用域的预处理\" class=\"headerlink\" title=\"全局作用域的预处理\"></a>全局作用域的预处理</h2><p><strong>预处理（预解析）</strong>的概念：JS在解析代码之前，有一个“预处理（预解析）”阶段，将当前 JS 代码中所有变量的定义和函数的定义，放到所有代码的最前面。</p>\n<p>（打个比方，学生在学习文言文之前，会扫读整篇文章，做简单的预习。）</p>\n<p>这种预解析，也称之为声明提前。</p>\n<h3 id=\"变量的声明提前（变量提升）\"><a href=\"#变量的声明提前（变量提升）\" class=\"headerlink\" title=\"变量的声明提前（变量提升）\"></a>变量的声明提前（变量提升）</h3><p>使用 var 关键字声明的变量（ 比如 <code>var a = 1</code>），<strong>会在所有的代码执行之前被声明</strong>（但是不会赋值）。但是如果声明变量时不是用 var 关键字（比如直接写<code>a = 1</code>），则变量不会被声明提前。</p>\n<p><strong>举例 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">123</span>;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：undefined。注意，打印结果并没有报错，而是 undefined，说明变量 a 被提前声明了，只是尚未被赋值。</p>\n<p><strong>举例 2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">a = <span class=\"number\">123</span>; <span class=\"comment\">//此时a相当于window.a</span></span><br></pre></td></tr></table></figure>\n\n<p>程序会报错：<code>Uncaught ReferenceError: a is not defined</code>。</p>\n<p><strong>举例 3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">123</span>; <span class=\"comment\">//此时a相当于window.a</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：123。</p>\n<p><strong>举例 4</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">123</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：undefined。注意，打印结果并没有报错，而是 undefined。这个例子，再次说明了：变量 i 在函数执行前，就被提前声明了，只是尚未被赋值。</p>\n<p>例 4 中， <code>if(false)</code>里面的代码虽然不会被执行，但是整个代码有<strong>解析</strong>的环节，解析的时候就已经把 变量 i 给提前声明了。</p>\n<p><strong>总结</strong>：</p>\n<p>既然在ES5 中存在变量提升的现象，那么，在实战开发中，为了避免出错，建议先声明一个变量，然后再使用这个变量。</p>\n<h3 id=\"函数的声明提前（函数提升）\"><a href=\"#函数的声明提前（函数提升）\" class=\"headerlink\" title=\"函数的声明提前（函数提升）\"></a>函数的声明提前（函数提升）</h3><p><strong>函数声明</strong>：</p>\n<p>使用<code>函数声明</code>的形式创建的函数<code>function foo()&#123;&#125;</code>，<strong>会被声明提前</strong>。</p>\n<p>也就是说，整个函数会在所有的代码执行之前就被<strong>创建完成</strong>。所以，在代码顺序上，我们可以先调用函数，再定义函数。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fn1</span>(); <span class=\"comment\">// 虽然 函数 fn1 的定义是在后面，但是因为被提前声明了， 所以此处可以调用函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是函数 fn1&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>函数表达式</strong>：</p>\n<p>使用<code>函数表达式</code>创建的函数<code>const foo = function()&#123;&#125;</code>，<strong>不会被声明提前</strong>，所以不能在声明前调用。</p>\n<p>很好理解，因为此时只是变量 foo 被提升了，且值为 undefined，并没有把 <code>function()&#123;&#125;</code> 赋值给 foo。</p>\n<p>所以，下面的例子会报错：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不会报错，可以正常执行函数，正常打印结果</span></span><br><span class=\"line\"><span class=\"title function_\">fun1</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 此时 fun2 相当于 undefined。执行时会报错：Uncaught ReferenceError: Cannot access &#x27;fun2&#x27; before initialization</span></span><br><span class=\"line\"><span class=\"title function_\">fun2</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明，会被提前声明</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是 fun1 函数&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数表达式，不会被提前声明</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fun2 = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是 fun12 函数&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数提升优先于变量提升\"><a href=\"#函数提升优先于变量提升\" class=\"headerlink\" title=\"函数提升优先于变量提升\"></a>函数提升优先于变量提升</h3><p>在JS的规则中，函数提升优先于变量提升。来看看下面这段代码，你认为打印结果应该如何：（这是一道经典面试题）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">// 打印 B</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 变量提升</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fun = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;A&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数提升</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;B&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">// 打印 A</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">B</span><br><span class=\"line\">A</span><br></pre></td></tr></table></figure>\n\n<p>当声明被提前后，上方代码的实际顺序可以这样理解：（把它当成伪代码理解即可）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*伪代码*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数提升</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;B&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fun = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">// 打印 B</span></span><br><span class=\"line\"></span><br><span class=\"line\">fun = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;A&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">// 打印A</span></span><br></pre></td></tr></table></figure>\n\n<p>当然，上方代码是ES5写法，如果把 var 改成ES6中的 let&#x2F;const，代码会报错<code>Uncaught SyntaxError: Identifier &#39;fun&#39; has already been declared</code>。也就是说，ES6中不需要关心谁优先提升的问题了。</p>\n<h2 id=\"函数作用域的预处理\"><a href=\"#函数作用域的预处理\" class=\"headerlink\" title=\"函数作用域的预处理\"></a>函数作用域的预处理</h2><p>上一段讲的是全局作用域中的声明提前。在函数作用域中，也有声明提前的现象：</p>\n<ul>\n<li><p>函数中，使用 var 关键字声明的变量，会在函数中所有代码执行之前被提前声明。</p>\n</li>\n<li><p>函数中，没有 var 声明的变量都是<strong>全局变量</strong>，且并不会被提前声明。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    a = <span class=\"number\">2</span>; <span class=\"comment\">// 此处的a相当于window.a</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">//打印结果是2</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，执行 foo() 后，函数里面的打印结果是<code>1</code>。如果去掉第一行代码，执行 foo() 后，函数里面的打印结果是<code>Uncaught ReferenceError: a is not defined</code>。</p>\n<p><strong>补充</strong>：定义形参就相当于在函数作用域中声明了变量。举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这个函数中，因为有了形参 e，此时相当于在函数内部的第一行代码里，写了 var e;</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">//打印结果为 undefined</span></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(<span class=\"number\">123</span>); <span class=\"comment\">//打印结果为123</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ES5中没有块级作用域\"><a href=\"#ES5中没有块级作用域\" class=\"headerlink\" title=\"ES5中没有块级作用域\"></a>ES5中没有块级作用域</h2><p>在其他编程语言中（如 Java、C#等），存在块级作用域，由<code>&#123;&#125;</code>包括起来。比如在 Java 语言中，if 语句里创建的变量，只能在 if 语句内部使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">123</span>;</span><br><span class=\"line\">    system.out.print(num); <span class=\"comment\">// 123</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">system.out.print(num); <span class=\"comment\">// 报错</span></span><br></pre></td></tr></table></figure>\n\n<p>但是，在 ES5 中没有块级作用域。举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num); <span class=\"comment\">//123</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num); <span class=\"comment\">//123（可以正常打印）</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><p>先来认识函数的嵌套：</p>\n<ul>\n<li><p>只要是代码，就至少有一个作用域</p>\n</li>\n<li><p>函数内部有局部作用域</p>\n</li>\n<li><p>如果函数内部还嵌套了函数，那么在这个作用域中就又诞生了另一个作用域。</p>\n</li>\n</ul>\n<p>基于上面几条内容，我们可以得出作用域链的概念。</p>\n<p><strong>作用域链</strong>：在嵌套函数中，变量会从内到外逐层寻找它的定义（查找时，采用<strong>就近原则</strong>）。也就是说，采用的是链式查找的方式来决定取哪个值，这种结构称之为作用域链。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 外部函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 内部函数</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">fun</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：20。</p>\n","text":"作用域作用域（Scope）的概念和分类概念：作用域是一个变量或函数的作用范围。作用域在函数定义时，就已经确定了。目的：为了提高程序的可靠性，同时减少命名冲突。在 JS 中，一共有两种作用域：（ES5 中）全局作用域：作用于整个 script 标签内部，或者作用于一个独立的 JS ","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"24-预编译","slug":"JavaScript/24-预编译","date":"2023-02-16T07:30:25.438Z","updated":"2023-02-16T07:49:46.975Z","comments":true,"path":"api/articles/JavaScript/24-预编译.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<blockquote>\n<p>我们在上一篇文章《作用域》中简单讲过“变量提升”，今天来讲一下预编译，这对我们深入理解变量提升会有帮助。</p>\n</blockquote>\n<h2 id=\"JavaScript-运行三部曲\"><a href=\"#JavaScript-运行三部曲\" class=\"headerlink\" title=\"JavaScript 运行三部曲\"></a>JavaScript 运行三部曲</h2><ul>\n<li><p>语法分析</p>\n</li>\n<li><p>预编译</p>\n</li>\n<li><p>解释执行</p>\n</li>\n</ul>\n<h2 id=\"预编译前奏\"><a href=\"#预编译前奏\" class=\"headerlink\" title=\"预编译前奏\"></a>预编译前奏</h2><blockquote>\n<p>在讲预编译前，我们先来普及下面两个规律。</p>\n</blockquote>\n<h3 id=\"两个规律\"><a href=\"#两个规律\" class=\"headerlink\" title=\"两个规律\"></a>两个规律</h3><p><strong>规律1：任何变量，如果未经声明就赋值，此变量是属于 window 的属性</strong>，而且不会做变量提升。（注意，无论在哪个作用域内赋值）</p>\n<p>比如说，如果我们直接在代码里写 <code>console.log(a)</code>，这肯定会报错的，提示找不到 <code>a</code>。但如果我直接写 <code>a = 100</code>，这就不会报错，此时，这个 <code>a</code> 就是 <code>window.a</code>。</p>\n<p><strong>规律2：一切声明的全局变量，全是window的属性</strong>。（注意，这里说的是在全局作用域内声明的全局变量，不是说局部变量）</p>\n<p>比如，当定义 <code>var a = 200</code> 时，这个 <code>a</code> 就是 <code>window.a</code>。</p>\n<p>由此，我们可以看出：<strong>window 代表了全局作用域</strong>（是说「代表」，没说「等于」）。</p>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>掌握了上面两句话之后，我们再来看看下面的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = b = <span class=\"number\">100</span>; <span class=\"comment\">// 连续赋值</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">b</span>); <span class=\"comment\">// 在全局范围内访问 b</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 在全局范围内访问 b，但是前面没有加 window 这个关键字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">a</span>); <span class=\"comment\">// 在全局范围内访问 a</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 在全局范围内访问 a，但是前面没有加 window 这个关键字</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方代码的打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100</span><br><span class=\"line\"></span><br><span class=\"line\">100</span><br><span class=\"line\"></span><br><span class=\"line\">undefined</span><br><span class=\"line\"></span><br><span class=\"line\">（会报错，提示 Uncaught ReferenceError: a is not defined）</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：</p>\n<p>当执行了<code>foo()</code>函数之后， <code>var a = b = 100</code> 这行<strong>连续赋值</strong>的代码等价于 <code>var a = (b = 100)</code>，其执行顺序是：</p>\n<p>（1）先把 100 赋值给 b；</p>\n<p>（2）再声明变量 a；</p>\n<p>（3）再把 b 的值赋值给 a。</p>\n<p>我们可以看到，b 是未经声明的变量就被赋值了，此时，根据规律1，这个 b 是属于 <code>window.b</code>；而 a 的作用域仅限于 foo() 函数内部，不属于 window。所以也就有了这样的打印结果。</p>\n<h2 id=\"预编译\"><a href=\"#预编译\" class=\"headerlink\" title=\"预编译\"></a>预编译</h2><h3 id=\"函数预编译的步骤\"><a href=\"#函数预编译的步骤\" class=\"headerlink\" title=\"函数预编译的步骤\"></a>函数预编译的步骤</h3><blockquote>\n<p>函数预编译，发生在函数执行的前一刻。</p>\n</blockquote>\n<p>（1）创建AO对象。AO即 Activation Object 活跃对象，其实就是「执行期上下文」。</p>\n<p>（2）找形参和变量声明，将形参名和变量作为 AO 的属性名，值为undefined。</p>\n<p>（3）将实参值和形参统一，实参的值赋给形参。</p>\n<p>（4）查找函数声明，函数名作为 AO 对象的属性名，值为整个函数体。</p>\n<p>这个地方比较难理解。但只有了解了函数的预编译，才能理解明白函数的执行顺序。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">666</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">c</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ƒ a() &#123;&#125;</span><br><span class=\"line\">666</span><br><span class=\"line\">666</span><br><span class=\"line\">ƒ () &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><p>JavaScript预编译原理分析：<a href=\"https://blog.csdn.net/q1056843325/article/details/52951114\">https://blog.csdn.net/q1056843325/article/details/52951114</a></p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000018001871\">https://segmentfault.com/a/1190000018001871</a></p>\n</li>\n<li><p>预编译及变量提升：<a href=\"https://juejin.im/post/5aa6693df265da23884cb571\">https://juejin.im/post/5aa6693df265da23884cb571</a></p>\n</li>\n<li><p><a href=\"https://juejin.im/post/5adaf8215188256712781830\">https://juejin.im/post/5adaf8215188256712781830</a></p>\n</li>\n<li><p><a href=\"https://www.qqzmly.com/archives/1521\">https://www.qqzmly.com/archives/1521</a></p>\n</li>\n<li><p>宏任务&amp;微任务相关：<a href=\"https://segmentfault.com/a/1190000018134157\">https://segmentfault.com/a/1190000018134157</a></p>\n</li>\n</ul>\n","text":"我们在上一篇文章《作用域》中简单讲过“变量提升”，今天来讲一下预编译，这对我们深入理解变量提升会有帮助。JavaScript 运行三部曲语法分析预编译解释执行预编译前奏在讲预编译前，我们先来普及下面两个规律。两个规律规律1：任何变量，如果未经声明就赋值，此变量是属于 window","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"26-闭包","slug":"JavaScript/26-闭包","date":"2023-02-16T07:30:25.442Z","updated":"2023-02-16T07:50:21.378Z","comments":true,"path":"api/articles/JavaScript/26-闭包.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20200703_2055.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"闭包的引入\"><a href=\"#闭包的引入\" class=\"headerlink\" title=\"闭包的引入\"></a>闭包的引入</h2><p>我们知道，变量根据作用域的不同分为两种：全局变量和局部变量。</p>\n<ul>\n<li><p>函数内部可以访问全局变量和局部变量。</p>\n</li>\n<li><p>函数外部只能访问全局变量，不能访问局部变量。</p>\n</li>\n<li><p>当函数执行完毕，本作用域内的局部变量会销毁。</p>\n</li>\n</ul>\n<p>比如下面这样的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 打印报错：Uncaught ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，由于变量 <code>a</code> 是函数内的局部变量，所以外部无法访问。</p>\n<p>但是，在有些场景下，我们就是想要在函数外部访问<strong>函数内部作用域的局部变量</strong>，那要怎么办呢？这就引入了闭包的概念。</p>\n<h2 id=\"什么是闭包\"><a href=\"#什么是闭包\" class=\"headerlink\" title=\"什么是闭包\"></a>什么是闭包</h2><h3 id=\"闭包（closure）的概念\"><a href=\"#闭包（closure）的概念\" class=\"headerlink\" title=\"闭包（closure）的概念\"></a>闭包（closure）的概念</h3><p><strong>闭包</strong>：如果<strong>外部作用域</strong>有权访问另外一个<strong>函数内部</strong>的<strong>局部变量</strong>时，那就产生了闭包。这个内部函数称之为闭包函数。注意，这里强调的是访问<strong>局部变量</strong>。</p>\n<p>闭包代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">fun2</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fun1</span>();</span><br><span class=\"line\"><span class=\"comment\">// 调用外部函数，就能得到内部函数，并用 变量 result 接收</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title function_\">fun1</span>();</span><br><span class=\"line\"><span class=\"comment\">// 在 fun1函数的外部，执行了内部函数 fun2，并访问到了 fun2的内部变量a</span></span><br><span class=\"line\"><span class=\"title function_\">result</span>(); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，外部作用域（即全局作用域） 访问了函数 fun1 中的局部变量，那么，在 fun1 中就产生了闭包，函数 fun1是闭包函数。</p>\n<p>全局作用域中，并没有定义变量a。正常情况下作为函数内的局部变量 a，无法被外部访问到。但是通过闭包，我们最后还是可以在全局作用域中拿到局部变量 a 的值。</p>\n<p>注意，闭包函数是fun1，不是fun2。fun2在这里的作用是让全局作用域访问到变量a，fun2只是一个桥梁。</p>\n<h3 id=\"闭包的生命周期\"><a href=\"#闭包的生命周期\" class=\"headerlink\" title=\"闭包的生命周期\"></a>闭包的生命周期</h3><ol>\n<li><p>产生：内部函数fn1被声明时（即被创建时，不是被调用时）就产生了。</p>\n</li>\n<li><p>死亡：嵌套的内部函数成为垃圾对象时。（比如fun1 &#x3D; null，就可以让 fun1 成为垃圾对象）</p>\n</li>\n</ol>\n<h3 id=\"在-chrome-浏览器控制台中，调试闭包\"><a href=\"#在-chrome-浏览器控制台中，调试闭包\" class=\"headerlink\" title=\"在 chrome 浏览器控制台中，调试闭包\"></a>在 chrome 浏览器控制台中，调试闭包</h3><p>上面的代码中，要怎么验证，确实产生了闭包呢？我们可以在 chrome 浏览器的控制台中设置断点，当代码执行到 <code>console.log(a)</code>这一行的时候，如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20200703_2055.png\"></p>\n<p>上图中， Local 指的是局部作用域，Global 指的是全局作用域；而 Closure 则是<strong>闭包</strong>，fn1 是一个闭包函数。</p>\n<h2 id=\"闭包的表现形式\"><a href=\"#闭包的表现形式\" class=\"headerlink\" title=\"闭包的表现形式\"></a>闭包的表现形式</h2><h3 id=\"形式1：将一个函数作为另一个函数的返回值\"><a href=\"#形式1：将一个函数作为另一个函数的返回值\" class=\"headerlink\" title=\"形式1：将一个函数作为另一个函数的返回值\"></a>形式1：将一个函数作为另一个函数的返回值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    a++</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fn2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"title function_\">fn1</span>();   <span class=\"comment\">//执行外部函数fn1，返回的是内部函数fn2</span></span><br><span class=\"line\"><span class=\"title function_\">f</span>() <span class=\"comment\">// 3       //执行fn2</span></span><br><span class=\"line\"><span class=\"title function_\">f</span>() <span class=\"comment\">// 4       //再次执行fn2</span></span><br></pre></td></tr></table></figure>\n\n\n<p>当f()第二次执行的时候，a加1了，也就说明了：闭包里的数据没有消失，而是保存在了内存中。如果没有闭包，代码执行完倒数第三行后，变量a就消失了。</p>\n<p>上面的代码中，虽然调用了内部函数两次，但是，闭包对象只创建了一个。</p>\n<p>也就是说，要看闭包对象创建了几个，就看：<strong>外部函数执行了几次</strong>（与内部函数执行几次无关）。</p>\n<h3 id=\"形式2：将函数作为实参传递给另一个函数调用\"><a href=\"#形式2：将函数作为实参传递给另一个函数调用\" class=\"headerlink\" title=\"形式2：将函数作为实参传递给另一个函数调用\"></a>形式2：将函数作为实参传递给另一个函数调用</h3><p>在定时器、事件监听、Ajax 请求、Web Workers 或者任何异步中，只要使用了回调函数，实际上就是在使用闭包。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">showDelay</span>(<span class=\"params\">msg, time</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">//这个function是闭包，因为是嵌套的子函数，而且引用了外部函数的变量msg</span></span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(msg)</span><br><span class=\"line\">  &#125;, time)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">showDelay</span>(<span class=\"string\">&#x27;qianguyihao&#x27;</span>, <span class=\"number\">2000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码中，闭包是里面的function，因为它是嵌套的子函数，而且引用了外部函数的变量msg。</p>\n<h2 id=\"闭包的作用\"><a href=\"#闭包的作用\" class=\"headerlink\" title=\"闭包的作用\"></a>闭包的作用</h2><ul>\n<li><p>作用1：延长局部变量的生命周期。</p>\n</li>\n<li><p>作用2：让函数外部可以操作（读写）函数内部的数据（变量&#x2F;函数）。</p>\n</li>\n</ul>\n<p>代码演示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">fun2</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    a++</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fun2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> foo = <span class=\"title function_\">fun1</span>();   <span class=\"comment\">//执行外部函数fn1，返回的是内部函数fn2</span></span><br><span class=\"line\"><span class=\"title function_\">foo</span>() <span class=\"comment\">// 3       //执行fun2</span></span><br><span class=\"line\"><span class=\"title function_\">foo</span>() <span class=\"comment\">// 4       //再次执行fun2</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，foo 代表的就是整个 fun2 函数。当执行了 <code>foo()</code> 语句之后，也就执行了fun2()函数，fun1() 函数内就产生了闭包。</p>\n<p><strong>作用1分析</strong>：</p>\n<p>一般来说，在 fn1() 函数执行完毕后，它里面的变量 a 会立即销毁。但此时由于产生了闭包，所以 <strong>fun1 函数中的变量 a 不会立即销毁，仍然保留在内存中，因为 fn2 函数还要继续调用变量 a</strong>。只有等所有函数把变量 a 调用完了，变量 a 才会销毁。</p>\n<p><strong>作用2分析：</strong></p>\n<p>在执行 <code>foo()</code>语句之后，竟然能够打印出 <code>3</code>，这就完美通过闭包实现了：全局作用域成功访问到了局部作用域中的变量 a。</p>\n<p>达到的效果是：<strong>外界看不到变量a，但可以操作a</strong>。当然，如果你真想看到a，可以在fun2中将a返回即可。</p>\n<h2 id=\"闭包的应用场景\"><a href=\"#闭包的应用场景\" class=\"headerlink\" title=\"闭包的应用场景\"></a>闭包的应用场景</h2><h3 id=\"场景1：高阶函数\"><a href=\"#场景1：高阶函数\" class=\"headerlink\" title=\"场景1：高阶函数\"></a>场景1：高阶函数</h3><p>题目：不同的班级有不同成绩检测标准。比如：A班的合格线是60分，B 班的合格线是70分。已知某个人班级和分数，请用闭包函数判断他的成绩是否合格。</p>\n<p>思路：创建成绩检测函数 checkStandard(n)，检查成绩 n 是否合格，函数返回布尔值。</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 高阶函数：判断学生的分数是否合格。形参 standardTemp 为标准线</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createCheckTemp</span>(<span class=\"params\">standardTemp</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 形参 n 表示具体学生的分数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">checkTemp</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &gt;= standardTemp) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩合格&#x27;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩不合格&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> checkTemp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个 checkStandard_A 函数，它以60分为合格线</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> checkStandard_A = <span class=\"title function_\">createCheckTemp</span>(<span class=\"number\">60</span>);</span><br><span class=\"line\"><span class=\"comment\">// 再创建一个 checkStandard_B 函数，它以70分为合格线</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> checkStandard_B = <span class=\"title function_\">createCheckTemp</span>(<span class=\"number\">70</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"title function_\">checkStandard_A</span>(<span class=\"number\">65</span>); <span class=\"comment\">// 成绩合格</span></span><br><span class=\"line\"><span class=\"title function_\">checkStandard_B</span>(<span class=\"number\">65</span>); <span class=\"comment\">// 成绩不合格</span></span><br></pre></td></tr></table></figure>\n\n<p>对于A班来说，它的闭包函数是createCheckTemp()，闭包范围是 checkTemp()函数和参数<code>standardTemp = 60</code>。对于B班来说，它的闭包函数是全新的createCheckTemp()，闭包范围是全新的checkTemp()函数和全新的参数<code>standardTemp = 70</code>。</p>\n<p>因为有闭包存在，所以，并不会因为 createCheckTemp() 执行完毕后就销毁 standardTemp 的值；且A班和B班的standardTemp参数不会混淆。</p>\n<p>备注：关于“高阶函数”的更多解释，我们在以后的内容中讲解。</p>\n<h3 id=\"场景2：封装JS模块\"><a href=\"#场景2：封装JS模块\" class=\"headerlink\" title=\"场景2：封装JS模块\"></a>场景2：封装JS模块</h3><p>闭包的第二个使用场景是：定义具有特定功能的JS模块，将所有的数据和功能都封装在一个函数内部，只向外暴露指定的对象或方法。模块的调用者，只能调用模块暴露的对象或方法来实现对应的功能。</p>\n<p>比如有这样一个需求：定义一个私有变量a，要求a只能被进行指定操作（加减），不能进行其他操作（乘除）。在  Java、C++ 等语言中，有私有属性的概念，但在JS中只能通过闭包模拟。</p>\n<p>我们来看看下面的代码，如何通过闭包封装JS模块。</p>\n<p>写法1：</p>\n<p>（1）myModule.js：（定义一个模块，向外暴露多个方法，供外界调用）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myModule</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//私有数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = <span class=\"string\">&#x27;Qinguyihao Haha&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//操作私有数据的函数</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">doSomething</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;doSomething() &#x27;</span> + msg.<span class=\"title function_\">toUpperCase</span>()); <span class=\"comment\">//字符串大写</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">doOtherthing</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;doOtherthing() &#x27;</span> + msg.<span class=\"title function_\">toLowerCase</span>()) <span class=\"comment\">//字符串小写</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过【对象字面量】的形式进行包裹，向外暴露多个函数</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">doSomething1</span>: doSomething,</span><br><span class=\"line\">        <span class=\"attr\">doOtherthing2</span>: doOtherthing</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，外界只能通过doSomething1和doOtherthing2来操作里面的数据，但不让外界看到里面的具体实现。</p>\n<p>（2）index.html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>闭包的应用-自定义JS模块<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">闭包应用举例: 定义JS模块</span></span><br><span class=\"line\"><span class=\"comment\">  * 具有特定功能的js文件</span></span><br><span class=\"line\"><span class=\"comment\">  * 将所有的数据和功能都封装在一个函数内部(私有的)</span></span><br><span class=\"line\"><span class=\"comment\">  * 【重要】只向外暴露一个包含n个方法的对象或方法</span></span><br><span class=\"line\"><span class=\"comment\">  * 模块的使用者, 只需要调用模块暴露的对象或者方法来实现对应的功能</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;myModule.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> <span class=\"variable language_\">module</span> = <span class=\"title function_\">myModule</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">module</span>.<span class=\"title function_\">doSomething1</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">module</span>.<span class=\"title function_\">doOtherthing2</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>写法2：</p>\n<p>同样是实现上面的功能，我们还采取另外一种写法，写起来更方便。如下：</p>\n<p>（1）myModule2.js：（是一个立即执行的匿名函数）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//私有数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = <span class=\"string\">&#x27;Qinguyihao Haha&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//操作私有数据的函数</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">doSomething</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;doSomething() &#x27;</span> + msg.<span class=\"title function_\">toUpperCase</span>())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">doOtherthing</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;doOtherthing() &#x27;</span> + msg.<span class=\"title function_\">toLowerCase</span>())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//外部函数是即使运行的匿名函数，我们可以把两个方法直接传给window对象</span></span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">myModule</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">doSomething1</span>: doSomething,</span><br><span class=\"line\">        <span class=\"attr\">doOtherthing2</span>: doOtherthing</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n\n\n<p>（2）index.html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>闭包的应用-自定义JS模块<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">闭包的应用2 : 定义JS模块</span></span><br><span class=\"line\"><span class=\"comment\">  * 具有特定功能的js文件</span></span><br><span class=\"line\"><span class=\"comment\">  * 将所有的数据和功能都封装在一个函数内部(私有的)</span></span><br><span class=\"line\"><span class=\"comment\">  * 只向外暴露一个包信n个方法的对象或函数</span></span><br><span class=\"line\"><span class=\"comment\">  * 模块的使用者, 只需要通过模块暴露的对象调用方法来实现对应的功能</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--引入myModule文件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;myModule2.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class=\"line\">    myModule.doSomething1()</span><br><span class=\"line\">    myModule.doOtherthing2()</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方两个文件中，我们在<code>myModule2.js</code>里直接把两个方法直接传递给window对象了。于是，在index.html中引入这个js文件后，会立即执行里面的匿名函数。在index.html中把myModule直接拿来用即可。</p>\n<p><strong>小结：</strong></p>\n<p>写法1和写法2都采用了闭包。</p>\n<h2 id=\"内存溢出和内存泄露\"><a href=\"#内存溢出和内存泄露\" class=\"headerlink\" title=\"内存溢出和内存泄露\"></a>内存溢出和内存泄露</h2><blockquote>\n<p>我们再讲两个概念，这两个概念和闭包有些联系。</p>\n</blockquote>\n<h3 id=\"内存泄漏\"><a href=\"#内存泄漏\" class=\"headerlink\" title=\"内存泄漏\"></a>内存泄漏</h3><p><strong>内存泄漏</strong>：<strong>占用的内存</strong>没有及时释放。</p>\n<p>内存泄露的次数积累多了，就容易导致内存溢出。</p>\n<p><strong>常见的内存泄露</strong>：</p>\n<p>1、意外的全局变量</p>\n<p>2、没有及时清理的计时器或回调函数</p>\n<p>3、闭包</p>\n<p>情况1举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 意外的全局变量</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  a = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">10000000</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n\n<p>情况2举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 没有及时清理的计时器或回调函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intervalId = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"comment\">//启动循环定时器后不清理</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// clearInterval(intervalId);  //清理定时器</span></span><br></pre></td></tr></table></figure>\n\n<p>情况3举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(++a)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fn2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"title function_\">fn1</span>()</span><br><span class=\"line\"><span class=\"title function_\">f</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// f = null //让内部函数成为垃圾对象--&gt;回收闭包</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"内存溢出\"><a href=\"#内存溢出\" class=\"headerlink\" title=\"内存溢出\"></a>内存溢出</h3><p><strong>内存溢出</strong>：程序运行时出现的错误。当程序运行<strong>需要的内存</strong>超过<strong>剩余的内存</strong>时，就抛出内存溢出的错误。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">obj[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">10000000</span>);  <span class=\"comment\">//把所有的数组内容都放到obj里保存，导致obj占用了很大的内存空间</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;-----&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"闭包是否会造成内存泄漏\"><a href=\"#闭包是否会造成内存泄漏\" class=\"headerlink\" title=\"闭包是否会造成内存泄漏\"></a>闭包是否会造成内存泄漏</h3><p>一般来说，答案是否定的。因为内存泄漏是非预期情况，本来想回收，但实际没回收；而闭包是预期情况，一般不会造成内存泄漏。</p>\n<p>但如果因代码质量不高，滥用闭包，也会造成内存泄漏。</p>\n<h2 id=\"闭包面试题\"><a href=\"#闭包面试题\" class=\"headerlink\" title=\"闭包面试题\"></a>闭包面试题</h2><p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addCount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    count = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(count);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> fun1 = <span class=\"title function_\">addCount</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> fun2 = <span class=\"title function_\">addCount</span>();</span><br><span class=\"line\"><span class=\"title function_\">fun1</span>();</span><br><span class=\"line\"><span class=\"title function_\">fun2</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fun1</span>();</span><br><span class=\"line\"><span class=\"title function_\">fun2</span>();</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<p>代码解释：</p>\n<p>（1）fun1 和 fun2 这两个闭包函数是互不影响的，因此第一次调用时，count变量都是0，最终各自都输出1。</p>\n<p>（2）第二次调用时，由于闭包有记忆性，所以各自会在上一次的结果上再加1，因此输出2。</p>\n","text":"闭包的引入我们知道，变量根据作用域的不同分为两种：全局变量和局部变量。函数内部可以访问全局变量和局部变量。函数外部只能访问全局变量，不能访问局部变量。当函数执行完毕，本作用域内的局部变量会销毁。比如下面这样的代码：1<br>2<br>3<br>4<br>5<br>6<br>fun","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"19-数组的常见方法","slug":"JavaScript/19-数组的常见方法","date":"2023-02-15T12:06:59.432Z","updated":"2023-02-15T12:26:51.717Z","comments":true,"path":"api/articles/JavaScript/19-数组的常见方法.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180402_1116.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"数组的方法清单\"><a href=\"#数组的方法清单\" class=\"headerlink\" title=\"数组的方法清单\"></a>数组的方法清单</h2><h3 id=\"数组的类型相关\"><a href=\"#数组的类型相关\" class=\"headerlink\" title=\"数组的类型相关\"></a>数组的类型相关</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Array.isArray()</td>\n<td align=\"left\">判断是否为数组</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">toString()</td>\n<td align=\"left\">将数组转换为字符串</td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">join()</td>\n<td align=\"left\">将数组转换为字符串，返回结果为<strong>转换后的字符串</strong></td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">字符串的方法：split()</td>\n<td align=\"left\">将字符串按照指定的分隔符，组装为数组</td>\n<td align=\"left\">不会改变原字符串</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Array.from(arrayLike)</td>\n<td align=\"left\">将<strong>伪数组</strong>转化为<strong>真数组</strong></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Array.of(value1, value2, value3)</td>\n<td align=\"left\">创建数组：将<strong>一系列值</strong>转换成数组</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p>注意：</p>\n<p>（1）获取数组的长度是用<code>length</code>属性，不是方法。关于 <code>length</code>属性，详见上一篇文章。</p>\n<p>（2）<code>split()</code>是字符串的方法，不是数组的方法。</p>\n<h3 id=\"数组元素的添加和删除\"><a href=\"#数组元素的添加和删除\" class=\"headerlink\" title=\"数组元素的添加和删除\"></a>数组元素的添加和删除</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">push()</td>\n<td align=\"left\">向数组的<strong>最后面</strong>插入一个或多个元素，返回结果为新数组的<strong>长度</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">pop()</td>\n<td align=\"left\">删除数组中的<strong>最后一个</strong>元素，返回结果为<strong>被删除的元素</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">unshift()</td>\n<td align=\"left\">在数组<strong>最前面</strong>插入一个或多个元素，返回结果为新数组的<strong>长度</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">shift()</td>\n<td align=\"left\">删除数组中的<strong>第一个</strong>元素，返回结果为<strong>被删除的元素</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">splice()</td>\n<td align=\"left\">从数组中<strong>删除</strong>指定的一个或多个元素，返回结果为<strong>被删除元素组成的新数组</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">slice()</td>\n<td align=\"left\">从数组中<strong>提取</strong>指定的一个或多个元素，返回结果为<strong>新的数组</strong></td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">concat()</td>\n<td align=\"left\">合并数组：连接两个或多个数组，返回结果为<strong>新的数组</strong></td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">fill()</td>\n<td align=\"left\">填充数组：用固定的值填充数组，返回结果为<strong>新的数组</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n</tbody></table>\n<h3 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">reverse()</td>\n<td align=\"left\">反转数组，返回结果为<strong>反转后的数组</strong></td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">sort()</td>\n<td align=\"left\">对数组的元素,默认按照<strong>Unicode 编码</strong>，从小到大进行排序</td>\n<td align=\"left\">会改变原数组</td>\n</tr>\n</tbody></table>\n<h3 id=\"查找数组的元素\"><a href=\"#查找数组的元素\" class=\"headerlink\" title=\"查找数组的元素\"></a>查找数组的元素</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">indexOf(value)</td>\n<td align=\"left\">从前往后索引，检索一个数组中是否含有指定的元素</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">lastIndexOf(value)</td>\n<td align=\"left\">从后往前索引，检索一个数组中是否含有指定的元素</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">includes(item)</td>\n<td align=\"left\">数组中是否包含指定的内容</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">find(function())</td>\n<td align=\"left\">找出<strong>第一个</strong>满足「指定条件返回 true」的元素</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">findIndex(function())</td>\n<td align=\"left\">找出<strong>第一个</strong>满足「指定条件返回 true」的元素的 index</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">every()</td>\n<td align=\"left\">确保数组中的每个元素都满足「指定条件返回 true」，则停止遍历，此方法才返回 true</td>\n<td align=\"left\">全真才为真。要求每一项都返回 true，最终的结果才返回 true</td>\n</tr>\n<tr>\n<td align=\"left\">some()</td>\n<td align=\"left\">数组中只要有一个元素满足「指定条件返回 true」，则停止遍历，此方法就返回 true</td>\n<td align=\"left\">一真即真。只要有一项返回 true，最终的结果就返回 true</td>\n</tr>\n</tbody></table>\n<h3 id=\"遍历数组\"><a href=\"#遍历数组\" class=\"headerlink\" title=\"遍历数组\"></a>遍历数组</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">for 循环</td>\n<td align=\"left\">最传统的方式遍历数组，这个大家都懂</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">forEach()</td>\n<td align=\"left\">遍历数组，但需要兼容 IE8 以上</td>\n<td align=\"left\">不会改变原数组。forEach() 没有返回值。也就是说，它的返回值是 undefined</td>\n</tr>\n<tr>\n<td align=\"left\">for of</td>\n<td align=\"left\">遍历数组（ES6语法）</td>\n<td align=\"left\">不会改变原数组。另外，不要使用 for in 遍历数组</td>\n</tr>\n<tr>\n<td align=\"left\">map()</td>\n<td align=\"left\">对原数组中的每一项进行加工，将组成新的数组</td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">filter()</td>\n<td align=\"left\">过滤数组：返回结果是 true 的项，将组成新的数组，返回结果为<strong>新的数组</strong></td>\n<td align=\"left\">不会改变原数组</td>\n</tr>\n<tr>\n<td align=\"left\">reduce</td>\n<td align=\"left\">接收一个函数作为累加器，返回值是回调函数累计处理的结果</td>\n<td align=\"left\">比较复杂</td>\n</tr>\n</tbody></table>\n<h2 id=\"isArray-：判断是否为数组\"><a href=\"#isArray-：判断是否为数组\" class=\"headerlink\" title=\"isArray()：判断是否为数组\"></a>isArray()：判断是否为数组</h2><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(被检测的数组);</span><br></pre></td></tr></table></figure>\n\n<p>以前，我们会通过 <code>A instanceof B</code>来判断 A 是否属于 B 类型。但是在数组里，这种 instanceof 方法已经用的不多了，因为有 isArray()方法。</p>\n<h2 id=\"数组转换为字符串\"><a href=\"#数组转换为字符串\" class=\"headerlink\" title=\"数组转换为字符串\"></a>数组转换为字符串</h2><p>数组转为字符串，有三种方式。</p>\n<h3 id=\"方式1、toString\"><a href=\"#方式1、toString\" class=\"headerlink\" title=\"方式1、toString()\"></a>方式1、toString()</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 语法</span></span><br><span class=\"line\">字符串 = 数组.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 举例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>].<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 转换结果 result 为字符串 &#x27;1, 3, 5&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：把数组转换成字符串，每一项用英文逗号<code>,</code>分割。</p>\n<p>备注：大多数的数据类型都可以使用<code>.toString()</code>方法，将其转换为字符串。</p>\n<h3 id=\"方式-2\"><a href=\"#方式-2\" class=\"headerlink\" title=\"方式 2\"></a>方式 2</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 语法</span></span><br><span class=\"line\">字符串 = <span class=\"title class_\">String</span>(数组);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 举例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title class_\">String</span>([<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]); <span class=\"comment\">// 转换结果 result 为字符串 &#x27;1, 3, 5&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式-3：join-方法\"><a href=\"#方式-3：join-方法\" class=\"headerlink\" title=\"方式 3：join()方法\"></a>方式 3：join()方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串 = 数组.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;,&#x27;</span>); <span class=\"comment\">// 将数组转为字符串，每一项用 英文逗号 分隔</span></span><br></pre></td></tr></table></figure>\n\n<p>关于 join()方法的详细介绍，详见下一段。</p>\n<h2 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join()\"></a>join()</h2><p><code>join()</code>：将数组转换为字符串，返回结果为<strong>转换后的字符串</strong>（不会改变原来的数组）。</p>\n<p>补充：<code>join()</code>方法可以指定一个<strong>字符串</strong>作为参数，这个参数是元素之间的<strong>连接符</strong>；如果不指定连接符，则默认使用英文逗号<code>,</code> 作为连接符，此时和 <code>toString()的</code>效果是一致的。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的字符串 = 原数组.<span class=\"title function_\">join</span>(参数); <span class=\"comment\">// 参数选填</span></span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result1 = arr.<span class=\"title function_\">join</span>(); <span class=\"comment\">// 这里没有指定连接符，所以默认使用 , 作为连接符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;-&#x27;</span>); <span class=\"comment\">// 使用指定的字符串作为连接符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> arr); <span class=\"comment\">// 打印结果：object</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> result1); <span class=\"comment\">// 打印结果：string</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result1：&#x27;</span> + result1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result2：&#x27;</span> + result2);</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，最后三行的打印结果是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr =[<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>]</span><br><span class=\"line\">result1:a,b,c</span><br><span class=\"line\">result2:a-b-c</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"split\"><a href=\"#split\" class=\"headerlink\" title=\"split()\"></a>split()</h2><blockquote>\n<p>注意，<code>split()</code>是字符串的方法，不是数组的方法。</p>\n</blockquote>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的数组 = str.<span class=\"title function_\">split</span>(分隔符);</span><br></pre></td></tr></table></figure>\n\n<p>解释：通过指定的分隔符，将一个字符串拆分成一个<strong>数组</strong>。不会改变原字符串。</p>\n<p>备注：<code>split()</code>这个方法在实际开发中用得非常多。一般来说，从接口拿到的 json 数据中，经常会收到类似于<code>&quot;q, i, a, n&quot;</code>这样的字符串，前端需要将这个字符串拆分成<code>[&#39;q&#39;, &#39;i&#39;, &#39;a&#39;, &#39;n&#39;]</code>数组，这个时候<code>split()</code>方法就派上用场了。</p>\n<h2 id=\"Array-from-：将伪数组转换为真数组\"><a href=\"#Array-from-：将伪数组转换为真数组\" class=\"headerlink\" title=\"Array.from()：将伪数组转换为真数组\"></a>Array.from()：将伪数组转换为真数组</h2><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(arrayLike);</span><br></pre></td></tr></table></figure>\n\n<p><strong>作用</strong>：将<strong>伪数组</strong>或可遍历对象转换为<strong>真数组</strong>。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(name)); <span class=\"comment\">// 打印结果是数组：[&quot;q&quot;,&quot;i&quot;,&quot;a&quot;,&quot;n&quot;,&quot;g&quot;,&quot;u&quot;,&quot;y&quot;,&quot;i&quot;,&quot;h&quot;,&quot;a&quot;,&quot;o&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"伪数组与真数组的区别\"><a href=\"#伪数组与真数组的区别\" class=\"headerlink\" title=\"伪数组与真数组的区别\"></a>伪数组与真数组的区别</h3><p><strong>伪数组</strong>：包含 length 属性的对象或可迭代的对象。</p>\n<p>另外，伪数组的原型链中没有 Array.prototype，而真数组的原型链中有 Array.prototype。因此伪数组没有数组的一般方法，比如 pop()、join() 等方法。</p>\n<h3 id=\"伪数组举例\"><a href=\"#伪数组举例\" class=\"headerlink\" title=\"伪数组举例\"></a>伪数组举例</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> btnArray = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(btnArray);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(btnArray[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的布局中，有三个 button 标签，我们通过<code>getElementsByTagName</code>获取到的<code>btnArray</code>实际上是<strong>伪数组</strong>，并不是真实的数组：</p>\n<p><img src=\"http://img.smyhvae.com/20180402_1116.png\"></p>\n<p>既然<code>btnArray</code>是伪数组，它就不能使用数组的一般方法，否则会报错：</p>\n<p><img src=\"http://img.smyhvae.com/20180402_1121.png\"></p>\n<p>解决办法：采用<code>Array.from</code>方法将<code>btnArray</code>这个伪数组转换为真数组即可：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(btnArray);</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以使用数组的一般方法了：</p>\n<p><img src=\"http://img.smyhvae.com/20180402_1125.png\"></p>\n<h2 id=\"Array-of-：创建数组\"><a href=\"#Array-of-：创建数组\" class=\"headerlink\" title=\"Array.of()：创建数组\"></a>Array.of()：创建数组</h2><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(value1, value2, value3);</span><br></pre></td></tr></table></figure>\n\n<p><strong>作用</strong>：根据参数里的内容，创建数组。</p>\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">1</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr); <span class=\"comment\">// 打印结果是数组：[1, &quot;abc&quot;, true]</span></span><br></pre></td></tr></table></figure>\n\n<p>补充：<code>new Array()</code>和 <code>Array.of()</code>的区别在于：当参数只有一个时，前者表示数组的长度，后者表示数组中的内容。</p>\n<h2 id=\"数组元素的添加和删除-1\"><a href=\"#数组元素的添加和删除-1\" class=\"headerlink\" title=\"数组元素的添加和删除\"></a>数组元素的添加和删除</h2><h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push()\"></a>push()</h3><p><code>push()</code>：向数组的<strong>最后面</strong>插入一个或多个元素，返回结果为新数组的<strong>长度</strong>。会改变原数组，因为原数组变成了新数组。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新数组的长度 = 数组.<span class=\"title function_\">push</span>(元素);</span><br><span class=\"line\">新数组的长度 = 数组.<span class=\"title function_\">push</span>(元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span> ...);</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;王一&#x27;</span>, <span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"string\">&#x27;王三&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = arr.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;王四&#x27;</span>); <span class=\"comment\">// 末尾插入一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = arr.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"string\">&#x27;王六&#x27;</span>); <span class=\"comment\">// 末尾插入多个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr)); <span class=\"comment\">// 打印结果：[&quot;王一&quot;,&quot;王二&quot;,&quot;王三&quot;,&quot;王四&quot;,&quot;王五&quot;,&quot;王六&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop()\"></a>pop()</h3><p><code>pop()</code>：删除数组中的<strong>最后一个</strong>元素，返回结果为<strong>被删除的元素</strong>。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">被删除的元素 = 数组.<span class=\"title function_\">pop</span>();</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;王一&#x27;</span>, <span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"string\">&#x27;王三&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = arr.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr)); <span class=\"comment\">// 打印结果：[&quot;王一&quot;,&quot;王二&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：王三</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift()\"></a>unshift()</h3><p><code>unshift()</code>：在数组<strong>最前面</strong>插入一个或多个元素，返回结果为新数组的<strong>长度</strong>。会改变原数组，将原数组变成了新数组。插入元素后，其他元素的索引会依次调整。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新数组的长度 = 数组.<span class=\"title function_\">unshift</span>(元素);</span><br><span class=\"line\">新数组的长度 = 数组.<span class=\"title function_\">unshift</span>(元素<span class=\"number\">1</span>，元素<span class=\"number\">2.</span>..);</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;王一&#x27;</span>, <span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"string\">&#x27;王三&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = arr.<span class=\"title function_\">unshift</span>(<span class=\"string\">&#x27;王四&#x27;</span>); <span class=\"comment\">// 最前面插入一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = arr.<span class=\"title function_\">unshift</span>(<span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"string\">&#x27;王六&#x27;</span>); <span class=\"comment\">// 最前面插入多个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr)); <span class=\"comment\">// 打印结果：[&quot;王五&quot;,&quot;王六&quot;,&quot;王四&quot;,&quot;王一&quot;,&quot;王二&quot;,&quot;王三&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：4</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift()\"></a>shift()</h3><p><code>shift()</code>：删除数组中的<strong>第一个</strong>元素，返回结果为<strong>被删除的元素</strong>。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">被删除的元素 = 数组.<span class=\"title function_\">shift</span>();</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;王一&#x27;</span>, <span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"string\">&#x27;王三&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = arr.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr)); <span class=\"comment\">// 打印结果：[&quot;王二&quot;,&quot;王三&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：王一</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice()\"></a>splice()</h3><p><code>splice()</code>：从数组中<strong>删除</strong>指定的一个或多个元素，返回结果为<strong>被删除元素组成的新数组</strong>（会改变原来的数组）。</p>\n<p>备注：该方法会改变原数组，会将指定元素从原数组中删除；被删除的元素会封装到一个新的数组中返回。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新数组 = 原数组.<span class=\"title function_\">splice</span>(起始索引index);</span><br><span class=\"line\"></span><br><span class=\"line\">新数组 = 原数组.<span class=\"title function_\">splice</span>(起始索引index, 需要删除的个数);</span><br><span class=\"line\"></span><br><span class=\"line\">新数组 = 原数组.<span class=\"title function_\">splice</span>(起始索引index, 需要删除的个数, 新的元素<span class=\"number\">1</span>, 新的元素<span class=\"number\">2.</span>..);</span><br></pre></td></tr></table></figure>\n\n<p>上方语法中，第三个及之后的参数，表示：删除元素之后，向原数组中添加新的元素，这些元素将会自动插入到起始位置索引的前面。也可以理解成：删除了哪些元素，就在那些元素的所在位置补充新的内容。</p>\n<p><code>slice()</code>方法和<code>splice()</code>方法很容易搞混，请一定要注意区分。</p>\n<p>举例 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = arr1.<span class=\"title function_\">splice</span>(<span class=\"number\">1</span>); <span class=\"comment\">//从第index为1的位置开始，删除元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr1：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result1：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result1));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1：[&quot;a&quot;]</span><br><span class=\"line\">result1：[&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>举例 2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = arr2.<span class=\"title function_\">splice</span>(-<span class=\"number\">2</span>); <span class=\"comment\">//删除最后两个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr2：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result2：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result2));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr2：[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]</span><br><span class=\"line\">result2：[&quot;e&quot;,&quot;f&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>举例 3：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr3 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result3 = arr3.<span class=\"title function_\">splice</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>); <span class=\"comment\">//从第index为1的位置开始删除元素，一共删除三个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr3：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr3));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result3：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result3));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr3：[&quot;a&quot;,&quot;e&quot;,&quot;f&quot;]</span><br><span class=\"line\">result3：[&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>举例4：（删除指定元素，用得很多）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr4 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>];</span><br><span class=\"line\">arr4.<span class=\"title function_\">splice</span>(arr4.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>), <span class=\"number\">1</span>); <span class=\"comment\">// 删除数组中的&#x27;c&#x27;这个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr4：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr4));</span><br></pre></td></tr></table></figure>\n\n\n<p>举例 5：（<strong>第三个参数</strong>的用法）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr5 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//从第index为1的位置开始删除元素,一共删除三个元素。并且在index=1的位置前面追加两个元素&quot;千古壹号&quot;、&quot;vae&quot;（其实就是将index为1的元素改为&quot;千古壹号&quot;，index为2的元素改为&quot;vae&quot;）。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result5 = arr5.<span class=\"title function_\">splice</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;vae&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr5：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr5));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result5：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result5));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr5：[<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;千古壹号&quot;</span>,<span class=\"string\">&quot;vae&quot;</span>,<span class=\"string\">&quot;e&quot;</span>,<span class=\"string\">&quot;f&quot;</span>]</span><br><span class=\"line\">result5：[<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;d&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<p>我们再看个类似的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 需求：针对数组 [a, b, c, d] 将索引为1的数据修改为e, 索引为2的修改为f</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写法1：普通写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [a, b, c ,d];</span><br><span class=\"line\">arr[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;e&#x27;</span>;</span><br><span class=\"line\">arr[<span class=\"number\">2</span>] = <span class=\"string\">&#x27;f&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写法2：通过 splice() 实现</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [a, b, c ,d];</span><br><span class=\"line\">arr.<span class=\"title function_\">splice</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h3><p><code>concat()</code>：连接两个或多个数组，返回结果为<strong>新的数组</strong>。不会改变原数组。<code>concat()</code>方法的作用是<strong>数组合并</strong>。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新数组 = 数组<span class=\"number\">1.</span><span class=\"title function_\">concat</span>(数组<span class=\"number\">2</span>, 数组<span class=\"number\">3</span> ...);</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3 = [<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;vae&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result1 = arr1.<span class=\"title function_\">concat</span>(arr2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = arr2.<span class=\"title function_\">concat</span>(arr1, arr3);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr1 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr2 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr3 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr3));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result1 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result2 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result2));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">arr2 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">arr3 = [<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;vae&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">result1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">result2 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;vae&#x27;</span>];</span><br></pre></td></tr></table></figure>\n\n<p>从打印结果中可以看到，原数组并没有被修改。</p>\n<p><strong>数组合并的另一种方式</strong>：</p>\n<p>我们可以使用<code>...</code>这种扩展运算符，将两个数组进行合并。举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, ...arr1];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result)); <span class=\"comment\">// 打印结果：[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,1,2,3]</span></span><br></pre></td></tr></table></figure>\n\n<p>备注：数组不能使用加号进行拼接。如果使用加号进行拼接会先转换成字符串再拼接。</p>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice()\"></a>slice()</h3><p><code>slice()</code>：从数组中<strong>提取</strong>指定的一个或者多个元素，返回结果为<strong>新的数组</strong>（不会改变原来的数组）。</p>\n<p>备注：该方法不会改变原数组，而是将截取到的元素封装到一个新数组中返回。</p>\n<p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新数组 = 原数组.<span class=\"title function_\">slice</span>(开始位置的索引);</span><br><span class=\"line\"></span><br><span class=\"line\">新数组 = 原数组.<span class=\"title function_\">slice</span>(开始位置的索引, 结束位置的索引);  <span class=\"comment\">//注意：提取的元素中，包含开始位置，不包含结束位置</span></span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result1 = arr.<span class=\"title function_\">slice</span>(); <span class=\"comment\">// 不加参数时，则获取所有的元素。相当于数组的整体赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = arr.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>); <span class=\"comment\">// 从第二个值开始提取，直到末尾</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result3 = arr.<span class=\"title function_\">slice</span>(-<span class=\"number\">2</span>); <span class=\"comment\">// 提取最后两个元素</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result4 = arr.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 提取从第二个到第四个之间的元素（不包括第四个元素）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result5 = arr.<span class=\"title function_\">slice</span>(<span class=\"number\">4</span>, <span class=\"number\">2</span>); <span class=\"comment\">// 空</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result1:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result3:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result3));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result4:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result4));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result5:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result5));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">arr</span>: [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"attr\">result1</span>: [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"attr\">result2</span>: [<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"attr\">result3</span>: [<span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"attr\">result4</span>: [<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>];</span><br><span class=\"line\"><span class=\"attr\">result5</span>: [];</span><br></pre></td></tr></table></figure>\n\n<p><strong>补充</strong>：</p>\n<p>很多前端开发人员会用 slice()将伪数组，转化为真数组。写法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方式1</span></span><br><span class=\"line\">array = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(arrayLike);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式2</span></span><br><span class=\"line\">array = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(arrayLike);</span><br></pre></td></tr></table></figure>\n\n<p>ES6 看不下去这种蹩脚的转化方法，于是出了一个新的 API：（专门用来将伪数组转化成真数组）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(arrayLike);</span><br></pre></td></tr></table></figure>\n\n<p>关于这个 API 的详细介绍，上面的内容已经讲了，请往前翻。</p>\n<h3 id=\"fill\"><a href=\"#fill\" class=\"headerlink\" title=\"fill()\"></a>fill()</h3><p><code>fill()</code>：用一个固定值填充数组，返回结果为<strong>新的数组</strong>。会改变原数组。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用一个固定值填充数组。数组里的每个元素都会被这个固定值填充</span></span><br><span class=\"line\">新数组 = 数组.<span class=\"title function_\">fill</span>(固定值);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从 startIndex 开始的数组元素，用固定值填充</span></span><br><span class=\"line\">新数组 = 数组.<span class=\"title function_\">fill</span>(固定值, startIndex);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从 startIndex 到 endIndex 之间的元素（包左不包右），用固定值填充</span></span><br><span class=\"line\">新数组 = 数组.<span class=\"title function_\">fill</span>(固定值, startIndex, endIndex);</span><br></pre></td></tr></table></figure>\n\n<p>举例1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个长度为4的空数组，然后用 &#x27;f&#x27; 来填充这个空数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>(<span class=\"number\">4</span>).<span class=\"title function_\">fill</span>(<span class=\"string\">&#x27;f&#x27;</span>)); <span class=\"comment\">// [&#x27;f&#x27;, &#x27;f&#x27;, &#x27;f,&#x27; &#x27;f&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将现有数组的每一个元素都进行填充</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>].<span class=\"title function_\">fill</span>(<span class=\"string\">&#x27;f&#x27;</span>)); <span class=\"comment\">// [&#x27;f&#x27;, &#x27;f&#x27;, &#x27;f,&#x27; &#x27;f&#x27;]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>举例2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 指定位置进行填充</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = arr1.<span class=\"title function_\">fill</span>(<span class=\"string\">&#x27;f&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1); <span class=\"comment\">// [&#x27;a&#x27;, &#x27;f&#x27;, &#x27;f,&#x27; &#x27;d&#x27;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr2); <span class=\"comment\">// [&#x27;a&#x27;, &#x27;f&#x27;, &#x27;f,&#x27; &#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse()\"></a>reverse()</h2><p><code>reverse()</code>：反转数组，返回结果为<strong>反转后的数组</strong>（会改变原来的数组）。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">反转后的数组 = 数组.<span class=\"title function_\">reverse</span>();</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">reverse</span>(); <span class=\"comment\">// 将数组 arr 进行反转</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr =[&quot;f&quot;,&quot;e&quot;,&quot;d&quot;,&quot;c&quot;,&quot;b&quot;,&quot;a&quot;]</span><br><span class=\"line\">result =[&quot;f&quot;,&quot;e&quot;,&quot;d&quot;,&quot;c&quot;,&quot;b&quot;,&quot;a&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>从打印结果可以看出，原来的数组已经被改变了。</p>\n<h2 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h2><blockquote>\n<p>sort()方法需要好好理解。</p>\n</blockquote>\n<p><code>sort()</code>：对数组的元素进行从小到大来排序（会改变原来的数组）。</p>\n<h3 id=\"无参时\"><a href=\"#无参时\" class=\"headerlink\" title=\"无参时\"></a>无参时</h3><p>如果在使用 sort() 方法时不带参，则默认按照元素的<strong>Unicode 编码</strong>，从小到大进行排序。</p>\n<p><strong>举例 1</strong>：（当数组中的元素为字符串时）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr1.<span class=\"title function_\">sort</span>(); <span class=\"comment\">// 将数组 arr1 进行排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr1 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1 =[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]</span><br><span class=\"line\">result =[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>从上方的打印结果中，我们可以看到，sort 方法会改变原数组，而且方法的返回值也是同样的结果。</p>\n<p><strong>举例 2</strong>：（当数组中的元素为数字时）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr2.<span class=\"title function_\">sort</span>(); <span class=\"comment\">// 将数组 arr2 进行排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr2 =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr2 =[1,11,2,3,4,5]</span><br><span class=\"line\">result =[1,11,2,3,4,5]</span><br></pre></td></tr></table></figure>\n\n<p>上方的打印结果中，你会发现，使用 sort() 排序后，数字<code>11</code>竟然在数字<code>2</code>的前面。这是为啥呢？因为上面讲到了，<code>sort()</code>方法是按照<strong>Unicode 编码</strong>进行排序的。</p>\n<p>那如果我想让 arr2 里的数字，完全按照从小到大排序，怎么操作呢？继续往下看。</p>\n<h3 id=\"带参时，自定义排序规则\"><a href=\"#带参时，自定义排序规则\" class=\"headerlink\" title=\"带参时，自定义排序规则\"></a>带参时，自定义排序规则</h3><p>如果在 sort()方法中带参，我们就可以<strong>自定义</strong>排序规则。具体做法如下：</p>\n<p>我们可以在 sort()的参数中添加一个回调函数，来指定排序规则。回调函数中需要定义两个形参，JS将会分别使用数组中的元素作为实参去调用回调函数。</p>\n<p>JS根据回调函数的返回值来决定元素的排序：（重要）</p>\n<ul>\n<li><p>如果返回一个大于 0 的值，则元素会交换位置</p>\n</li>\n<li><p><strong>如果返回一个小于 0 的值，则不交换位置</strong>。</p>\n</li>\n<li><p>如果返回一个等于 0 的值，则认为两个元素相等，则不交换位置</p>\n</li>\n</ul>\n<p>如果只是看上面的文字，可能不太好理解，我们来看看下面的例子，你肯定就能明白。</p>\n<h3 id=\"举例：将数组中的数字按照从小到大排序\"><a href=\"#举例：将数组中的数字按照从小到大排序\" class=\"headerlink\" title=\"举例：将数组中的数字按照从小到大排序\"></a>举例：将数组中的数字按照从小到大排序</h3><p><strong>写法 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义排序规则</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a &gt; b) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果 a 大于 b，则交换 a 和 b 的位置</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a &lt; b) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果 a 小于 b，则位置不变</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果 a 等于 b，则位置不变</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>];</span><br><span class=\"line\">result = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">11</span>];</span><br></pre></td></tr></table></figure>\n\n<p>上方代码的写法太啰嗦了，其实也可以简化为如下写法：</p>\n<p><strong>写法 2</strong>：（ES5写法）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义排序规则</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b; <span class=\"comment\">// 升序排列</span></span><br><span class=\"line\">    <span class=\"comment\">// return b - a; // 降序排列</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果不变。</p>\n<p>上方代码还可以写成 ES6 的形式，也就是将 function 改为箭头函数，其写法如下。</p>\n<p><strong>写法 3</strong>：（ES6写法，箭头函数）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义排序规则</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b; <span class=\"comment\">// 升序排列</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>上方代码，因为函数体内只有一句话，所以可以去掉 return 语句，继续简化为如下写法。</p>\n<p><strong>写法 4</strong>：（推荐写法）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义排序规则：升序排列</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;result =&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(result));</span><br></pre></td></tr></table></figure>\n\n<p>上面的各种写法中，写法 4 是我们在实战开发中用得最多的。</p>\n<p>为了确保代码的简洁优雅，接下来的讲解中，凡是涉及到函数，我们将尽量采用 ES6 中的箭头函数来写。</p>\n<h3 id=\"举例：将数组从小到大排序\"><a href=\"#举例：将数组从小到大排序\" class=\"headerlink\" title=\"举例：将数组从小到大排序\"></a>举例：将数组从小到大排序</h3><p>将数组从小到大排序，这个例子很常见。但在实际开发中，总会有一些花样。</p>\n<p>下面这段代码，在实际开发中，经常用到，一定要掌握。完整代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> dataList = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;品牌鞋子，高品质低价入手&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">publishTime</span>: <span class=\"number\">200</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;不是很贵，但是很暖&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">publishTime</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;无法拒绝的美食，跟我一起吃&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">publishTime</span>: <span class=\"number\">300</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 排序前的数组：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(dataList));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 将dataList 数组，按照 publishTime 字段，从小到大排序。（会改变原数组）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            dataList.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(a.<span class=\"property\">publishTime</span>) - <span class=\"built_in\">parseInt</span>(b.<span class=\"property\">publishTime</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 排序后的数组：&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(dataList));</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qianguyihao 排序前的数组：[</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;品牌鞋子，高品质低价入手&quot;,&quot;publishTime&quot;:200&#125;,</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;不是很贵，但是很暖&quot;,&quot;publishTime&quot;:100&#125;,</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;无法拒绝的美食，跟我一起吃&quot;,&quot;publishTime&quot;:300&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">qianguyihao 排序后的数组：[</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;不是很贵，但是很暖&quot;,&quot;publishTime&quot;:100&#125;,</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;品牌鞋子，高品质低价入手&quot;,&quot;publishTime&quot;:200&#125;,</span><br><span class=\"line\">    &#123;&quot;title&quot;:&quot;无法拒绝的美食，跟我一起吃&quot;,&quot;publishTime&quot;:300&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，肯定有人会问： publishTime 字段已经是 int 类型了，为啥在排序前还要做一次 parseInt() 转换？这是因为，这种数据，一般是后台接口返回给前端的，数据可能是 int 类型、也可能是字符串类型，所以前端还是统一先做一下 partInt() 比较保险。这是一种良好的工作习惯和风险意识。</p>\n<h2 id=\"indexOf-和-lastIndexOf-：获取元素的索引\"><a href=\"#indexOf-和-lastIndexOf-：获取元素的索引\" class=\"headerlink\" title=\"indexOf() 和 lastIndexOf()：获取元素的索引\"></a>indexOf() 和 lastIndexOf()：获取元素的索引</h2><p><strong>语法 1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素的索引 = 数组.<span class=\"title function_\">indexOf</span>(想要查询的元素);</span><br><span class=\"line\"></span><br><span class=\"line\">元素的索引 = 数组.<span class=\"title function_\">lastIndexOf</span>(想要查询的元素);</span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>indexOf()</code> 是从左往右查找元素的位置。同理，<code>lastIndexOf()</code>是从右往左寻找。</p>\n<p><strong>解释</strong>：可以检索一个数组中是否含有指定的元素。如果数组中含有该元素，则会返回其<strong>第一次出现</strong>的索引，并立即停止查找；如果没有找到指定的内容，则返回 -1。</p>\n<p>这个方法的作用：</p>\n<ul>\n<li><p>如果找到了指定的元素，就返回元素对应的位置。</p>\n</li>\n<li><p>如果没有找到指定的元素，就会返回-1。</p>\n</li>\n</ul>\n<p><strong>注意</strong>：<code>indexOf()</code>在检索时，是严格类型约束，类似于<code>===</code>。</p>\n<p><strong>举例</strong> ：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;c&#x27;</span>)); <span class=\"comment\">//从前往后，找第一个&quot;c&quot;在哪个位置</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;d&#x27;</span>)); <span class=\"comment\">//从后往前，找第一个&quot;d&quot;在哪个位置</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">indexOf</span>(<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1</span><br></pre></td></tr></table></figure>\n\n<p><strong>语法 2</strong>：</p>\n<p>这个方法还可以指定第二个参数，用来指定查找的<strong>起始位置</strong>。语法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引值 = 数组.<span class=\"title function_\">indexOf</span>(想要查找的元素, [查找的起始位置]);</span><br></pre></td></tr></table></figure>\n\n<p>这个方法的第二个参数非常巧妙，数据结构与算法的面试题中，时常出现。</p>\n<p>举例：（两个参数时，需要特别注意）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;q&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;n&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;u&#x27;</span>, <span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>, <span class=\"string\">&#x27;h&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>];</span><br><span class=\"line\">result = str.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标为3的位置开始查找 &#x27;a&#x27;这个元素 【重要】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：9</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，<code>indexOf()</code>方法中携带了两个参数，具体解释请看注释。</p>\n<h2 id=\"includes\"><a href=\"#includes\" class=\"headerlink\" title=\"includes()\"></a>includes()</h2><p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔值 = arr.<span class=\"title function_\">includes</span>(想要查找的元素, [position]);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：判断一个数组中是否包含指定的元素。如果是，则会返回 true；否则返回 false。</p>\n<p>参数中的 <code>position</code>：如果不指定，则默认为0；如果指定，则规定了检索的起始位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">includes</span>(<span class=\"number\">12</span>)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">includes</span>(<span class=\"number\">20</span>)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">includes</span>(<span class=\"number\">11</span>, <span class=\"number\">1</span>)); <span class=\"comment\">// 打印结果：false</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"find-和findIndex\"><a href=\"#find-和findIndex\" class=\"headerlink\" title=\"find()和findIndex()\"></a>find()和findIndex()</h2><h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find()\"></a>find()</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> itemResult = arr.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>作用</strong>：找出<strong>第一个</strong>满足「指定条件返回 true」的元素，并立即停止查找；如果没找到，则返回 undefined。</p>\n<p>备注：一旦找到符合条件的第一个元素，将不再继续往下遍历。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr.<span class=\"title function_\">find</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt; <span class=\"number\">4</span>; <span class=\"comment\">//遍历数组arr，一旦发现有第一个元素大于4，就把这个元素返回</span></span><br><span class=\"line\">  \t<span class=\"comment\">// 上面这行代码是简写方式；完整写法也可以这样写：ccif (item &gt; 4) &#123;return true&#125;</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">//打印结果：5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"findIndex\"><a href=\"#findIndex\" class=\"headerlink\" title=\"findIndex()\"></a>findIndex()</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> indexResult = arr.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>作用</strong>：找出<strong>第一个</strong>满足「指定条件返回 true」的元素的索引，并立即停止遍历；如果没找到，则返回 -1。</p>\n<p>举例：</p>\n<blockquote>\n<p>我们直接把上面find 方法的代码示例改成 findIndex，看看效果。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = arr.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt; <span class=\"number\">4</span>; <span class=\"comment\">//遍历数组arr，一旦发现有第一个元素大于4，就把这个元素的index返回</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">//打印结果：3</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"every-和some\"><a href=\"#every-和some\" class=\"headerlink\" title=\"every()和some()\"></a>every()和some()</h2><h3 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every()\"></a>every()</h3><p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> boolResult = arr.<span class=\"title function_\">every</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>every()</code>：对数组中每一项运行回调函数，如果都返回 true，every 就返回 true；如果有一项返回 false，则停止遍历，此方法返回 false。</p>\n<p>注意：every()方法的返回值是 boolean 值，参数是回调函数。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"string\">&#x27;千古&#x27;</span>, <span class=\"string\">&#x27;宿敌&#x27;</span>, <span class=\"string\">&#x27;南山忆&#x27;</span>, <span class=\"string\">&#x27;素颜&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> bool1 = arr1.<span class=\"title function_\">every</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.<span class=\"property\">length</span> &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(bool1); <span class=\"comment\">//输出结果：false。只要有一个元素的长度是超过两个字符的，就返回false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"string\">&#x27;千古&#x27;</span>, <span class=\"string\">&#x27;宿敌&#x27;</span>, <span class=\"string\">&#x27;南山&#x27;</span>, <span class=\"string\">&#x27;素颜&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> bool2 = arr2.<span class=\"title function_\">every</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.<span class=\"property\">length</span> &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(bool2); <span class=\"comment\">//输出结果：true。因为每个元素的长度都是两个字符。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some()\"></a>some()</h3><p><code>some()</code>：对数组中每一个元素运行回调函数，只要有一个元素返回 true，则停止遍历，此方法返回 true。</p>\n<p>注意：some()方法的返回值是 boolean 值。</p>\n<h3 id=\"every-和-some-的使用场景\"><a href=\"#every-和-some-的使用场景\" class=\"headerlink\" title=\"every() 和 some() 的使用场景\"></a>every() 和 some() 的使用场景</h3><p>every() 和 some() 这两个方法，初学者很容易搞混。要怎么区分呢？你可以这样记：</p>\n<ul>\n<li><p>every()：全部真，才为真。当你需要让数组中的每一个元素都满足指定条件时，那就使用 every()。</p>\n</li>\n<li><p>some()：一个真，则为真，点到为止。数组中只要有一个元素满足指定条件时，就停止遍历。那就使用 some()。</p>\n</li>\n</ul>\n<h2 id=\"valueOf-：返回数组本身\"><a href=\"#valueOf-：返回数组本身\" class=\"headerlink\" title=\"valueOf()：返回数组本身\"></a>valueOf()：返回数组本身</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组本身 = 数组.<span class=\"title function_\">valueOf</span>();</span><br></pre></td></tr></table></figure>\n\n<p>这个方法的意义不大。因为我们直接写数组对象的名字，就已经是数组本身了。</p>\n<h2 id=\"遍历数组-1\"><a href=\"#遍历数组-1\" class=\"headerlink\" title=\"遍历数组\"></a>遍历数组</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p><strong>遍历数组</strong>：获取并操作数组中的每一个元素，然后得到想要的返回结果。在实战开发中使用得非常频繁。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5语法</span></span><br><span class=\"line\">数组/boolean/无 = 数组.<span class=\"property\">forEach</span>/map/<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index, arr</span>) &#123;</span><br><span class=\"line\">   相关代码和返回值；</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6语法</span></span><br><span class=\"line\">数组/boolean/无 = 数组.<span class=\"property\">forEach</span>/map/<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">   相关代码和返回值；</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>有了上面这些方法（其实远不止这几个），就可以替代 for 循环了。</p>\n<p>我们先来看看传统的for循环，然后依次介绍其他方法。</p>\n<h3 id=\"for-循环遍历\"><a href=\"#for-循环遍历\" class=\"headerlink\" title=\"for 循环遍历\"></a>for 循环遍历</h3><p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"string\">&#x27;vae&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[i]); <span class=\"comment\">// arr[i]代表的是数组中的每一个元素i</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">千古壹号</span><br><span class=\"line\">许嵩</span><br><span class=\"line\">vae</span><br><span class=\"line\"></span><br><span class=\"line\">[&quot;千古壹号&quot;,&quot;许嵩&quot;,&quot;vae&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach()\"></a>forEach()</h2><blockquote>\n<p><code>forEach()</code> 这种遍历方法只支持 IE8 以上的浏览器。IE8 及以下的浏览器均不支持该方法。所以如果需要兼容 IE8，则不要使用 forEach，改为使用 for 循环来遍历即可。</p>\n</blockquote>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5语法</span></span><br><span class=\"line\">arr.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">currentItem, currentIndex, currentArray</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(currentValue);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6语法</span></span><br><span class=\"line\">arr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(currentValue);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>forEach()方法需要一个函数作为参数。这种函数，是由我们创建但是不由我们调用的，我们称为回调函数。</p>\n<p>数组中有几个元素，该回调函数就会执行几次。</p>\n<p>回调函数中传递三个参数：</p>\n<ul>\n<li><p>参数1：当前正在遍历的元素</p>\n</li>\n<li><p>参数2：当前正在遍历的元素的索引</p>\n</li>\n<li><p>参数3：正在遍历的数组</p>\n</li>\n</ul>\n<p>注意，forEach() 没有返回值。也可以理解成：forEach() 的返回值是 undefined。如果你尝试 <code>newArray = currentArray.forEach()</code>这种方式来接收，是达不到效果的。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myArr = [<span class=\"string\">&#x27;王一&#x27;</span>, <span class=\"string\">&#x27;王二&#x27;</span>, <span class=\"string\">&#x27;王三&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">myArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;item:&#x27;</span> + currentItem);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;index:&#x27;</span> + currentIndex);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(currentArray));</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;----------&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">item</span>:王一</span><br><span class=\"line\"><span class=\"attr\">index</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">arr</span>:[<span class=\"string\">&quot;王一&quot;</span>,<span class=\"string\">&quot;王二&quot;</span>,<span class=\"string\">&quot;王三&quot;</span>]</span><br><span class=\"line\">----------</span><br><span class=\"line\"><span class=\"attr\">item</span>:王二</span><br><span class=\"line\"><span class=\"attr\">index</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">arr</span>:[<span class=\"string\">&quot;王一&quot;</span>,<span class=\"string\">&quot;王二&quot;</span>,<span class=\"string\">&quot;王三&quot;</span>]</span><br><span class=\"line\">----------</span><br><span class=\"line\"><span class=\"attr\">item</span>:王三</span><br><span class=\"line\"><span class=\"attr\">index</span>:<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">arr</span>:[<span class=\"string\">&quot;王一&quot;</span>,<span class=\"string\">&quot;王二&quot;</span>,<span class=\"string\">&quot;王三&quot;</span>]</span><br><span class=\"line\">----------</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"forEach-会不会改变原数组？\"><a href=\"#forEach-会不会改变原数组？\" class=\"headerlink\" title=\"forEach() 会不会改变原数组？\"></a>forEach() 会不会改变原数组？</h3><p>forEach() 会不会改变原数组？关于这个问题，大部分人会搞错。我们来看看下面的代码。</p>\n<p><strong>1、数组的元素是基本数据类型</strong>：（无法改变原数组）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> numArr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">numArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    item = item * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(numArr)); <span class=\"comment\">// 打印结果：[1, 2, 3]</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这段代码，你可要看仔细了，打印结果是 <code>[1, 2, 3]</code>，不是 <code>[2, 4, 6]</code>。</p>\n<p><strong>2、数组的元素是引用数据类型</strong>：（直接修改整个元素对象时，无法改变原数组）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> objArr = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">objArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    item = &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;邓紫棋&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">age</span>: <span class=\"string\">&#x27;29&#x27;</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(objArr)); <span class=\"comment\">// 打印结果：[&#123;&quot;name&quot;:&quot;千古壹号&quot;,&quot;age&quot;:20&#125;,&#123;&quot;name&quot;:&quot;许嵩&quot;,&quot;age&quot;:30&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3、数组的元素是引用数据类型</strong>：（修改元素对象里的某个属性时，可以改变原数组）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> objArr = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">objArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    item.<span class=\"property\">name</span> = <span class=\"string\">&#x27;邓紫棋&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(objArr)); <span class=\"comment\">// 打印结果：[&#123;&quot;name&quot;:&quot;邓紫棋&quot;,&quot;age&quot;:28&#125;,&#123;&quot;name&quot;:&quot;邓紫棋&quot;,&quot;age&quot;:30&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你需要通过 forEach 修改原数组，建议用 forEach 里面的参数 2 和参数 3 来做，具体请看下面的标准做法。</p>\n<p><strong>4、forEach() 通过参数 2、参数 3 修改原数组</strong>：（标准做法，一定要看）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1、数组的元素是基本数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> numArr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">numArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    arr[index] = arr[index] * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(numArr)); <span class=\"comment\">// 打印结果：[2,4,6]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2、数组的元素是引用数据类型时，直接修改对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> objArr = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">34</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">objArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    arr[index] = &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">age</span>: <span class=\"string\">&#x27;10&#x27;</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(objArr)); <span class=\"comment\">// 打印结果：[&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;10&quot;&#125;,&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;10&quot;&#125;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3、数组的元素是引用数据类型时，修改对象的某个属性</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> objArr2 = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">34</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">objArr2.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    arr[index].<span class=\"property\">name</span> = <span class=\"string\">&#x27;小明&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(objArr2)); <span class=\"comment\">// 打印结果：[&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:28&#125;,&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:34&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>总结</strong>：</p>\n<p>如果纯粹只是遍历数组，那么，可以用 forEach() 方法。但是，如果你想在遍历数组的同时，去改变数组里的元素内容，那么，最好是用 map() 方法来做，不要用 forEach()方法，避免出现一些低级错误。</p>\n<p>参考链接：</p>\n<ul>\n<li><p><a href=\"https://juejin.im/post/5d526a4ae51d4557dc774e7d\">forEach 到底可以改变原数组吗？</a></p>\n</li>\n<li><p><a href=\"https://lhajh.github.io/js/2018/05/26/Does-forEach-change-the-original-array-value.html\">forEach 会改变原数组值吗</a></p>\n</li>\n</ul>\n<h2 id=\"for-of\"><a href=\"#for-of\" class=\"headerlink\" title=\"for of\"></a>for of</h2><p>ES6语法推出了 for of，可用于循环遍历数组。</p>\n<h3 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不要使用-for-in-遍历数组\"><a href=\"#不要使用-for-in-遍历数组\" class=\"headerlink\" title=\"不要使用 for in 遍历数组\"></a>不要使用 for in 遍历数组</h3><p>for in 是专门用于遍历对象的。对象的属性是无序的（而数组的元素有顺序），for in循环就是专门用于遍历无序的对象。所以，不要用 for in 遍历数组。</p>\n<p>for in语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key);</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">key</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map()\"></a>map()</h2><h3 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5语法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> newArr =  arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">currentItem, currentIndex, currentArray</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newItem;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6语法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newItem;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>解释：对数组中每一项运行回调函数，返回该函数的结果，组成的新数组（返回的是<strong>加工后</strong>的新数组）。不会改变原数组。</p>\n<p>作用：对数组中的每一项进行加工。</p>\n<p><strong>举例 1</strong>：（拷贝的过程中改变数组元素的值）</p>\n<p>有一个已知的数组 arr1，我要求让 arr1 中的每个元素的值都加 10，这里就可以用到 map 方法。代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = arr1.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> item + <span class=\"number\">10</span>; <span class=\"comment\">//让arr1中的每个元素加10</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr2); <span class=\"comment\">// 数组 arr2 的值：[11, 13, 16, 12, 15, 16]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 2</strong>：【重要案例，实际开发中经常用到】</p>\n<p>将 A 数组中某个属性的值，存储到 B 数组中。代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"string\">&#x27;28&#x27;</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"string\">&#x27;32&#x27;</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将数组 arr1 中的 name 属性，存储到 数组 arr2 中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = arr1.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">name</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将数组 arr1 中的 name、age这两个属性，改一下“键”的名字，存储到 arr3中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3 = arr1.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">myName</span>: item.<span class=\"property\">name</span>,</span><br><span class=\"line\">    <span class=\"attr\">myAge</span>: item.<span class=\"property\">age</span>,</span><br><span class=\"line\">&#125;)); <span class=\"comment\">// 将数组 arr1 中的 name 属性，存储到 数组 arr2 中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr1:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;arr3:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr3));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1:[&#123;&quot;name&quot;:&quot;千古壹号&quot;,&quot;age&quot;:&quot;28&quot;&#125;,&#123;&quot;name&quot;:&quot;许嵩&quot;,&quot;age&quot;:&quot;32&quot;&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">arr2:[&quot;千古壹号&quot;,&quot;许嵩&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">arr3:[&#123;&quot;myName&quot;:&quot;千古壹号&quot;,&quot;myAge&quot;:&quot;28&quot;&#125;,&#123;&quot;myName&quot;:&quot;许嵩&quot;,&quot;myAge&quot;:&quot;32&quot;&#125;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>map 的应用场景，主要就是以上两种。</p>\n<h3 id=\"map-方法会不会改变原数组？\"><a href=\"#map-方法会不会改变原数组？\" class=\"headerlink\" title=\"map() 方法会不会改变原数组？\"></a>map() 方法会不会改变原数组？</h3><p>答案：不一定。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;qianguyihao1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">22</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;qianguyihao2&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">23</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">arr.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  item.<span class=\"property\">name</span> = <span class=\"string\">&quot;haha&quot;</span>; <span class=\"comment\">// 修改 item 里的某个属性</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;&quot;name&quot;:&quot;haha&quot;,&quot;age&quot;:22&#125;,&#123;&quot;name&quot;:&quot;haha&quot;,&quot;age&quot;:23&#125;]</span><br></pre></td></tr></table></figure>\n\n<p>总结：map方法如果是修改整个item的值，则不会改变原数组。但如果是修改 item 里面的某个属性，那就会改变原数组。</p>\n<h2 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter()\"></a>filter()</h2><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">currentItem, currentIndex, currentArray</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>解释：对数组中的<strong>每一项</strong>运行回调函数，该函数返回结果是 true 的项，将组成新的数组（返回值就是这个新数组）。不会改变原数组。</p>\n<p>作用：对数组进行过滤。</p>\n<p><strong>举例 1</strong>：找出数组 arr1 中大于 4 的元素，返回一个新的数组。代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = arr1.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt; <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// 将arr1中大于4的元素返回，组成新的数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1)); <span class=\"comment\">// 打印结果：[1,3,6,2,5,6]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2)); <span class=\"comment\">// 打印结果：[6,5,6]</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码更简洁的写法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = arr1.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">4</span>); <span class=\"comment\">// 将arr1中大于4的元素返回，组成新的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr1)); <span class=\"comment\">// 打印结果：[1,3,6,2,5,6]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2)); <span class=\"comment\">// 打印结果：[6,5,6]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 2</strong>：</p>\n<p>获取对象数组 arr1 中指定类型的对象，放到数组 arr2 中。代码举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;一线&#x27;</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;周杰伦&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;退居二线&#x27;</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;邓紫棋&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;一线&#x27;</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = arr1.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">type</span> == <span class=\"string\">&#x27;一线&#x27;</span>); <span class=\"comment\">// 筛选出一线歌手</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(arr2));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;一线&#x27;</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;邓紫棋&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;一线&#x27;</span> &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce()\"></a>reduce()</h2><h3 id=\"reduce-语法\"><a href=\"#reduce-语法\" class=\"headerlink\" title=\"reduce() 语法\"></a>reduce() 语法</h3><blockquote>\n<p>reduce 的发音：[rɪ’djuːs]。中文含义是减少，但这个方法跟“减少”没有任何关系。</p>\n</blockquote>\n<p>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。返回值是回调函数累计处理的结果。</p>\n<p><strong>语法</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">reduce</span>(<span class=\"keyword\">function</span> (<span class=\"params\">previousValue, currentValue, currentIndex, arr</span>) &#123;&#125;, initialValue);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li><p>previousValue：必填，上一次调用回调函数时的返回值</p>\n</li>\n<li><p>currentValue：必填，当前正在处理的数组元素</p>\n</li>\n<li><p>currentIndex：选填，当前正在处理的数组元素下标</p>\n</li>\n<li><p>arr：选填，调用 reduce()方法的数组</p>\n</li>\n<li><p>initialValue：选填，可选的初始值（作为第一次调用回调函数时传给 previousValue 的值）</p>\n</li>\n</ul>\n<p>在以往的数组方法中，匿名的回调函数里是传三个参数：item、index、arr。但是在 reduce() 方法中，前面多传了一个参数<code>previousValue</code>，这个参数的意思是上一次调用回调函数时的返回值。第一次执行回调函数时，previousValue 没有值怎么办？可以用 initialValue 参数传给它。</p>\n<p>备注：绝大多数人在一开始接触 reduce() 的时候会很懵逼，但是没关系，有事没事多看几遍，自然就掌握了。如果能熟练使用 reduce() 的用法，将能替代很多其他的数组方法，并逐渐走上进阶之路，领先于他人。</p>\n<p>为了方便理解 reduce()，我们先来看看下面的简单代码，过渡一下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">arr1.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">prev, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(prev);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;------&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">88</span>;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">------</span><br><span class=\"line\">88</span><br><span class=\"line\">2</span><br><span class=\"line\">------</span><br><span class=\"line\">88</span><br><span class=\"line\">3</span><br><span class=\"line\">------</span><br><span class=\"line\">88</span><br><span class=\"line\">4</span><br><span class=\"line\">------</span><br><span class=\"line\">88</span><br><span class=\"line\">5</span><br><span class=\"line\">------</span><br><span class=\"line\">88</span><br><span class=\"line\">6</span><br><span class=\"line\">------</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码中，由于<code>return</code>的是固定值，所以 prev 打印的也是固定值（只有初始值是 0，剩下的遍历中，都是打印 88）。</p>\n<p>现在来升级一下，实际开发中，prev 的值往往是动态变化的，这便是 reduce()的精妙之处。我们来看几个例子就明白了。</p>\n<h3 id=\"reduce-的常见应用\"><a href=\"#reduce-的常见应用\" class=\"headerlink\" title=\"reduce() 的常见应用\"></a>reduce() 的常见应用</h3><p><strong>举例 1</strong>、求和：</p>\n<p>计算数组中所有元素项的总和。代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"comment\">// 数组求和</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> total = arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">prev, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + item;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;total:&#x27;</span> + total); <span class=\"comment\">// 打印结果：18</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 2</strong>、统计某个元素出现的次数：</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义方法：统一 value 这个元素在数组 arr 中出现的次数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">repeatCount</span>(<span class=\"params\">arr, value</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!arr || arr.<span class=\"property\">length</span> == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">totalCount, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        totalCount += item == value ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalCount;</span><br><span class=\"line\">    &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">repeatCount</span>(arr1, <span class=\"number\">6</span>)); <span class=\"comment\">// 打印结果：3</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 3</strong>、求元素的最大值：</p>\n<p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"comment\">// 数组求最大值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> maxValue = arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">prev, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev &gt; item ? prev : item;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxValue); <span class=\"comment\">// 打印结果：9</span></span><br></pre></td></tr></table></figure>\n\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://juejin.im/post/5d78aa3451882521397645ae\">JS reduce 函数</a></li>\n</ul>\n<h2 id=\"数组练习\"><a href=\"#数组练习\" class=\"headerlink\" title=\"数组练习\"></a>数组练习</h2><h3 id=\"splice-练习：数组去重\"><a href=\"#splice-练习：数组去重\" class=\"headerlink\" title=\"splice()练习：数组去重\"></a>splice()练习：数组去重</h3><p>代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建一个数组</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//去除数组中重复的数字</span></span><br><span class=\"line\"><span class=\"comment\">//获取数组中的每一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*获取当前元素后的所有元素*/</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; arr.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(&quot;----&gt;&quot;+arr[j]);</span></span><br><span class=\"line\">        <span class=\"comment\">//判断两个元素的值是否相等</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] == arr[j]) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果相等则证明出现了重复的元素，则删除j对应的元素</span></span><br><span class=\"line\">            arr.<span class=\"title function_\">splice</span>(j, <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"comment\">//当删除了当前j所在的元素以后，后边的元素会自动补位</span></span><br><span class=\"line\">            <span class=\"comment\">//此时将不会再比较这个元素，我们需要再比较一次j所在位置的元素</span></span><br><span class=\"line\">            <span class=\"comment\">//使j自减</span></span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"清空数组\"><a href=\"#清空数组\" class=\"headerlink\" title=\"清空数组\"></a>清空数组</h3><p>清空数组，有以下几种方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">arr = []; <span class=\"comment\">//方式1：推荐</span></span><br><span class=\"line\">arr.<span class=\"property\">length</span> = <span class=\"number\">0</span>; <span class=\"comment\">//方式2：length属性可以赋值，在其它语言中length是只读</span></span><br><span class=\"line\">arr.<span class=\"title function_\">splice</span>(<span class=\"number\">0</span>); <span class=\"comment\">//方式3：删除数组中所有元素。也可以写成 arr.splice(0, arr.length)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"join-练习\"><a href=\"#join-练习\" class=\"headerlink\" title=\"join() 练习\"></a>join() 练习</h3><p><strong>问题</strong>：将一个字符串数组输出为<code>|</code>分割的形式，比如“千古|宿敌|素颜”。使用两种方式实现。</p>\n<p>答案：</p>\n<p>方式 1：（不推荐）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;千古&#x27;</span>, <span class=\"string\">&#x27;宿敌&#x27;</span>, <span class=\"string\">&#x27;素颜&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> separator = <span class=\"string\">&#x27;|&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    str += separator + arr[i]; <span class=\"comment\">//从第1个数组元素开始，每个元素前面加上符号&quot;|&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br></pre></td></tr></table></figure>\n\n<p>输出结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_1336.png\"></p>\n<p>不推荐这种方式，因为：由于字符串的不变性，str 拼接过多的话，容易导致内存溢出（很多个 str 都堆放在栈里）。</p>\n<p>方式 2：（推荐。通过 array 数组自带的 api 来实现）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">&#x27;千古&#x27;</span>, <span class=\"string\">&#x27;宿敌&#x27;</span>, <span class=\"string\">&#x27;素颜&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;|&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_1339.png\"></p>\n<h3 id=\"reverse-练习\"><a href=\"#reverse-练习\" class=\"headerlink\" title=\"reverse() 练习\"></a>reverse() 练习</h3><p>题目：将一个字符串数组的元素的顺序进行反转，使用两种种方式实现。提示：第 i 个和第 length-i-1 个进行交换。</p>\n<p>答案：</p>\n<p>方式 1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = array.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        newArr[newArr.<span class=\"property\">length</span>] = array[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>方式 2：（算法里比较常见的方式）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.<span class=\"property\">length</span> / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> temp = array[i];</span><br><span class=\"line\">        array[i] = array[array.<span class=\"property\">length</span> - <span class=\"number\">1</span> - i];</span><br><span class=\"line\">        array[array.<span class=\"property\">length</span> - <span class=\"number\">1</span> - i] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>方式 3：（数组自带的 reverse 方法）</p>\n<p>现在我们学习了数组自带的 api，我们就可以直接使用 reverse()方法。</p>\n<h3 id=\"练习：数组去重\"><a href=\"#练习：数组去重\" class=\"headerlink\" title=\"练习：数组去重\"></a>练习：数组去重</h3><p>问题：编写一个方法去掉一个数组中的重复元素。</p>\n<p>分析：创建一个新数组，循环遍历，只要新数组中有老数组的值，就不用再添加了。</p>\n<p>答案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//    编写一个方法 去掉一个数组的重复元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\"><span class=\"keyword\">var</span> aaa = <span class=\"title function_\">fn</span>(arr);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aaa);</span><br><span class=\"line\"><span class=\"comment\">//思路：创建一个新数组，循环遍历，只要新数组中有老数组的值，就不用再添加了。</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//开闭原则</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> bool = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">//每次都要判断新数组中是否有旧数组中的值。</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; newArr.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (array[i] === newArr[j]) &#123;</span><br><span class=\"line\">                bool = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bool) &#123;</span><br><span class=\"line\">            newArr[newArr.<span class=\"property\">length</span>] = array[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"数组的方法清单数组的类型相关方法描述备注Array.isArray()判断是否为数组toString()将数组转换为字符串不会改变原数组join()将数组转换为字符串，返回结果为转换后的字符串不会改变原数组字符串的方法：split()将字符串按照指定的分隔符，组装为数组不会改变原","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"27-面向对象简介","slug":"JavaScript/27-面向对象简介","date":"2023-02-16T07:30:25.444Z","updated":"2023-02-16T07:50:33.832Z","comments":true,"path":"api/articles/JavaScript/27-面向对象简介.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"面向过程和面向对象\"><a href=\"#面向过程和面向对象\" class=\"headerlink\" title=\"面向过程和面向对象\"></a>面向过程和面向对象</h2><h3 id=\"面向过程\"><a href=\"#面向过程\" class=\"headerlink\" title=\"面向过程\"></a>面向过程</h3><p><strong>面向过程</strong>：先分析好的具体步骤，然后按照步骤，一步步解决问题。</p>\n<p>优点：性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程。</p>\n<p>缺点：没有面向对象易维护、易复用、易扩展。</p>\n<h3 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h3><p><strong>面向对象</strong>（OOP，Object Oriented Programming）：以对象功能来划分问题，而不是步骤。</p>\n<p>优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统 更加灵活、更加易于维护。</p>\n<p>缺点：性能比面向过程低。</p>\n<h3 id=\"面向对象的编程思想\"><a href=\"#面向对象的编程思想\" class=\"headerlink\" title=\"面向对象的编程思想\"></a>面向对象的编程思想</h3><p>面向对象的编程思想：对代码和数据进行封装，并以对象调用的方式，对外提供统一的调用接口。</p>\n<p>比如说，当我们在开车的时候，无需关心汽车的内部构造有多复杂，对于大多数人而言，只需要会开、知道汽车有哪些功能就行了。</p>\n<h3 id=\"面向对象的特性\"><a href=\"#面向对象的特性\" class=\"headerlink\" title=\"面向对象的特性\"></a>面向对象的特性</h3><p>在面向对象程序开发思想中，每一个对象都是功能中心，具有明确分工。面向对象编程具有灵活、代码可复用、容易维护和开发的优点，适合多人合作的大型软件项目，更符合我们认识事物的规律。</p>\n<p>面向对象的特性如下：</p>\n<ul>\n<li><p>封装性</p>\n</li>\n<li><p>继承性</p>\n</li>\n<li><p>多态性</p>\n</li>\n</ul>\n<h3 id=\"JS-中的面向对象\"><a href=\"#JS-中的面向对象\" class=\"headerlink\" title=\"JS 中的面向对象\"></a>JS 中的面向对象</h3><p>JS 中的面向对象，是基于<strong>原型</strong>的面向对象。JS 中的对象（Object）是依靠构造器（constructor）和原型（prototype）构造出来的。</p>\n<p>另外，在ES6中，新引入了 类（Class）和继承（Extends）来实现面向对象。</p>\n","text":"面向过程和面向对象面向过程面向过程：先分析好的具体步骤，然后按照步骤，一步步解决问题。优点：性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程。缺点：没有面向对象易维护、易复用、易扩展。面向对象面向对象（OOP，Object Oriented Progr","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"25-this指向","slug":"JavaScript/25-this指向","date":"2023-02-16T07:30:25.440Z","updated":"2023-02-16T07:50:09.741Z","comments":true,"path":"api/articles/JavaScript/25-this指向.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"执行期上下文\"><a href=\"#执行期上下文\" class=\"headerlink\" title=\"执行期上下文\"></a>执行期上下文</h2><p>当<strong>函数执行</strong>时（准确来说，是在函数发生预编译的前一刻），会创建一个执行期上下文的内部对象。一个执行期上下文定义了一个函数执行时的环境。</p>\n<p>每调用一次函数，就会创建一个新的上下文对象，他们之间是相互独立且独一无二的。当函数执行完毕，它所产生的执行期上下文会被销毁。</p>\n<p>参考链接：<a href=\"https://www.cnblogs.com/chenyingjie1207/p/9966036.html\">https://www.cnblogs.com/chenyingjie1207/p/9966036.html</a></p>\n<h2 id=\"this-指向\"><a href=\"#this-指向\" class=\"headerlink\" title=\"this 指向\"></a>this 指向</h2><p>解析器在调用函数每次都会向函数内部传递进一个隐含的参数，这个隐含的参数就是 this，this 指向的是一个对象，这个对象我们称为函数执行的 上下文对象。</p>\n<h3 id=\"ES5-函数内-this-的指向【非常重要】\"><a href=\"#ES5-函数内-this-的指向【非常重要】\" class=\"headerlink\" title=\"ES5 函数内 this 的指向【非常重要】\"></a>ES5 函数内 this 的指向【非常重要】</h3><p>函数的调用有<strong>六种</strong>形式。</p>\n<p>在ES5语法中，根据函数的调用方式的不同，this 会指向不同的对象：</p>\n<p>1、以函数的形式（包括普通函数、定时器函数、立即执行函数）调用时，this 的指向永远都是 window。比如<code>fun();</code>相当于<code>window.fun();</code></p>\n<p>2、以方法的形式调用时，this 指向调用方法的那个对象</p>\n<p>3、以构造函数的形式调用时，this 指向实例对象</p>\n<p>4、以事件绑定函数的形式调用时，this 指向<strong>绑定事件的对象</strong></p>\n<p>5、使用 call 和 apply 调用时，this 指向指定的那个对象</p>\n<p><strong>第 1 条的举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;smyh&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayName</span>: fun,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vae&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayName</span>: fun,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;全局的name属性&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以函数形式调用，this是window</span></span><br><span class=\"line\"><span class=\"title function_\">fun</span>(); <span class=\"comment\">//可以理解成 window.fun()</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Window</span><br><span class=\"line\">全局的name属性</span><br></pre></td></tr></table></figure>\n\n<p>上面的举例可以看出，this 指向的是 window 对象，所以 this.name 指的是全局的 name。</p>\n<p><strong>第 2 条的举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fun</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;smyh&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayName</span>: fun,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vae&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sayName</span>: fun,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;全局的name属性&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以方法的形式调用，this是调用方法的对象</span></span><br><span class=\"line\">obj2.<span class=\"title function_\">sayName</span>();</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object</span><br><span class=\"line\">vae</span><br></pre></td></tr></table></figure>\n\n<p>上面的举例可以看出，this 指向的是 对象 obj2 ，所以 this.name 指的是 obj2.name。</p>\n<h3 id=\"ES6-箭头函数中-this-的指向\"><a href=\"#ES6-箭头函数中-this-的指向\" class=\"headerlink\" title=\"ES6 箭头函数中 this 的指向\"></a>ES6 箭头函数中 this 的指向</h3><p>ES6 中的箭头函数并不使用上面的准则，而是会继承外层函数调用的 this 绑定（无论 this 绑定到什么）。</p>\n<h3 id=\"改变函数内部的-this-指向\"><a href=\"#改变函数内部的-this-指向\" class=\"headerlink\" title=\"改变函数内部的 this 指向\"></a>改变函数内部的 this 指向</h3><p>JS 专门为我们提供了一些方法来改变函数内部的 this 指向。常见的方法有 call()、apply()、bind() 方法。继续往下看。</p>\n<h2 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call()\"></a>call()</h2><h3 id=\"call-方法的作用\"><a href=\"#call-方法的作用\" class=\"headerlink\" title=\"call() 方法的作用\"></a>call() 方法的作用</h3><p>call() 方法的作用：可以<strong>调用</strong>一个函数，与此同时，它还可以改变这个函数内部的 this 指向。</p>\n<p>call() 方法的另一个应用：<strong>可以实现继承</strong>。之所以能实现继承，其实是利用了上面的作用。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn1.<span class=\"title function_\">call</span>(想要将<span class=\"variable language_\">this</span>指向哪里, 函数实参<span class=\"number\">1</span>, 函数实参<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>备注：第一个参数中，如果不需要改变 this 指向，则传 null。</p>\n<h3 id=\"call-方法举例\"><a href=\"#call-方法举例\" class=\"headerlink\" title=\"call() 方法举例\"></a>call() 方法举例</h3><p><strong>举例 1</strong>、通过 call() 调用函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">nickName</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nickName</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn1.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>); <span class=\"comment\">// this的指向并没有被改变，此时相当于 fn1();</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码的打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window</span><br><span class=\"line\">undefined</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码，跟普通的函数调用 <code>fn1()</code> 没有区别。</p>\n<p><strong>举例 2</strong>、通过 call() 改变 this 指向：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">nickName</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nickName</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fn1.<span class=\"title function_\">call</span>(obj1, <span class=\"number\">2</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 先将 this 指向 obj1，然后执行 fn1() 函数</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码的打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj1</span><br><span class=\"line\">qianguyihao</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n\n<p><strong>举例 3</strong>、通过 call() 实现继承：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给 Father 增加 name 和 age 属性</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Father</span>(<span class=\"params\">myName, myAge</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = myName;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = myAge;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\">myName, myAge</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 【下面这一行，重要代码】</span></span><br><span class=\"line\">    <span class=\"comment\">// 通过这一步，将 father 里面的 this 修改为 Son 里面的 this；另外，给 Son 加上相应的参数，让 Son 自动拥有 Father 里的属性。最终实现继承</span></span><br><span class=\"line\">    <span class=\"title class_\">Father</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, myName, myAge);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> son1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;千古壹号&#x27;</span>, <span class=\"number\">28</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(son1));</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，通过 call() 方法，让 Son 继承了 Father 里面的 name 和 age 属性。</p>\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;myName&quot;:&quot;千古壹号&quot;,&quot;myAge&quot;:28&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apply-方法\"><a href=\"#apply-方法\" class=\"headerlink\" title=\"apply() 方法\"></a>apply() 方法</h2><h3 id=\"apply-方法的作用\"><a href=\"#apply-方法的作用\" class=\"headerlink\" title=\"apply() 方法的作用\"></a>apply() 方法的作用</h3><p>apply() 方法的作用：可以<strong>调用</strong>一个函数，与此同时，它还可以改变这个函数内部的 this 指向。这一点，和 call()类似。</p>\n<p>apply() 方法的应用： 由于 apply()需要传递<strong>数组</strong>，所以它有一些巧妙应用，稍后看接下来的应用举例就知道了。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn1.<span class=\"title function_\">apply</span>(想要将<span class=\"variable language_\">this</span>指向哪里, [函数实参<span class=\"number\">1</span>, 函数实参<span class=\"number\">2</span>]);</span><br></pre></td></tr></table></figure>\n\n<p>备注：第一个参数中，如果不需要改变 this 指向，则传 null。</p>\n<p>到这里可以看出， call() 和 apply() 方法的作用是相同的。唯一的区别在于，apply() 里面传入的<strong>实参，必须是数组（或者伪数组）</strong>。</p>\n<h3 id=\"apply-方法举例\"><a href=\"#apply-方法举例\" class=\"headerlink\" title=\"apply() 方法举例\"></a>apply() 方法举例</h3><p><strong>举例</strong>、通过 apply() 改变 this 指向：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">nickName</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nickName</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fn1.<span class=\"title function_\">apply</span>(obj1, [<span class=\"string\">&#x27;hello&#x27;</span>]); <span class=\"comment\">// 先将 this 指向 obj1，然后执行 fn1() 函数</span></span><br></pre></td></tr></table></figure>\n\n<p>注意，上方代码中，apply() 里面传实参时，需要以数组的形式。即便是传一个实参，也需要传数组。</p>\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj1</span><br><span class=\"line\">qianguyihao</span><br><span class=\"line\">hello</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"apply-方法的巧妙应用：求数组的最大值\"><a href=\"#apply-方法的巧妙应用：求数组的最大值\" class=\"headerlink\" title=\"apply() 方法的巧妙应用：求数组的最大值\"></a>apply() 方法的巧妙应用：求数组的最大值</h3><p>我们知道，如果想要求数组中元素的最大值，数组本身是没有自带方法的。那怎么办呢？</p>\n<p>虽然数组里没有获取最大值的方法，但是数值里有 <code>Math.max(数字1，数字2，数字3)</code> 方法，可以获取<strong>多个数值中的最大值</strong>。 另外，由于 apply() 方法在传递实参时，传的刚好是<strong>数组</strong>，所以我们可以 通过 Math.max() 和 apply() 曲线救国。</p>\n<p><strong>举例</strong>：求数组中多个元素的最大值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">10</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面这一行代码的目的，无需改变 this 指向，所以：第一个参数填 null，或者填 Math，或者填 this 都可以。严格模式中，不让填null。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> maxValue = <span class=\"title class_\">Math</span>.<span class=\"property\">max</span>.<span class=\"title function_\">apply</span>(<span class=\"title class_\">Math</span>, arr1); <span class=\"comment\">// 求数组 arr1 中元素的最大值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(maxValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> minValue = <span class=\"title class_\">Math</span>.<span class=\"property\">min</span>.<span class=\"title function_\">apply</span>(<span class=\"title class_\">Math</span>, arr1); <span class=\"comment\">// 求数组 arr1 中元素的最小值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(minValue);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"bind-方法\"><a href=\"#bind-方法\" class=\"headerlink\" title=\"bind() 方法\"></a>bind() 方法</h2><h3 id=\"bind-方法的作用\"><a href=\"#bind-方法的作用\" class=\"headerlink\" title=\"bind() 方法的作用\"></a>bind() 方法的作用</h3><p>bind() 方法<strong>不会调用函数</strong>，但是可以改变函数内部的 this 指向。</p>\n<p>把call()、apply()、bind()这三个方法做一下对比，你会发现：实际开发中， bind() 方法使用得最为频繁。如果有些函数，我们不需要立即调用，但是又想改变这个函数内部的this指向，此时用 bind() 是最为合适的。</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新函数 = fn1.<span class=\"title function_\">bind</span>(想要将<span class=\"variable language_\">this</span>指向哪里, 函数实参<span class=\"number\">1</span>, 函数实参<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>参数：</p>\n<ul>\n<li><p>第一个参数：在 fn1 函数运行时，指定 fn1 函数的this 指向。如果不需要改变 this 指向，则传 null。</p>\n</li>\n<li><p>其他参数：fn1 函数的实参。</p>\n</li>\n</ul>\n<p>解释：它不会调用 fn1 函数，但会返回 由指定this 和指定实参的<strong>原函数拷贝</strong>。可以看出， bind() 方法是有返回值的。</p>\n","text":"执行期上下文当函数执行时（准确来说，是在函数发生预编译的前一刻），会创建一个执行期上下文的内部对象。一个执行期上下文定义了一个函数执行时的环境。每调用一次函数，就会创建一个新的上下文对象，他们之间是相互独立且独一无二的。当函数执行完毕，它所产生的执行期上下文会被销毁。参考链接：h","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"29-对象的基本操作","slug":"JavaScript/29-对象的基本操作","date":"2023-02-16T07:30:25.448Z","updated":"2023-02-16T07:51:21.206Z","comments":true,"path":"api/articles/JavaScript/29-对象的基本操作.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"对象的基本操作\"><a href=\"#对象的基本操作\" class=\"headerlink\" title=\"对象的基本操作\"></a>对象的基本操作</h2><h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>使用 new 关键字调用的函数，是构造函数 constructor。<strong>构造函数是专门用来创建对象的函数</strong>。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br></pre></td></tr></table></figure>\n\n<p>记住，使用<code>typeof</code>检查一个对象时，会返回<code>object</code>。</p>\n<p>关于创建对象的更多方式，可以看上一篇文章《对象的创建&amp;构造函数》。</p>\n<h3 id=\"向对象中添加属性\"><a href=\"#向对象中添加属性\" class=\"headerlink\" title=\"向对象中添加属性\"></a>向对象中添加属性</h3><p>在对象中保存的值称为属性。</p>\n<p>向对象添加属性的语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象.属性名 = 属性值;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个name属性</span></span><br><span class=\"line\">obj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;孙悟空&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个gender属性</span></span><br><span class=\"line\">obj.<span class=\"property\">gender</span> = <span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个age属性</span></span><br><span class=\"line\">obj.<span class=\"property\">age</span> = <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj)); <span class=\"comment\">// 将 obj 以字符串的形式打印出来</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;name&quot;:&quot;孙悟空&quot;,</span><br><span class=\"line\">\t&quot;gender&quot;:&quot;男&quot;,</span><br><span class=\"line\">\t&quot;age&quot;:18</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里我们也可以看出一个规律：如果对象里本身没有某个属性，则用点语法赋值时，这个属性会被创建出来。</p>\n<h3 id=\"获取对象中的属性\"><a href=\"#获取对象中的属性\" class=\"headerlink\" title=\"获取对象中的属性\"></a>获取对象中的属性</h3><p><strong>方式 1</strong>：</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象.属性名;</span><br></pre></td></tr></table></figure>\n\n<p>如果获取对象中没有的属性，不会报错而是返回<code>undefined</code>。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个name属性</span></span><br><span class=\"line\">obj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;孙悟空&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个gender属性</span></span><br><span class=\"line\">obj.<span class=\"property\">gender</span> = <span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//向obj中添加一个age属性</span></span><br><span class=\"line\">obj.<span class=\"property\">age</span> = <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取对象中的属性，并打印出来</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">gender</span>); <span class=\"comment\">// 打印结果：男</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">color</span>); <span class=\"comment\">// 打印结果：undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>方式 2</strong>：可以使用<code>[]</code>这种形式去操作属性</p>\n<p>如果属性名的命名规范没有遵循标识符的命名规范，就不能采用<code>.</code>的方式来操作对象的属性，则必须用方括号的形式来访问。比如说，<code>123</code>这种属性名，如果我们直接写成<code>obj.123 = 789</code>来操作属性，是会报错的。那怎么办呢？办法如下：</p>\n<p>语法格式如下：（读取时，也是采用这种方式）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注意，括号里的属性名，必须要加引号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取属性</span></span><br><span class=\"line\">对象[<span class=\"string\">&#x27;属性名&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置属性值</span></span><br><span class=\"line\">对象[<span class=\"string\">&#x27;属性名&#x27;</span>] = 属性值;</span><br></pre></td></tr></table></figure>\n\n<p>上面这种语法格式，举例如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj[<span class=\"string\">&#x27;123&#x27;</span>] = <span class=\"number\">789</span>;</span><br></pre></td></tr></table></figure>\n\n<p>当然，如果属性名遵循了标识符的命名规范，也可以使用方括号操作属性。</p>\n<p><strong>重要</strong>：使用<code>[]</code>这种形式去操作属性会更灵活，因为我们可以在<code>[]</code>中传递一个<strong>变量</strong>。也就是说，如果属性名以变量的形式存储，请记得也必须使用方括号的形式操作属性。这在日常开发中，使用得非常多。比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">30</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> myKey = <span class=\"string\">&#x27;name&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 错误的访问方式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">myKey</span>); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"comment\">// 正确的访问方式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[myKey]); <span class=\"comment\">// 千古壹号</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改对象的属性值\"><a href=\"#修改对象的属性值\" class=\"headerlink\" title=\"修改对象的属性值\"></a>修改对象的属性值</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象.属性名 = 新值;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;qiangu yihao&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除对象的属性\"><a href=\"#删除对象的属性\" class=\"headerlink\" title=\"删除对象的属性\"></a>删除对象的属性</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span> obj.<span class=\"property\">name</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"in-运算符\"><a href=\"#in-运算符\" class=\"headerlink\" title=\"in 运算符\"></a>in 运算符</h3><p>通过该运算符可以检查一个对象中是否含有指定的属性。如果有则返回 true，没有则返回 false。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;属性名&#x27;</span> <span class=\"keyword\">in</span> 对象;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//检查对象 obj 中是否含有name属性</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;name&#x27;</span> <span class=\"keyword\">in</span> obj);</span><br></pre></td></tr></table></figure>\n\n<p>我们平时使用的对象不一定是自己创建的，可能是从接口获取的，这个时候，in 运算符可以派上用场。</p>\n<p>当然，还有一种写法可以达到上述目的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj.<span class=\"property\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果对象 obj 中有name属性，我就继续做某某事情。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"for-of：遍历数组\"><a href=\"#for-of：遍历数组\" class=\"headerlink\" title=\"for of：遍历数组\"></a>for of：遍历数组</h2><p>ES6 中，如果我们要遍历一个数组，可以这样做：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr1) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">6</span><br><span class=\"line\">8</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n\n\n<p>for … of 的循环可以避免我们开拓内存空间，增加代码运行效率，所以建议大家在以后的工作中使用 for…of 遍历数组。</p>\n<p>注意，上面的数组中，<code>for ... of</code>获取的是数组里的值；如果采用<code>for ... in</code>遍历数组，则获取的是 index 索引值。</p>\n<h3 id=\"Map-对象的遍历\"><a href=\"#Map-对象的遍历\" class=\"headerlink\" title=\"Map 对象的遍历\"></a>Map 对象的遍历</h3><p><code>for ... of</code>既可以遍历数组，也可以遍历 Map 对象。</p>\n<h2 id=\"for-in：遍历对象的属性\"><a href=\"#for-in：遍历对象的属性\" class=\"headerlink\" title=\"for in：遍历对象的属性\"></a>for in：遍历对象的属性</h2><blockquote>\n<p><code>for ... in</code>主要用于遍历对象，不建议用来遍历数组。</p>\n</blockquote>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> 变量 <span class=\"keyword\">in</span> 对象) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：对象中有几个属性，循环体就会执行几次。每次执行时，会将对象中的<strong>每个属性的 属性名 赋值给变量</strong>。</p>\n<p>语法举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key); <span class=\"comment\">// 这里的 key 是：对象属性的键（也就是属性名）</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[key]); <span class=\"comment\">// 这里的 obj[key] 是：对象属性的值（也就是属性值）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">const</span> obj = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">gender</span>: <span class=\"string\">&#x27;男&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">address</span>: <span class=\"string\">&#x27;shenzhen&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">sayHi</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 遍历对象中的属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;属性名:&#x27;</span> + key);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;属性值:&#x27;</span> + obj[key]); <span class=\"comment\">// 注意，因为这里的属性名 key 是变量，所以，如果想获取属性值，不能写成 obj.key，而是要写成 obj[key]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">属性名:name</span><br><span class=\"line\">属性值:qianguyihao</span><br><span class=\"line\"></span><br><span class=\"line\">属性名:age</span><br><span class=\"line\">属性值:26</span><br><span class=\"line\"></span><br><span class=\"line\">属性名:gender</span><br><span class=\"line\">属性值:男</span><br><span class=\"line\"></span><br><span class=\"line\">属性名:address</span><br><span class=\"line\">属性值:shenzhen</span><br><span class=\"line\"></span><br><span class=\"line\">属性名:sayHi</span><br><span class=\"line\">属性值:function() &#123;</span><br><span class=\"line\">                    console.log(this.name);</span><br><span class=\"line\">                &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"for-in-遍历数组（不建议）\"><a href=\"#for-in-遍历数组（不建议）\" class=\"headerlink\" title=\"for in 遍历数组（不建议）\"></a>for in 遍历数组（不建议）</h3><p>另外，for in 当然也可以用来遍历数组（只是不建议），此时的 key 是数组的索引。举例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;hello1&#x27;</span>, <span class=\"string\">&#x27;hello2&#x27;</span>, <span class=\"string\">&#x27;hello3&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;属性名：&#x27;</span> + key);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;属性值：&#x27;</span> + arr[key]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">属性名：0</span><br><span class=\"line\">属性值：hello1</span><br><span class=\"line\"></span><br><span class=\"line\">属性名：1</span><br><span class=\"line\">属性值：hello2</span><br><span class=\"line\"></span><br><span class=\"line\">属性名：2</span><br><span class=\"line\">属性值：hello3</span><br></pre></td></tr></table></figure>\n\n","text":"对象的基本操作创建对象使用 new 关键字调用的函数，是构造函数 constructor。构造函数是专门用来创建对象的函数。例如：1<br>const obj = new Object();<br>记住，使用typeof检查一个对象时，会返回object。关于创建对象的更多方式，","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"31_1-对象的高级操作（待更新）","slug":"JavaScript/31-对象的高级操作（待更新）","date":"2023-02-16T07:30:25.454Z","updated":"2023-02-16T07:51:55.723Z","comments":true,"path":"api/articles/JavaScript/31-对象的高级操作（待更新）.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"Object-freeze-冻结对象\"><a href=\"#Object-freeze-冻结对象\" class=\"headerlink\" title=\"Object.freeze() 冻结对象\"></a>Object.freeze() 冻结对象</h2><p>Object.freeze() 方法可以冻结一个对象。一个被冻结的对象再也不能被修改；冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。此外，冻结一个对象后该对象的原型也不能被修改。freeze() 返回和传入的参数相同的对象。</p>\n<p>代码举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"string\">&#x27;8899&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">freeze</span>(params); <span class=\"comment\">// 冻结对象 params</span></span><br><span class=\"line\"></span><br><span class=\"line\">params.<span class=\"property\">port</span> = <span class=\"string\">&#x27;8080&#x27;</span>;<span class=\"comment\">// 修改无效</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，把 params 对象冻结后，如果想再改变 params 里面的属性值，是无效的。</p>\n","text":"Object.freeze() 冻结对象Object.freeze() 方法可以冻结一个对象。一个被冻结的对象再也不能被修改；冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。此外，冻结一个","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"30-浅拷贝和深拷贝","slug":"JavaScript/30-浅拷贝和深拷贝","date":"2023-02-16T07:30:25.451Z","updated":"2023-02-16T07:51:34.285Z","comments":true,"path":"api/articles/JavaScript/30-浅拷贝和深拷贝.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><ul>\n<li><p>浅拷贝：只拷贝最外面一层的数据；更深层次的对象，只拷贝引用。</p>\n</li>\n<li><p>深拷贝：拷贝多层数据；每一层级别的数据都会拷贝。</p>\n</li>\n</ul>\n<p><strong>总结</strong>：</p>\n<p>拷贝引用的时候，是属于<strong>传址</strong>，而非<strong>传值</strong>。关于传值和传址的区别，是很基础的内容，详见《JavaScript 基础&#x2F;对象简介.md》这篇文章。</p>\n<p>深拷贝会把对象里<strong>所有的数据</strong>重新复制到新的内存空间，是最彻底的拷贝。</p>\n<h2 id=\"浅拷贝的实现方式\"><a href=\"#浅拷贝的实现方式\" class=\"headerlink\" title=\"浅拷贝的实现方式\"></a>浅拷贝的实现方式</h2><h3 id=\"用-for-in-实现浅拷贝（比较繁琐）\"><a href=\"#用-for-in-实现浅拷贝（比较繁琐）\" class=\"headerlink\" title=\"用 for in 实现浅拷贝（比较繁琐）\"></a>用 for in 实现浅拷贝（比较繁琐）</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">info</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;很厉害&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//  用 for in 将 obj1 的值拷贝给 obj2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj1) &#123;</span><br><span class=\"line\">    obj2[key] = obj1[key];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;obj2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.<span class=\"property\">info</span>.<span class=\"property\">desc</span> = <span class=\"string\">&#x27;永不止步&#x27;</span>; <span class=\"comment\">// 当修改 obj1 的第二层数据时，obj2的值也会被改变。所以  for in 是浅拷贝</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;obj2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，用 for in 做拷贝时，只能做到浅拷贝。也就是说，在 obj2 中， name 和 age 这两个属性会单独存放在新的内存地址中，和 obj1 没有关系。但是，<code>obj2.info</code> 属性，跟 <code>obj1.info</code>属性，<strong>它俩指向的是同一个堆内存地址</strong>。所以，当我修改 <code>obj1.info</code> 里的值之后，<code>obj2.info</code>的值也会被修改。</p>\n<p>打印结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj2:&#123;&quot;name&quot;:&quot;qianguyihao&quot;,&quot;age&quot;:28,&quot;info&quot;:&#123;&quot;desc&quot;:&quot;很厉害&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">obj2:&#123;&quot;name&quot;:&quot;qianguyihao&quot;,&quot;age&quot;:28,&quot;info&quot;:&#123;&quot;desc&quot;:&quot;永不止步&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用-Object-assgin-实现浅拷贝（推荐的方式）\"><a href=\"#用-Object-assgin-实现浅拷贝（推荐的方式）\" class=\"headerlink\" title=\"用 Object.assgin() 实现浅拷贝（推荐的方式）\"></a>用 Object.assgin() 实现浅拷贝（推荐的方式）</h3><p>上面的 for in 方法做浅拷贝过于繁琐。ES6 给我们提供了新的语法糖，通过 <code>Object.assgin()</code> 可以实现<strong>浅拷贝</strong>。</p>\n<p><code>Object.assgin()</code> 在日常开发中，使用得相当频繁，非掌握不可。</p>\n<p><strong>语法</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 语法1</span></span><br><span class=\"line\">obj2 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assgin</span>(obj2, obj1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 语法2</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(目标对象, 源对象<span class=\"number\">1</span>, 源对象<span class=\"number\">2.</span>..);</span><br></pre></td></tr></table></figure>\n\n<p><strong>解释</strong>：将<code>obj1</code> 拷贝给 <code>obj2</code>。执行完毕后，obj2 的值会被更新。</p>\n<p><strong>作用</strong>：将 obj1 的值追加到 obj2 中。如果对象里的属性名相同，会被覆盖。</p>\n<p>从语法2中可以看出，Object.assign() 可以将多个“源对象”拷贝到“目标对象”中。</p>\n<p><strong>例 1</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">info</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;hello&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 浅拷贝：把 obj1 拷贝给 obj2。如果 obj1 只有一层数据，那么，obj1 和 obj2 则互不影响</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, obj1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;obj2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.<span class=\"property\">info</span>.<span class=\"property\">desc</span> = <span class=\"string\">&#x27;永不止步&#x27;</span>; <span class=\"comment\">// 由于 Object.assign() 只是浅拷贝，所以当修改 obj1 的第二层数据时，obj2 对应的值也会被改变。</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;obj2:&#x27;</span> + <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br></pre></td></tr></table></figure>\n\n<p>代码解释：由于 Object.assign() 只是浅拷贝，所以在当前这个案例中， obj2 中的 name 属性和 age 属性是单独存放在新的堆内存地址中的，和 obj1 没有关系；但是，<code>obj2.info</code> 属性，跟 <code>obj1.info</code>属性，<strong>它俩指向的是同一个堆内存地址</strong>。所以，当我修改 <code>obj1.info</code> 里的值之后，<code>obj2.info</code>的值也会被修改。</p>\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj2:&#123;&quot;name&quot;:&quot;qianguyihao&quot;,&quot;age&quot;:28,&quot;info&quot;:&#123;&quot;desc&quot;:&quot;hello&quot;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">obj2:&#123;&quot;name&quot;:&quot;qianguyihao&quot;,&quot;age&quot;:28,&quot;info&quot;:&#123;&quot;desc&quot;:&quot;永不止步&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>例 2</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myObj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【写法1】浅拷贝：把 myObj 拷贝给 obj1</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(obj1, myObj);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【写法2】浅拷贝：把 myObj 拷贝给 obj2</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, myObj);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【写法3】浅拷贝：把 myObj 拷贝给 obj31。注意，这里的 obj31 和 obj32 其实是等价的，他们指向了同一个内存地址</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj31 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj32 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(obj31, myObj);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面这三种写法，是等价的。所以，当我们需要将对象 A 复制（拷贝）给对象 B，不要直接使用 <code>B = A</code>，而是要使用 Object.assign(B, A)。</p>\n<p><strong>例 3</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">26</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123; <span class=\"attr\">city</span>: <span class=\"string\">&#x27;shenzhen&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">28</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj3 = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(obj3, obj1, obj2); <span class=\"comment\">// 将 obj1、obj2的内容赋值给 obj3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj3); <span class=\"comment\">// &#123;name: &quot;qianguyihao&quot;, age: 28, city: &quot;shenzhen&quot;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的代码，可以理解成：将多个对象（obj1和obj2）合并成一个对象 obj3。</p>\n<p><strong>例4</strong>：【重要】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;hello world&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;许嵩&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 浅拷贝：把 obj1 赋值给 obj2。这一行，是关键代码。这行代码的返回值也是 obj2</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(obj2, obj1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;name&quot;:&quot;qianguyihao&quot;,</span><br><span class=\"line\">    &quot;sex&quot;:&quot;男&quot;,</span><br><span class=\"line\">    &quot;age&quot;:28,</span><br><span class=\"line\">    &quot;desc&quot;:&quot;hello world&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，<strong>例 4 在实际开发中，会经常遇到，一定要掌握</strong>。它的作用是：将 obj1 的值追加到 obj2 中。如果两个对象里的属性名相同，则 obj2 中的值会被 obj1 中的值覆盖。</p>\n<h2 id=\"深拷贝的实现方式\"><a href=\"#深拷贝的实现方式\" class=\"headerlink\" title=\"深拷贝的实现方式\"></a>深拷贝的实现方式</h2><p>深拷贝其实就是将浅拷贝进行递归。</p>\n<h3 id=\"用-for-in-递归实现深拷贝\"><a href=\"#用-for-in-递归实现深拷贝\" class=\"headerlink\" title=\"用 for in 递归实现深拷贝\"></a>用 for in 递归实现深拷贝</h3><p>代码实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;qianguyihao&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span>,</span><br><span class=\"line\">    <span class=\"attr\">info</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">desc</span>: <span class=\"string\">&#x27;hello&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>],</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">deepCopy</span>(obj2, obj1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj2);</span><br><span class=\"line\">obj1.<span class=\"property\">info</span>.<span class=\"property\">desc</span> = <span class=\"string\">&#x27;github&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法：深拷贝</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deepCopy</span>(<span class=\"params\">newObj, oldObj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> oldObj) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取属性值 oldObj[key]</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> item = oldObj[key];</span><br><span class=\"line\">        <span class=\"comment\">// 判断这个值是否是数组</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">            newObj[key] = [];</span><br><span class=\"line\">            <span class=\"title function_\">deepCopy</span>(newObj[key], item);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断这个值是否是对象</span></span><br><span class=\"line\">            newObj[key] = &#123;&#125;;</span><br><span class=\"line\">            <span class=\"title function_\">deepCopy</span>(newObj[key], item);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 简单数据类型，直接赋值</span></span><br><span class=\"line\">            newObj[key] = item;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"概念浅拷贝：只拷贝最外面一层的数据；更深层次的对象，只拷贝引用。深拷贝：拷贝多层数据；每一层级别的数据都会拷贝。总结：拷贝引用的时候，是属于传址，而非传值。关于传值和传址的区别，是很基础的内容，详见《JavaScript 基础&#x2F;对象简介.md》这篇文章。深拷贝会把对象里","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"28-对象的创建与构造函数","slug":"JavaScript/28-对象的创建&构造函数","date":"2023-02-16T07:30:25.446Z","updated":"2023-02-16T07:51:07.114Z","comments":true,"path":"api/articles/JavaScript/28-对象的创建&构造函数.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180125_1350.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<blockquote>\n<p>在看本文之前，可以先复习前面的一篇文章：《04-JavaScript 基础&#x2F;11-对象简介.md》</p>\n</blockquote>\n<h2 id=\"创建自定义对象的几种方法\"><a href=\"#创建自定义对象的几种方法\" class=\"headerlink\" title=\"创建自定义对象的几种方法\"></a>创建自定义对象的几种方法</h2><h3 id=\"方式一：对象字面量\"><a href=\"#方式一：对象字面量\" class=\"headerlink\" title=\"方式一：对象字面量\"></a>方式一：对象字面量</h3><p><strong>对象的字面量</strong>就是一个{}。里面的属性和方法均是<strong>键值对</strong>：</p>\n<ul>\n<li><p>键：相当于属性名。</p>\n</li>\n<li><p>值：相当于属性值，可以是任意类型的值（数字类型、字符串类型、布尔类型，函数类型等）。</p>\n</li>\n</ul>\n<p>使用对象字面量来创建一个对象，非常简洁，举例如下：：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>使用对象字面量，可以在创建对象时，直接指定对象中的属性。语法：{属性名:属性值,属性名:属性值….}</p>\n<p>例 1：（一个简单的对象）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;千古壹号&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">28</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>例 2：（一个较复杂的对象）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;千古壹号&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">26</span>,</span><br><span class=\"line\">    <span class=\"attr\">isBoy</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 还可以存放一个嵌套的对象</span></span><br><span class=\"line\">    <span class=\"attr\">test</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"number\">123</span>,</span><br><span class=\"line\">        <span class=\"attr\">tel</span>: <span class=\"number\">180</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//我们还可以在对象中增加一个方法。以后可以通过obj2.sayName()的方式调用这个方法</span></span><br><span class=\"line\">    <span class=\"attr\">sayName</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj2));</span><br><span class=\"line\">obj2.<span class=\"title function_\">sayName</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>对象字面量的属性名可以加引号也可以不加，建议不加。如果要使用一些特殊的名字，则必须加引号。</p>\n<p>属性名和属性值是一组一组的键值对结构，键和值之间使用<code>:</code>连接，多个值对之间使用<code>,</code>隔开。</p>\n<h3 id=\"方式二：工厂模式-new-Object\"><a href=\"#方式二：工厂模式-new-Object\" class=\"headerlink\" title=\"方式二：工厂模式 new Object()\"></a>方式二：工厂模式 new Object()</h3><p>通过该方法可以大批量的创建对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用工厂方法创建对象</span></span><br><span class=\"line\"><span class=\"comment\"> *  通过该方法可以大批量的创建对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createPerson</span>(<span class=\"params\">name, age, gender</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建一个新的对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">    <span class=\"comment\">//向对象中添加属性</span></span><br><span class=\"line\">    obj.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    obj.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    obj.<span class=\"property\">gender</span> = gender;</span><br><span class=\"line\">    obj.<span class=\"property\">sayName</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"comment\">//将新的对象返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"title function_\">createPerson</span>(<span class=\"string\">&#x27;猪八戒&#x27;</span>, <span class=\"number\">28</span>, <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"title function_\">createPerson</span>(<span class=\"string\">&#x27;白骨精&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj4 = <span class=\"title function_\">createPerson</span>(<span class=\"string\">&#x27;蜘蛛精&#x27;</span>, <span class=\"number\">18</span>, <span class=\"string\">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>第一次看到这种工厂模式时，你可能会觉得陌生。如果简化一下，可以写成下面这种形式，更容易理解：（也就是，利用 new Object 创建对象）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Obejct</span>();</span><br><span class=\"line\">obj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;猪八戒&#x27;</span>;</span><br><span class=\"line\">obj.<span class=\"property\">age</span> = <span class=\"number\">28</span>;</span><br><span class=\"line\">obj.<span class=\"property\">gender</span> = <span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\">obj.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hello world&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>弊端：</strong></p>\n<p>使用工厂方法创建的对象，使用的构造函数都是 Object。<strong>所以创建的对象都是 Object 这个类型，就导致我们无法区分出多种不同类型的对象</strong>。</p>\n<h3 id=\"方式三：利用构造函数\"><a href=\"#方式三：利用构造函数\" class=\"headerlink\" title=\"方式三：利用构造函数\"></a>方式三：利用构造函数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//利用构造函数自定义对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&#x27;smyh&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stu1);</span><br><span class=\"line\">stu1.<span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&#x27;vae&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stu2);</span><br><span class=\"line\">stu2.<span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Student</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name; <span class=\"comment\">//this指的是当前对象实例【重要】</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> + <span class=\"string\">&#x27;厉害了&#x27;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180125_1350.png\"></p>\n<p>接下来，我们专门来讲一下构造函数。</p>\n<h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><h3 id=\"代码引入\"><a href=\"#代码引入\" class=\"headerlink\" title=\"代码引入\"></a>代码引入</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个构造函数，专门用来创建Person对象</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, age, gender</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gender</span> = gender;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sayName</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> per = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;孙悟空&#x27;</span>, <span class=\"number\">18</span>, <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> per2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;玉兔精&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> per3 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;奔波霸&#x27;</span>, <span class=\"number\">38</span>, <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个构造函数，专门用来创建 Dog 对象</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Dog</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dog = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"构造函数的概念\"><a href=\"#构造函数的概念\" class=\"headerlink\" title=\"构造函数的概念\"></a>构造函数的概念</h3><p><strong>构造函数</strong>：是一种特殊的函数，主要用来创建和初始化对象，也就是为对象的成员变量赋初始值。它与 <code>new</code> 一起使用才有意义。</p>\n<p>我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个构造函数里面。</p>\n<h3 id=\"构造函数和普通函数的区别\"><a href=\"#构造函数和普通函数的区别\" class=\"headerlink\" title=\"构造函数和普通函数的区别\"></a>构造函数和普通函数的区别</h3><p>构造函数的创建方式和普通函数没有区别，不同的是构造函数习惯上首字母大写。</p>\n<p>构造函数和普通函数的区别就是<strong>调用方式</strong>的不同：普通函数是直接调用，而构造函数需要使用 new 关键字来调用。</p>\n<p><strong>this 的指向也有所不同</strong>：</p>\n<ul>\n<li><p>1.以函数的形式调用时，this 永远都是 window。比如<code>fun();</code>相当于<code>window.fun();</code></p>\n</li>\n<li><p>2.以方法的形式调用时，this 是调用方法的那个对象</p>\n</li>\n<li><p>3.以构造函数的形式调用时，this 是新创建的实例对象</p>\n</li>\n</ul>\n<h3 id=\"new-一个构造函数的执行流程\"><a href=\"#new-一个构造函数的执行流程\" class=\"headerlink\" title=\"new 一个构造函数的执行流程\"></a>new 一个构造函数的执行流程</h3><p>new 在执行时，会做下面这四件事：</p>\n<p>（1）开辟内存空间，在内存中创建一个新的空对象。</p>\n<p>（2）让 this 指向这个新的对象。</p>\n<p>（3）执行构造函数里面的代码，给这个新对象添加属性和方法。</p>\n<p>（4）返回这个新对象（所以构造函数里面不需要 return）。</p>\n<p>因为 this 指的是 new 一个 Object 之后的对象实例。于是，下面这段代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createStudent</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> student = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">    student.<span class=\"property\">name</span> = name; <span class=\"comment\">//第一个name指的是student对象定义的变量。第二个name指的是createStudent函数的参数。二者不一样</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以改进为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Student</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name; <span class=\"comment\">//this指的是构造函数中的对象实例</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意上方代码中的注释。</p>\n<h3 id=\"静态成员和实例成员\"><a href=\"#静态成员和实例成员\" class=\"headerlink\" title=\"静态成员和实例成员\"></a>静态成员和实例成员</h3><p>JavaScript 的构造函数中可以添加一些成员，可以在构造函数本身上添加，也可以在构造函数内部的 this 上添加。通过这两种方式添加的成员，就分别称为静态成员和实例成员。</p>\n<ul>\n<li><p>静态成员：在构造函数本上添加的成员称为静态成员，只能由构造函数本身来访问。</p>\n</li>\n<li><p>实例成员：在构造函数内部创建的对象成员称为实例成员，只能由实例化的对象来访问。</p>\n</li>\n</ul>\n<h3 id=\"类、实例\"><a href=\"#类、实例\" class=\"headerlink\" title=\"类、实例\"></a>类、实例</h3><p>使用同一个构造函数创建的对象，我们称为一类对象，也将一个构造函数称为一个<strong>类</strong>。</p>\n<p>通过一个构造函数创建的对象，称为该类的<strong>实例</strong>。</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>使用 instanceof 可以检查<strong>一个对象是否为一个类的实例</strong>。</p>\n<p><strong>语法如下</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象 <span class=\"keyword\">instanceof</span> 构造函数;</span><br></pre></td></tr></table></figure>\n\n<p>如果是，则返回 true；否则返回 false。</p>\n<p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Dog</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dog1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person1 <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>); <span class=\"comment\">// 打印结果： true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dog1 <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dog1 <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>); <span class=\"comment\">// 所有的对象都是Object的后代。因此，打印结果为：true</span></span><br></pre></td></tr></table></figure>\n\n<p>根据上方代码中的最后一行，需要补充一点：<strong>所有的对象都是 Object 的后代，因此 <code>任何对象 instanceof Object</code> 的返回结果都是 true</strong>。</p>\n<h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><h3 id=\"json-的介绍\"><a href=\"#json-的介绍\" class=\"headerlink\" title=\"json 的介绍\"></a>json 的介绍</h3><blockquote>\n<p>对象字面量和 json 比较像，这里我们对 json 做一个简单介绍。</p>\n</blockquote>\n<p>JSON：JavaScript Object Notation（JavaScript 对象表示形式）。</p>\n<p>JSON 和对象字面量的区别：JSON 的属性必须用双引号引号引起来，对象字面量可以省略。</p>\n<p>json 举例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">      &quot;name&quot; : &quot;zs&quot;,</span><br><span class=\"line\">      &quot;age&quot; : 18,</span><br><span class=\"line\">      &quot;sex&quot; : true,</span><br><span class=\"line\">      &quot;sayHi&quot; : function() &#123;</span><br><span class=\"line\">          console.log(this.name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>注：json 里一般放常量、数组、对象等，但很少放 function。</p>\n<p>另外，对象和 json 没有长度，json.length 的打印结果是 undefined。于是乎，自然也就不能用 for 循环遍历（因为遍历时需要获取长度 length）。</p>\n<p><strong>json 遍历的方法：</strong></p>\n<p>json 采用 <code>for...in...</code>进行遍历，和数组的遍历方式不同。如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> myJson = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;helloworld&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"string\">&quot;aaa&quot;</span>: <span class=\"number\">111</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"string\">&quot;bbb&quot;</span>: <span class=\"number\">222</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//json遍历的方法：for...in...</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> myJson) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key); <span class=\"comment\">//获取 键</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myJson[key]); <span class=\"comment\">//获取 值（第二种属性绑定和获取值的方法）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1518.png\"></p>\n","text":"在看本文之前，可以先复习前面的一篇文章：《04-JavaScript 基础&#x2F;11-对象简介.md》创建自定义对象的几种方法方式一：对象字面量对象的字面量就是一个{}。里面的属性和方法均是键值对：键：相当于属性名。值：相当于属性值，可以是任意类型的值（数字类型、字符串类型","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"31_2-原型链和原型继承（待更新）","slug":"JavaScript/32-原型链和原型继承（待更新）","date":"2023-02-16T07:30:25.456Z","updated":"2023-02-16T07:52:14.523Z","comments":true,"path":"api/articles/JavaScript/32-原型链和原型继承（待更新）.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在 ES6 中，我们可以通过 ES6 引入的<strong>类 Class</strong> 来实现面向对象的编程（下一篇文章会讲到）。但是<strong>在 ES6 之前，我们是通过构造函数和原型，来模拟类的实现机制</strong>。</p>\n<p>今天这篇文章，我们就来学习构造函数和原型。</p>\n","text":"前言在 ES6 中，我们可以通过 ES6 引入的类 Class 来实现面向对象的编程（下一篇文章会讲到）。但是在 ES6 之前，我们是通过构造函数和原型，来模拟类的实现机制。今天这篇文章，我们就来学习构造函数和原型。","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"31_3-类和构造继承（待更新）","slug":"JavaScript/33-类和构造继承（待更新）","date":"2023-02-16T07:30:25.458Z","updated":"2023-02-16T07:52:24.353Z","comments":true,"path":"api/articles/JavaScript/33-类和构造继承（待更新）.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n","text":"","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"35-事件简介","slug":"JavaScript/35-事件简介","date":"2023-02-16T07:30:25.462Z","updated":"2023-02-16T07:53:00.064Z","comments":true,"path":"api/articles/JavaScript/35-事件简介.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180126_1553.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"事件简介\"><a href=\"#事件简介\" class=\"headerlink\" title=\"事件简介\"></a>事件简介</h2><p>事件：就是文档或浏览器窗口中发生的一些特定的交互瞬间。对于 Web 应用来说，有下面这些代表性的事件：点击某个元素、将鼠标移动至某个元素上方、关闭弹窗等等。</p>\n<p>JavaScript 是以<strong>事件驱动为核心</strong>的一门语言。JavaScript 与 HTML 之间的交互是通过事件实现的。</p>\n<h3 id=\"事件的三要素\"><a href=\"#事件的三要素\" class=\"headerlink\" title=\"事件的三要素\"></a>事件的三要素</h3><p><strong>事件的三要素：事件源、事件、事件驱动程序</strong>。</p>\n<p>比如，我用手去按开关，灯亮了。这件事情里，事件源是：手。事件是：按开关。事件驱动程序是：灯开了或者关了。</p>\n<p>再比如，网页上弹出一个广告，我点击右上角的<code>X</code>，广告就关闭了。这件事情里，事件源是：<code>X</code>。事件是：onclick。事件驱动程序是：广告关闭了。</p>\n<p>于是我们可以总结出：谁引发的后续事件，谁就是事件源。</p>\n<p><strong>总结如下：</strong></p>\n<ul>\n<li><p>事件源：引发后续事件的html标签。</p>\n</li>\n<li><p>事件：js已经定义好了（见下图）。</p>\n</li>\n<li><p>事件驱动程序：对样式和html的操作。也就是DOM。</p>\n</li>\n</ul>\n<p>也就是说，我们可以在时间对应的属性中写一些js代码，当事件被触发时，这些代码将会执行。</p>\n<p><strong>代码书写步骤如下：</strong>（重要）</p>\n<ul>\n<li><p>（1）获取事件源：document.getElementById(“box”);   &#x2F;&#x2F; 类似于Android里面的findViewById</p>\n</li>\n<li><p>（2）绑定事件： 事件源box.事件onclick &#x3D; function(){ 事件驱动程序 };</p>\n</li>\n<li><p>（3）书写事件驱动程序：关于DOM的操作。</p>\n</li>\n</ul>\n<p>最简单的代码举例：（点击box1，然后弹框）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1、获取事件源</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2、绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 3、书写事件驱动程序</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我是弹出的内容&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>常见的事件如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_1553.png\"></p>\n<p>下面针对这事件的三要素，进行分别介绍。</p>\n<h3 id=\"1、获取事件源的方式（DOM节点的获取）\"><a href=\"#1、获取事件源的方式（DOM节点的获取）\" class=\"headerlink\" title=\"1、获取事件源的方式（DOM节点的获取）\"></a>1、获取事件源的方式（DOM节点的获取）</h3><p>获取事件源的常见方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);      <span class=\"comment\">//方式一：通过id获取单个标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>);     <span class=\"comment\">//方式二：通过 标签名 获得 标签数组，所以有s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;hehe&quot;</span>);  <span class=\"comment\">//方式三：通过 类名 获得 标签数组，所以有s</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、绑定事件的方式\"><a href=\"#2、绑定事件的方式\" class=\"headerlink\" title=\"2、绑定事件的方式\"></a>2、绑定事件的方式</h3><p>方式一：直接绑定匿名函数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//绑定事件的第一种方式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div1.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我是弹出的内容&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>方式二：先单独定义函数，再绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//绑定事件的第二种方式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div1.<span class=\"property\">onclick</span> = fn;   <span class=\"comment\">//注意，这里是fn，不是fn()。fn()指的是返回值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//单独定义函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我是弹出的内容&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意上方代码的注释。**绑定的时候，是写fn，不是写fn()**。fn代表的是整个函数，而fn()代表的是返回值。</p>\n<p>方式三：行内绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--行内绑定--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;fn()&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我是弹出的内容&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意第一行代码，绑定时，是写的<code>&quot;fn()&quot;</code>，不是写的<code>&quot;fn&quot;</code>。因为绑定的这段代码不是写在js代码里的，而是被识别成了<strong>字符串</strong>。</p>\n<h3 id=\"3、事件驱动程序\"><a href=\"#3、事件驱动程序\" class=\"headerlink\" title=\"3、事件驱动程序\"></a>3、事件驱动程序</h3><p>我们在上面是拿alert举例，不仅如此，我们还可以操作标签的属性和样式。举例如下：</p>\n<p>点击鼠标时，原本粉色的div变大了，背景变红：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//点击鼠标时，原本粉色的div变大了，背景变红了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div1.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div1.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"string\">&quot;200px&quot;</span>;   <span class=\"comment\">//属性值要写引号</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        div1.<span class=\"property\">style</span>.<span class=\"property\">height</span> = <span class=\"string\">&quot;200px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div1.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;red&quot;</span>;   <span class=\"comment\">//属性名是backgroundColor，不是background-color</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码的注意事项：</p>\n<ul>\n<li><p>在js里写属性值时，要用引号</p>\n</li>\n<li><p>在js里写属性名时，是<code>backgroundColor</code>，不是CSS里面的<code>background-color</code>。</p>\n</li>\n</ul>\n<p>实现效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_1720.gif\"></p>\n<h3 id=\"onload事件\"><a href=\"#onload事件\" class=\"headerlink\" title=\"onload事件\"></a>onload事件</h3><blockquote>\n<p>onload事件比较特殊，这里单独讲一下。</p>\n</blockquote>\n<p><strong>当页面加载（文本和图片）完毕的时候，触发onload事件。</strong></p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;smyhvae&quot;</span>);  <span class=\"comment\">//等页面加载完毕时，打印字符串</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>有一点我们要知道：<strong>js的加载是和html同步加载的</strong>。因此，如果使用元素在定义元素之前，容易报错。这个时候，onload事件就能派上用场了，我们可以把使用元素的代码放在onload里，就能保证这段代码是最后执行。</p>\n<p>建议是：整个页面上所有元素加载完毕再执行js内容。所以，window.onload可以预防使用标签在定义标签之前。</p>\n<p><strong>备注</strong>：关于 onLoad事件，在下一篇文章《DOM简介和DOM操作》中有更详细的讲解和示例。</p>\n<h3 id=\"事件举例：京东顶部广告栏\"><a href=\"#事件举例：京东顶部广告栏\" class=\"headerlink\" title=\"事件举例：京东顶部广告栏\"></a>事件举例：京东顶部广告栏</h3><p><img src=\"http://img.smyhvae.com/20180122_1020.png\"></p>\n<p>比如上面这张图，当鼠标点击右上角的<code>X</code>时，关掉整个广告栏，这就要用到事件。</p>\n<p>代码实现如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.top-banner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.w</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1210px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1210px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">700</span> <span class=\"number\">14px</span>/<span class=\"number\">20px</span> <span class=\"string\">&quot;simsum&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.hide</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none<span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;top-banner&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;topBanner&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;w&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;closeBanner&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：点击案例，隐藏盒子。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//思路：点击a链接，让top-banner这个盒子隐藏起来（加隐藏类名）。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.获取事件源和相关元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> closeBanner = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;closeBanner&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> topBanner = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;topBanner&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//2.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    closeBanner.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//3.书写事件驱动程序</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//类控制</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//        topBanner.className += &quot; hide&quot;; //保留原类名，添加新类名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        topBanner.<span class=\"property\">className</span> = <span class=\"string\">&quot;hide&quot;</span>;<span class=\"comment\">//替换旧类名（方式一）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//        topBanner.style.display = &quot;none&quot;; //方式二：与上一行代码的效果相同</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>注意最后一行代码，这种方式会替换旧类名，意思是，不管之前的类名叫什么，都会被修改。</p>\n<h3 id=\"事件举例：\"><a href=\"#事件举例：\" class=\"headerlink\" title=\"事件举例：\"></a>事件举例：</h3><p>要求实现效果：当鼠标悬停在img上时，更换为另外一张图片；鼠标离开时，还原为本来的图片。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//window.onload页面加载完毕以后再执行此代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放到img上，更换为另一张图片，也就是修改路径（src的值）。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.获取事件源</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.书写事件驱动程序</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.获取事件源</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> img = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.绑定事件(悬停事件：鼠标进入到事件源中，立即触发事件)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            img.<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//3.书写事件驱动程序(修改src)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                img.<span class=\"property\">src</span> = <span class=\"string\">&quot;image/jd2.png&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                this.src = &quot;image/jd2.png&quot;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.绑定事件(悬停事件：鼠标进入到事件源中，立即触发事件)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            img.<span class=\"property\">onmouseout</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//3.书写事件驱动程序(修改src)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                img.<span class=\"property\">src</span> = <span class=\"string\">&quot;image/jd1.png&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image/jd1.png&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;cursor: pointer;border: 1px solid #ccc;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","text":"事件简介事件：就是文档或浏览器窗口中发生的一些特定的交互瞬间。对于 Web 应用来说，有下面这些代表性的事件：点击某个元素、将鼠标移动至某个元素上方、关闭弹窗等等。JavaScript 是以事件驱动为核心的一门语言。JavaScript 与 HTML 之间的交互是通过事件实现的。","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"34-正则表达式","slug":"JavaScript/34-正则表达式","date":"2023-02-16T07:30:25.460Z","updated":"2023-02-16T07:52:45.622Z","comments":true,"path":"api/articles/JavaScript/34-正则表达式.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"正则表达式简介\"><a href=\"#正则表达式简介\" class=\"headerlink\" title=\"正则表达式简介\"></a>正则表达式简介</h2><p><strong>定义</strong>：正则表达式用于定义一些字符串的规则。</p>\n<p><strong>作用</strong>：计算机可以根据正则表达式，来检查一个字符串是否符合指定的规则；或者将字符串中符合规则的内容提取出来。</p>\n<p>如果你想查看正则更多的内容，可以查阅官方文档关于 RegExp 这个内置对象的用法。</p>\n<h2 id=\"创建正则表达式的对象\"><a href=\"#创建正则表达式的对象\" class=\"headerlink\" title=\"创建正则表达式的对象\"></a>创建正则表达式的对象</h2><h3 id=\"方式一：使用构造函数创建正则表达式的对象\"><a href=\"#方式一：使用构造函数创建正则表达式的对象\" class=\"headerlink\" title=\"方式一：使用构造函数创建正则表达式的对象\"></a>方式一：使用构造函数创建正则表达式的对象</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> 变量 = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;正则表达式&quot;</span>); <span class=\"comment\">// 注意，参数是字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量 = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;正则表达式&quot;</span>, <span class=\"string\">&quot;匹配模式&quot;</span>); <span class=\"comment\">// 注意，两个参数都是字符串</span></span><br></pre></td></tr></table></figure>\n\n<p>备注：<code>RegExp</code>的意思是 <strong>Regular expression</strong>。使用typeof检查正则对象，会返回object。</p>\n<p>上面的语法中，既可以传一个参数，也可以传两个参数。</p>\n<p>创建了正则表达式的对象后，该怎么使用呢？大致分为两个步骤：</p>\n<ul>\n<li><p>（1）创建正则表达式的对象 reg。</p>\n</li>\n<li><p>（2）使用 reg 的test() 方法，判断指定字符串是否符合规则。</p>\n</li>\n</ul>\n<p><strong>正则表达式的<code>test()</code>方法</strong>：【重要】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myReg.<span class=\"title function_\">test</span>(str); <span class=\"comment\">// 判断字符串 str 是否符合 指定的 myReg 这个正则表达式的规则</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：使用<code>test()</code>这个方法可以用来检查一个字符串是否符合正则表达式的规则，<strong>如果符合则返回true，否则返回false</strong>。</p>\n<p>我们来看看下面的例子。</p>\n<p><strong>1、传一个参数时</strong>：</p>\n<p>构造函数 RegExp 中，可以只传一个参数。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;a&quot;</span>); <span class=\"comment\">// 定义一个正则表达式：检查一个字符串中是否含有 a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&quot;qianguyihao&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&quot;smyh&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过 test()方法，判断字符串是否符合 上面定义的 reg 规则</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str1)); <span class=\"comment\">// 打印结果：true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str2)); <span class=\"comment\">// 打印结果：false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>注意，上面的例子中，我们是先定义了一个正则表达式的规则，然后通过正则表达式的<code>test()</code>方法来判断字符串是否符合之前定义的规则。</p>\n<p><strong>2、传两个参数时</strong>：匹配模式 【重要】</p>\n<p>构造函数 RegExp 中，也可以传两个参数。我们可以传递一个<strong>匹配模式</strong>作为第二个参数。这个参数可以是：</p>\n<ul>\n<li><p><code>i</code> 忽略大小写。这里的 i 指的是 ignore。</p>\n</li>\n<li><p><code>g</code> 全局匹配模式。这里的 g 指的是 global。</p>\n</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;qiangu&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// 打印结果：true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式二：使用字面量创建正则表达式\"><a href=\"#方式二：使用字面量创建正则表达式\" class=\"headerlink\" title=\"方式二：使用字面量创建正则表达式\"></a>方式二：使用字面量创建正则表达式</h3><p>我们可以使用字面量来创建正则表达式。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> 变量 = <span class=\"regexp\">/正则表达式/</span>;  <span class=\"comment\">// 注意，这个语法里没有引号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> 变量 = <span class=\"regexp\">/正则表达式/</span>匹配模式;  <span class=\"comment\">// 注意，这个语法里没有引号</span></span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/A/i</span>; <span class=\"comment\">// 定义正则表达式的规则：检查一个字符串中是否含有 a。忽略大小写。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;qiangu&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> reg);  <span class=\"comment\">// 打印结果：object</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// 打印结果：true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以上两种方式的对比\"><a href=\"#以上两种方式的对比\" class=\"headerlink\" title=\"以上两种方式的对比\"></a>以上两种方式的对比</h3><ul>\n<li><p>方式一：使用构造函数创建时，更加灵活，因为参数中还可以传递变量。</p>\n</li>\n<li><p>方式二：使用字面量的方式创建，更加简单。</p>\n</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;i&quot;</span>); <span class=\"comment\">// 方式一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a/i</span>; <span class=\"comment\">// 方式二</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这两行代码的作用是等价的。</p>\n<h3 id=\"避坑指南：全局匹配-g-慎用test-方法\"><a href=\"#避坑指南：全局匹配-g-慎用test-方法\" class=\"headerlink\" title=\"避坑指南：全局匹配 g 慎用test()方法\"></a>避坑指南：全局匹配 g 慎用test()方法</h3><p>对于非全局匹配的正则表达式，<code>test()</code>只会检测<strong>是否存在某个目标字符串</strong>（只要存在就为 true），多次检测的结果都相同。例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/test/</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;_test_test&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">reg.<span class=\"title function_\">test</span>(str) <span class=\"comment\">// true</span></span><br><span class=\"line\">reg.<span class=\"title function_\">test</span>(str) <span class=\"comment\">// true</span></span><br><span class=\"line\">reg.<span class=\"title function_\">test</span>(str) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>重点来了。</p>\n<p>当设置全局标志 <code>/g</code> 时，一旦字符串中还存在匹配，test() 方法都将返回 true，同时匹配成功后将把 <code>lastIndex</code> 属性的值<strong>设置为上次匹配成功结果之后的第一个字符所在的位置</strong>，下次匹配将从 <code>lastIndex</code> 指示的位置开始；匹配不成功时返回 false，同时将 lastIndex 属性的值重置为 0。</p>\n<p>举例：（很重要的例子，看仔细）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> reg = <span class=\"regexp\">/test/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;_test_test&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"property\">lastIndex</span>); <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>总结</strong>：</p>\n<p>全局匹配模式<code>g</code>一般用于 <code>exec()</code>、<code>match()</code>、<code>replace()</code>等方法。</p>\n<p>全局匹配模式<code>g</code>如果用于test()方法会有问题。因为g模式会生成一个<code>lastindex</code>参数来存储匹配最后一次的位置。</p>\n<p>参考链接：</p>\n<ul>\n<li><p><a href=\"https://juejin.im/post/5de9bd5fe51d45582c27b6f3\">JS正则表达式全局匹配的那些坑</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/Leolu007/article/details/8576490\">javascript正则全局匹配g慎用test方法</a></p>\n</li>\n<li><p><a href=\"https://github.com/qianguyihao/Web/issues/69\">issues</a></p>\n</li>\n</ul>\n<h2 id=\"正则表达式的简单语法\"><a href=\"#正则表达式的简单语法\" class=\"headerlink\" title=\"正则表达式的简单语法\"></a>正则表达式的简单语法</h2><h3 id=\"检查一个字符串中是否包含-a或b\"><a href=\"#检查一个字符串中是否包含-a或b\" class=\"headerlink\" title=\"检查一个字符串中是否包含 a或b\"></a>检查一个字符串中是否包含 a或b</h3><p><strong>写法1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a|b/</span>;</span><br></pre></td></tr></table></figure>\n\n<p>解释：使用 <code>|</code> 表示<code>或</code>的意思。</p>\n<p><strong>写法2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[ab]/</span>;  <span class=\"comment\">// 跟上面的那行语法，是等价的</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：这里的<code>[]</code>也是表示<code>或</code>的意思。</p>\n<p><code>[]</code>这个符号在正则还是比较常用的。我们接下来看几个例子。</p>\n<h3 id=\"表示：或\"><a href=\"#表示：或\" class=\"headerlink\" title=\"[]表示：或\"></a>[]表示：或</h3><p>一些规则：</p>\n<ul>\n<li><p><code>/[ab]/</code> 等价于 <code>/a|b/</code>：检查一个字符串中是否包含 <strong>a或b</strong></p>\n</li>\n<li><p><code>/[a-z]/</code>：检查一个字符串那种是否包含<strong>任意小写字母</strong></p>\n</li>\n<li><p><code>/[A-Z]/</code>：任意大写字母</p>\n</li>\n<li><p><code>/[A-z]/</code>：任意字母</p>\n</li>\n<li><p><code>/[0-9]/</code>：任意数字</p>\n</li>\n<li><p><code>/a[bde]c/</code>：检查一个字符串中是否包含 abc 或 adc 或 aec</p>\n</li>\n</ul>\n<h3 id=\"表示：除了\"><a href=\"#表示：除了\" class=\"headerlink\" title=\"[^ ] 表示：除了\"></a>[^ ] 表示：除了</h3><p>举例1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[^ab]/</span>; <span class=\"comment\">// 规则：字符串中，除了a、b之外，还有没有其他的字符内容？</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;acb&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str)); <span class=\"comment\">// 打印结果：true</span></span><br></pre></td></tr></table></figure>\n\n<p>举例2：（可以用来验证某字符串是否为 纯数字）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[^0-9]/</span>;  <span class=\"comment\">// 规则：字符串中，除了数字之外，还有没有其他的内容？</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1 = <span class=\"string\">&quot;1991&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&quot;199a1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str1)); <span class=\"comment\">// 打印结果：false （如果字符串是 纯数字，则返回 false）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">test</span>(str2)); <span class=\"comment\">// 打印结果：true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"支持正则表达式的-String-对象的方法\"><a href=\"#支持正则表达式的-String-对象的方法\" class=\"headerlink\" title=\"支持正则表达式的 String 对象的方法\"></a>支持正则表达式的 String 对象的方法</h2><p> String对象的如下方法，是支持正则表达式的：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">split()</td>\n<td align=\"left\">将字符串拆分成数组</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">search()</td>\n<td align=\"left\">搜索字符串中是否含有指定内容，返回索引 index</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">match()</td>\n<td align=\"left\">根据正则表达式，从一个字符串中将符合条件的内容提取出来</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">replace()</td>\n<td align=\"left\">将字符串中的指定内容，替换为新的内容并返回</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p>下面来分别介绍和举例。</p>\n<h3 id=\"split\"><a href=\"#split\" class=\"headerlink\" title=\"split()\"></a>split()</h3><p><code>split()</code>：将一个字符串拆分成一个数组。可以接受一个正则表达式作为参数。</p>\n<p>备注：关于<code>split()</code>更详细的用法，可以看之前的关于《内置对象：String》这篇文章。</p>\n<p><strong>正则相关的举例</strong>：根据任意字母，将字符串拆分成数组。</p>\n<p>代码实现：（通过正则）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;1a2b3c4d5e6f7g&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = str.<span class=\"title function_\">split</span>(<span class=\"regexp\">/[A-z]/</span>); <span class=\"comment\">// 参数是一个正则表达式：表示所有字母</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span><span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;4&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;5&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;6&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;7&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"search\"><a href=\"#search\" class=\"headerlink\" title=\"search()\"></a>search()</h3><p><code>search()</code>：搜索字符串中是否含有指定内容。如果搜索到指定内容，则会返回第一次出现的索引；否则返回-1。</p>\n<p><code>search()</code>方法可以接受一个正则表达式作为参数，然后会根据正则表达式去检索字符串。<code>serach()</code>只会查找第一个，即使设置全局匹配也没用。</p>\n<p><strong>举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;hello abc hello aec afc&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 搜索字符串中是否含有abc 或 aec 或 afc</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">result = str.<span class=\"title function_\">search</span>(<span class=\"regexp\">/a[bef]c/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result); <span class=\"comment\">// 打印结果：6</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"match\"><a href=\"#match\" class=\"headerlink\" title=\"match()\"></a>match()</h3><p><code>match()</code>：根据正则表达式，从一个字符串中将符合条件的内容提取出来，封装到一个数组中返回（即使只查询到一个结果）。</p>\n<p><strong>注意</strong>：默认情况下，<code>match()</code>方法只会找到<strong>第一个</strong>符合要求的内容，找到以后就停止检索。我们可以设置正则表达式为<strong>全局匹配</strong>模式，这样就会匹配到所有的内容，并以<strong>数组</strong>的形式返回。</p>\n<p>另外，我们可以为一个正则表达式设置多个匹配模式，且匹配模式的顺序无所谓。</p>\n<p><strong>代码举例</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;1a2a3a4a5e6f7A8B9C&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result1 = str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/[a-z]/</span>);   <span class=\"comment\">// 找到符合要求的第一个内容，然后返回</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result2 = str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/[a-z]/g</span>);  <span class=\"comment\">// 设置为“全局匹配”模式，匹配字符串中 所有的小写字母</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result3 = str.<span class=\"title function_\">match</span>(<span class=\"regexp\">/[a-z]/gi</span>); <span class=\"comment\">// 设置多个匹配模式，匹配字符串中 所有的字母（忽略大小写）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 打印结果：[&quot;a&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 打印结果：[&quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;e&quot;, &quot;f&quot;]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result3); <span class=\"comment\">// 打印结果：[&quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;e&quot;, &quot;f&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>总结</strong>：</p>\n<p>match()这个方法还是很实用的，可以在一个很长的字符串中，提取出<strong>有规则</strong>的内容。这不就是爬虫的时候经常会遇到的场景么？</p>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace()\"></a>replace()</h3><p><code>replace()</code>：将字符串中的指定内容，替换为新的内容并返回。不会修改原字符串。</p>\n<p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的字符串 = str.<span class=\"title function_\">replace</span>(被替换的内容，新的内容);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li><p>被替换的内容：可以接受一个正则表达式作为参数。</p>\n</li>\n<li><p>新的内容：默认只会替换第一个。如果需要替换全部符合条件的内容，可以设置正则表达式为<strong>全局匹配</strong>模式。</p>\n</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//replace()方法：替换</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2 = <span class=\"string\">&quot;Today is fine day,today is fine day !!!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;today&quot;</span>,<span class=\"string\">&quot;tomorrow&quot;</span>));  <span class=\"comment\">//只能替换第一个today</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str2.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/today/gi</span>,<span class=\"string\">&quot;tomorrow&quot;</span>)); <span class=\"comment\">//这里用到了正则，且为“全局匹配”模式，才能替换所有的today</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常见正则表达式举例\"><a href=\"#常见正则表达式举例\" class=\"headerlink\" title=\"常见正则表达式举例\"></a>常见正则表达式举例</h2><h3 id=\"检查一个字符串是否是一个合法手机号\"><a href=\"#检查一个字符串是否是一个合法手机号\" class=\"headerlink\" title=\"检查一个字符串是否是一个合法手机号\"></a>检查一个字符串是否是一个合法手机号</h3><p>手机号的规则：</p>\n<ul>\n<li><p>以1开头（<code>^1</code> 表示1开头 , <code>[^1]</code>表示非1或除了1）</p>\n</li>\n<li><p>第二位是3~9之间任意数字</p>\n</li>\n<li><p>三位以后任意9位数字</p>\n</li>\n</ul>\n<p>正则实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> phoneStr = <span class=\"string\">&quot;13067890123&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> phoneReg = <span class=\"regexp\">/^1[3-9][0-9]&#123;9&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(phoneReg.<span class=\"title function_\">test</span>(phoneStr));</span><br></pre></td></tr></table></figure>\n\n<p><strong>备注</strong>：如果在正则表达式中同时使用<code>^</code>和<code>$</code>符号，则要求字符串必须完全符合正则表达式。</p>\n<h3 id=\"去掉字符串开头和结尾的空格\"><a href=\"#去掉字符串开头和结尾的空格\" class=\"headerlink\" title=\"去掉字符串开头和结尾的空格\"></a>去掉字符串开头和结尾的空格</h3><p>正则实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^\\s*|\\s*$/g</span>,<span class=\"string\">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>解释如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^\\s*/</span>, <span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">//去除开头的空格</span></span><br><span class=\"line\"></span><br><span class=\"line\">str = str.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s*$/</span>, <span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">//去除结尾的空格</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断字符串是否为电子邮件\"><a href=\"#判断字符串是否为电子邮件\" class=\"headerlink\" title=\"判断字符串是否为电子邮件\"></a>判断字符串是否为电子邮件</h3><p>正则实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> emailReg = <span class=\"regexp\">/^\\w&#123;3,&#125;(\\.\\w+)*@[A-z0-9]+(\\.[A-z]&#123;2,5&#125;)&#123;1,2&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> email = <span class=\"string\">&quot;abchello@163.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(emailReg.<span class=\"title function_\">test</span>(email));</span><br></pre></td></tr></table></figure>\n\n\n\n","text":"正则表达式简介定义：正则表达式用于定义一些字符串的规则。作用：计算机可以根据正则表达式，来检查一个字符串是否符合指定的规则；或者将字符串中符合规则的内容提取出来。如果你想查看正则更多的内容，可以查阅官方文档关于 RegExp 这个内置对象的用法。创建正则表达式的对象方式一：使用构","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"36-DOM简介和DOM操作","slug":"JavaScript/36-DOM简介和DOM操作","date":"2023-02-16T07:30:25.464Z","updated":"2023-02-16T07:53:21.744Z","comments":true,"path":"api/articles/JavaScript/36-DOM简介和DOM操作.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180126_2105.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"常见概念\"><a href=\"#常见概念\" class=\"headerlink\" title=\"常见概念\"></a>常见概念</h2><h3 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h3><p>JavaScript基础分为三个部分：</p>\n<ul>\n<li><p>ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。</p>\n</li>\n<li><p><strong>DOM</strong>：文档对象模型（Document object Model），操作<strong>网页上的元素</strong>的API。比如让盒子移动、变色、轮播图等。</p>\n</li>\n<li><p><strong>BOM</strong>：浏览器对象模型（Browser Object Model），操作<strong>浏览器部分功能</strong>的API。比如让浏览器自动滚动。</p>\n</li>\n</ul>\n<h3 id=\"节点\"><a href=\"#节点\" class=\"headerlink\" title=\"节点\"></a>节点</h3><p><strong>节点</strong>（Node）：构成 HTML 网页的最基本单元。网页中的每一个部分都可以称为是一个节点，比如：html标签、属性、文本、注释、整个文档等都是一个节点。</p>\n<p>虽然都是节点，但是实际上他们的具体类型是不同的。常见节点分为四类：</p>\n<ul>\n<li><p>文档节点（文档）：整个 HTML 文档。整个 HTML 文档就是一个文档节点。</p>\n</li>\n<li><p>元素节点（标签）：HTML标签。</p>\n</li>\n<li><p>属性节点（属性）：元素的属性。</p>\n</li>\n<li><p>文本节点（文本）：HTML标签中的文本内容（包括标签之间的空格、换行）。</p>\n</li>\n</ul>\n<p>节点的类型不同，属性和方法也都不尽相同。所有的节点都是Object。</p>\n<h3 id=\"什么是DOM\"><a href=\"#什么是DOM\" class=\"headerlink\" title=\"什么是DOM\"></a>什么是DOM</h3><p><strong>DOM</strong>：Document Object Model，文档对象模型。DOM 为文档提供了结构化表示，并定义了如何通过脚本来访问文档结构。目的其实就是为了能让js操作html元素而制定的一个规范。</p>\n<p>DOM就是由节点组成的。</p>\n<p><strong>解析过程</strong>：<br>HTML加载完毕，渲染引擎会在内存中把HTML文档，生成一个DOM树，getElementById是获取内中DOM上的元素节点。然后操作的时候修改的是该元素的<strong>属性</strong>。</p>\n<p><strong>DOM树</strong>：（一切都是节点）</p>\n<p>DOM的数据结构如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_2105.png\"></p>\n<p>上图可知，<strong>在HTML当中，一切都是节点</strong>（非常重要）。节点的分类，在上一段中，已经讲了。</p>\n<p>整个html文档就是一个文档节点。所有的节点都是Object。</p>\n<h3 id=\"DOM可以做什么\"><a href=\"#DOM可以做什么\" class=\"headerlink\" title=\"DOM可以做什么\"></a>DOM可以做什么</h3><ul>\n<li><p>找对象（元素节点）</p>\n</li>\n<li><p>设置元素的属性值</p>\n</li>\n<li><p>设置元素的样式</p>\n</li>\n<li><p>动态创建和删除元素</p>\n</li>\n<li><p>事件的触发响应：事件源、事件、事件的驱动程序</p>\n</li>\n</ul>\n<h2 id=\"元素节点的获取\"><a href=\"#元素节点的获取\" class=\"headerlink\" title=\"元素节点的获取\"></a>元素节点的获取</h2><p>DOM节点的获取方式其实就是<strong>获取事件源的方式</strong>。关于事件，上一篇文章中已经讲到了。</p>\n<p>想要操作元素节点，必须首先要找到该节点。有三种方式可以获取DOM节点：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>); <span class=\"comment\">//方式一：通过 id 获取 一个 元素节点（为什么是一个呢？因为 id 是唯一的）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>); <span class=\"comment\">//方式二：通过 标签名 获取 元素节点数组，所以有s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;hehe&quot;</span>); <span class=\"comment\">//方式三：通过 类名 获取 元素节点数组，所以有s</span></span><br></pre></td></tr></table></figure>\n\n<p>既然方式二、方式三获取的是标签数组，那么习惯性是<strong>先遍历之后再使用</strong>。</p>\n<p>特殊情况：数组中的值只有1个。即便如此，这一个值也是包在数组里的。这个值的获取方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div1&quot;</span>)[<span class=\"number\">0</span>];    <span class=\"comment\">//取数组中的第一个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;hehe&quot;</span>)[<span class=\"number\">0</span>];  <span class=\"comment\">//取数组中的第一个元素</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DOM访问关系的获取\"><a href=\"#DOM访问关系的获取\" class=\"headerlink\" title=\"DOM访问关系的获取\"></a>DOM访问关系的获取</h2><p>DOM的节点并不是孤立的，因此可以通过DOM节点之间的相对关系对它们进行访问。如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_2140.png\"></p>\n<p>节点的访问关系，是以<strong>属性</strong>的方式存在的。</p>\n<p>JS中的<strong>父子兄</strong>访问关系：</p>\n<p><img src=\"http://img.smyhvae.com/20180126_2145.png\"></p>\n<p>这里我们要重点知道<strong>parentNode</strong>和<strong>children</strong>这两个属性的用法。下面分别介绍。</p>\n<h3 id=\"获取父节点\"><a href=\"#获取父节点\" class=\"headerlink\" title=\"获取父节点\"></a>获取父节点</h3><p>调用者就是节点。一个节点只有一个父节点，调用方式就是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">节点.<span class=\"property\">parentNode</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取兄弟节点\"><a href=\"#获取兄弟节点\" class=\"headerlink\" title=\"获取兄弟节点\"></a>获取兄弟节点</h3><p><strong>1、下一个节点 | 下一个元素节点</strong>：</p>\n<blockquote>\n<p>Sibling的中文是<strong>兄弟</strong>。</p>\n</blockquote>\n<p>（1）nextSibling：</p>\n<ul>\n<li><p>火狐、谷歌、IE9+版本：都指的是下一个节点（包括标签、空文档和换行节点）。</p>\n</li>\n<li><p>IE678版本：指下一个元素节点（标签）。</p>\n</li>\n</ul>\n<p>（2）nextElementSibling：</p>\n<ul>\n<li>火狐、谷歌、IE9+版本：都指的是下一个元素节点（标签）。</li>\n</ul>\n<p><strong>总结</strong>：为了获取下一个<strong>元素节点</strong>，我们可以这样做：在IE678中用nextSibling，在火狐谷歌IE9+以后用nextElementSibling，于是，综合这两个属性，可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下一个兄弟节点 = 节点.<span class=\"property\">nextElementSibling</span> || 节点.<span class=\"property\">nextSibling</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>2、前一个节点 | 前一个元素节点</strong>：</p>\n<blockquote>\n<p>previous的中文是：前一个。</p>\n</blockquote>\n<p>（1）previousSibling：</p>\n<ul>\n<li><p>火狐、谷歌、IE9+版本：都指的是前一个节点（包括标签、空文档和换行节点）。</p>\n</li>\n<li><p>IE678版本：指前一个元素节点（标签）。</p>\n</li>\n</ul>\n<p>（2）previousElementSibling：</p>\n<ul>\n<li>火狐、谷歌、IE9+版本：都指的是前一个元素节点（标签）。</li>\n</ul>\n<p><strong>总结</strong>：为了获取前一个<strong>元素节点</strong>，我们可以这样做：在IE678中用previousSibling，在火狐谷歌IE9+以后用previousElementSibling，于是，综合这两个属性，可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前一个兄弟节点 = 节点.<span class=\"property\">previousElementSibling</span> || 节点.<span class=\"property\">previousSibling</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3、补充</strong>：获得任意一个兄弟节点：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">节点自己.<span class=\"property\">parentNode</span>.<span class=\"property\">children</span>[index];  <span class=\"comment\">//随意得到兄弟节点</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取单个的子节点\"><a href=\"#获取单个的子节点\" class=\"headerlink\" title=\"获取单个的子节点\"></a>获取单个的子节点</h3><p><strong>1、第一个子节点 | 第一个子元素节点</strong>：</p>\n<p>（1）firstChild：</p>\n<ul>\n<li><p>火狐、谷歌、IE9+版本：都指的是第一个子节点（包括标签、空文档和换行节点）。</p>\n</li>\n<li><p>IE678版本：指第一个子元素节点（标签）。</p>\n</li>\n</ul>\n<p>（2）firstElementChild：</p>\n<ul>\n<li>火狐、谷歌、IE9+版本：都指的是第一个子元素节点（标签）。</li>\n</ul>\n<p><strong>总结</strong>：为了获取第一个<strong>子元素节点</strong>，我们可以这样做：在IE678中用firstChild，在火狐谷歌IE9+以后用firstElementChild，于是，综合这两个属性，可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一个子元素节点 = 节点.<span class=\"property\">firstElementChild</span> || 节点.<span class=\"property\">firstChild</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>2、最后一个子节点 | 最后一个子元素节点</strong>：</p>\n<p>（1）lastChild：</p>\n<ul>\n<li><p>火狐、谷歌、IE9+版本：都指的是最后一个子节点（包括标签、空文档和换行节点）。</p>\n</li>\n<li><p>IE678版本：指最后一个子元素节点（标签）。</p>\n</li>\n</ul>\n<p>（2）lastElementChild：</p>\n<ul>\n<li>火狐、谷歌、IE9+版本：都指的是最后一个子元素节点（标签）。</li>\n</ul>\n<p><strong>总结</strong>：为了获取最后一个<strong>子元素节点</strong>，我们可以这样做：在IE678中用lastChild，在火狐谷歌IE9+以后用lastElementChild，于是，综合这两个属性，可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">最后一个子元素节点 = 节点.<span class=\"property\">lastElementChild</span> || 节点.<span class=\"property\">lastChild</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取所有的子节点\"><a href=\"#获取所有的子节点\" class=\"headerlink\" title=\"获取所有的子节点\"></a>获取所有的子节点</h3><p>（1）<strong>childNodes</strong>：标准属性。返回的是指定元素的<strong>子节点</strong>的集合（包括元素节点、所有属性、文本节点）。是W3C的亲儿子。</p>\n<ul>\n<li>火狐 谷歌等高本版会把换行也看做是子节点。</li>\n</ul>\n<p>用法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子节点数组 = 父节点.<span class=\"property\">childNodes</span>;   <span class=\"comment\">//获取所有节点。</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）<strong>children</strong>：非标准属性。返回的是指定元素的<strong>子元素节点</strong>的集合。【重要】</p>\n<ul>\n<li>它只返回HTML节点，甚至不返回文本节点。</li>\n<li>在IE6&#x2F;7&#x2F;8中包含注释节点（在IE678中，注释节点不要写在里面）。</li>\n</ul>\n<p>虽然不是标准的DOM属性，但它和innerHTML方法一样，得到了几乎所有浏览器的支持。</p>\n<p>用法：（<strong>用的最多</strong>）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子节点数组 = 父节点.<span class=\"property\">children</span>;   <span class=\"comment\">//获取所有节点。用的最多。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DOM节点的操作（重要）\"><a href=\"#DOM节点的操作（重要）\" class=\"headerlink\" title=\"DOM节点的操作（重要）\"></a>DOM节点的操作（重要）</h2><p>上一段的内容：节点的<strong>访问关系</strong>都是<strong>属性</strong>。</p>\n<p>本段的内容：节点的<strong>操作</strong>都是<strong>函数</strong>（方法）。</p>\n<h3 id=\"创建节点\"><a href=\"#创建节点\" class=\"headerlink\" title=\"创建节点\"></a>创建节点</h3><p>格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新的标签(元素节点) = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;标签名&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>比如，如果我们想创建一个li标签，或者是创建一个不存在的adbc标签，可以这样做：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> a1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);   <span class=\"comment\">//创建一个li标签</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> a2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;adbc&quot;</span>);   <span class=\"comment\">//创建一个不存在的标签</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a2);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a2);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1135.png\"></p>\n<h3 id=\"插入节点\"><a href=\"#插入节点\" class=\"headerlink\" title=\"插入节点\"></a>插入节点</h3><p>插入节点有两种方式，它们的含义是不同的。</p>\n<p>方式1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父节点.<span class=\"title function_\">appendChild</span>(新的子节点);</span><br></pre></td></tr></table></figure>\n\n<p>解释：父节点的最后插入一个新的子节点。</p>\n<p>方式2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父节点.<span class=\"title function_\">insertBefore</span>(新的子节点,作为参考的子节点)</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<ul>\n<li>在参考节点前插入一个新的节点。</li>\n<li>如果参考节点为null，那么他将在父节点里面的最后插入一个子节点。</li>\n</ul>\n<p><img src=\"http://img.smyhvae.com/20180127_1257.png\"></p>\n<p>我们可以看到，li标签确实被插入到了box1标签的里面，和box2并列了。</p>\n<p>方式2的举例：</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1302.png\"></p>\n<p>我们可以看到，b1标签被插入到了box1标签的里面，和a1标签并列，在a1标签的前面。</p>\n<p><strong>特别强调：</strong></p>\n<p>关于方式1的appendChild方法，这里要强调一下。比如，现在有下面这样一个div结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box11&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box12&quot;</span>&gt;</span>生命壹号<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box21&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box22&quot;</span>&gt;</span>永不止步<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>上方结构中，子盒子box12是在父亲box11里的，子盒子box22是在父亲box21里面的。现在，如果我调用方法<code>box11.appendChild(box22)</code>，<strong>最后产生的结果是：box22会跑到box11中</strong>（也就是说，box22不在box21里面了）。这是一个很神奇的事情：</p>\n<p><img src=\"http://img.smyhvae.com/20180129_2125.png\"></p>\n<h3 id=\"删除节点\"><a href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"></a>删除节点</h3><p>格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父节点.<span class=\"title function_\">removeChild</span>(子节点);</span><br></pre></td></tr></table></figure>\n\n<p>解释：<strong>用父节点删除子节点</strong>。必须要指定是删除哪个子节点。</p>\n<p>如果我想删除自己这个节点，可以这么做：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node1.<span class=\"property\">parentNode</span>.<span class=\"title function_\">removeChild</span>(node1);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复制节点（克隆节点）\"><a href=\"#复制节点（克隆节点）\" class=\"headerlink\" title=\"复制节点（克隆节点）\"></a>复制节点（克隆节点）</h3><p>格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">要复制的节点.<span class=\"title function_\">cloneNode</span>();       <span class=\"comment\">//括号里不带参数和带参数false，效果是一样的。</span></span><br><span class=\"line\"></span><br><span class=\"line\">要复制的节点.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>括号里带不带参数，效果是不同的。解释如下：</p>\n<ul>\n<li><p>不带参数&#x2F;带参数false：只复制节点本身，不复制子节点。</p>\n</li>\n<li><p>带参数true：既复制节点本身，也复制其所有的子节点。</p>\n</li>\n</ul>\n<h2 id=\"设置节点的属性\"><a href=\"#设置节点的属性\" class=\"headerlink\" title=\"设置节点的属性\"></a>设置节点的属性</h2><p>我们可以获取节点的属性值、设置节点的属性值、删除节点的属性。</p>\n<p>我们就统一拿下面这个标签来举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/1.jpg&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;image-box&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;美女图片&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;地铁一瞥&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;a1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下面分别介绍。</p>\n<h3 id=\"1、获取节点的属性值\"><a href=\"#1、获取节点的属性值\" class=\"headerlink\" title=\"1、获取节点的属性值\"></a>1、获取节点的属性值</h3><p><strong>方式1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素节点.属性名;</span><br><span class=\"line\">元素节点[属性名];</span><br></pre></td></tr></table></figure>\n\n<p>举例：（获取节点的属性值）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/1.jpg&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;image-box&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;美女图片&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;地铁一瞥&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;a1&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> myNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;img&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"property\">src</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"property\">className</span>);    <span class=\"comment\">//注意，是className，不是class</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"property\">title</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;------------&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode[<span class=\"string\">&quot;src&quot;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode[<span class=\"string\">&quot;className&quot;</span>]); <span class=\"comment\">//注意，是className，不是class</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode[<span class=\"string\">&quot;title&quot;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中的img标签，有各种属性，我们可以逐一获取，打印结果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1340.png\"></p>\n<p><strong>方式2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素节点.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;属性名称&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;src&quot;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;class&quot;</span>));   <span class=\"comment\">//注意是class，不是className</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myNode.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;title&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1345.png\"></p>\n<p>方式1和方式2的区别在于：前者是直接操作标签，后者是把标签作为DOM节点。推荐方式2。</p>\n<h3 id=\"2、设置节点的属性值\"><a href=\"#2、设置节点的属性值\" class=\"headerlink\" title=\"2、设置节点的属性值\"></a>2、设置节点的属性值</h3><p>方式1举例：（设置节点的属性值）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myNode.<span class=\"property\">src</span> = <span class=\"string\">&quot;images/2.jpg&quot;</span>   <span class=\"comment\">//修改src的属性值</span></span><br><span class=\"line\">myNode.<span class=\"property\">className</span> = <span class=\"string\">&quot;image2-box&quot;</span>;  <span class=\"comment\">//修改class的name</span></span><br></pre></td></tr></table></figure>\n\n<p>方式2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素节点.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;属性名&quot;</span>, <span class=\"string\">&quot;新的属性值&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>方式2举例：（设置节点的属性值）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;src&quot;</span>,<span class=\"string\">&quot;images/3.jpg&quot;</span>);</span><br><span class=\"line\">myNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;class&quot;</span>,<span class=\"string\">&quot;image3-box&quot;</span>);</span><br><span class=\"line\">myNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;id&quot;</span>,<span class=\"string\">&quot;你好&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"3、删除节点的属性\"><a href=\"#3、删除节点的属性\" class=\"headerlink\" title=\"3、删除节点的属性\"></a>3、删除节点的属性</h3><p>格式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素节点.<span class=\"title function_\">removeAttribute</span>(属性名);</span><br></pre></td></tr></table></figure>\n\n<p>举例：（删除节点的属性）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myNode.<span class=\"title function_\">removeAttribute</span>(<span class=\"string\">&quot;class&quot;</span>);</span><br><span class=\"line\">myNode.<span class=\"title function_\">removeAttribute</span>(<span class=\"string\">&quot;id&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>获取节点的属性值和设置节点的属性值，都有两种方式。</p>\n<p><strong>如果是节点的“原始属性”</strong>（比如 普通标签的<code>class/className</code>属性、普通标签的<code>style</code>属性、普通标签的 title属性、img 标签的<code>src</code>属性、超链接的<code>href</code>属性等），<strong>方式1和方式2是等价的</strong>，可以混用。怎么理解混用呢？比如说：用 <code>div.title = &#39;我是标题&#39;</code>设置属性，用 <code>div.getAttribute(&#39;title&#39;)</code>获取属性，就是混用。</p>\n<p>但如果是节点的“非原始属性”，比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div.<span class=\"property\">aaa</span> = <span class=\"string\">&#x27;qianguyihao&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">div.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;bbb&#x27;</span>, <span class=\"string\">&#x27;qianguyihao&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面的这个“非原始属性”，在使用这两种方式时，是有区别的。区别如下：</p>\n<ul>\n<li><p>方式1 的<code>元素节点.属性</code>和<code>元素节点[属性]</code>：绑定的属性值不会出现在标签上。</p>\n</li>\n<li><p>方式2 的<code>get/set/removeAttribut</code>：绑定的属性值会出现在标签上。</p>\n</li>\n<li><p><strong>这两种方式不能交换使用</strong>，get值和set值必须使用同一种方法。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;主体&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;asdfasdfadsfd&quot;</span>&gt;</span>我爱你中国<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//采用方式一进行set</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div.<span class=\"property\">aaaa</span> = <span class=\"string\">&quot;1111&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div.<span class=\"property\">aaaa</span>);    <span class=\"comment\">//打印结果：1111。可以打印出来，但是不会出现在标签上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//采用方式二进行set</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;bbbb&quot;</span>,<span class=\"string\">&quot;2222&quot;</span>);    <span class=\"comment\">//bbbb作为新增的属性，会出现在标签上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;aaaa&quot;</span>));   <span class=\"comment\">//打印结果：null。因为方式一的set，无法采用方式二进行get。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div.<span class=\"property\">bbbb</span>);                   <span class=\"comment\">//打印结果：undefined。因为方式二的set，无法采用方式一进行get。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"DOM对象的属性-补充\"><a href=\"#DOM对象的属性-补充\" class=\"headerlink\" title=\"DOM对象的属性-补充\"></a>DOM对象的属性-补充</h2><h3 id=\"innerHTML和innerText的区别\"><a href=\"#innerHTML和innerText的区别\" class=\"headerlink\" title=\"innerHTML和innerText的区别\"></a>innerHTML和innerText的区别</h3><ul>\n<li><p>value：标签的value属性。</p>\n</li>\n<li><p><strong>innerHTML</strong>：双闭合标签里面的内容（包含标签）。</p>\n</li>\n<li><p><strong>innerText</strong>：双闭合标签里面的内容（不包含标签）。（老版本的火狐用textContent）</p>\n</li>\n</ul>\n<p><strong>获取内容举例：</strong></p>\n<p>如果我们想获取innerHTML和innerText里的内容，看看会如何：（innerHTML会获取到标签本身，而innerText则不会）</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1652.png\"></p>\n<p><strong>修改内容举例：</strong>（innerHTML会修改标签本身，而innerText则不会）</p>\n<p><img src=\"http://img.smyhvae.com/20180127_1657.png\"></p>\n<h3 id=\"nodeType属性\"><a href=\"#nodeType属性\" class=\"headerlink\" title=\"nodeType属性\"></a>nodeType属性</h3><p>这里讲一下nodeType属性。</p>\n<ul>\n<li><p><strong>nodeType &#x3D;&#x3D; 1  表示的是元素节点</strong>（标签） 。记住：在这里，元素就是标签。</p>\n</li>\n<li><p>nodeType &#x3D;&#x3D; 2  表示是属性节点。</p>\n</li>\n<li><p>nodeType &#x3D;&#x3D; 3  是文本节点。</p>\n</li>\n</ul>\n<h3 id=\"nodeType、nodeName、nodeValue\"><a href=\"#nodeType、nodeName、nodeValue\" class=\"headerlink\" title=\"nodeType、nodeName、nodeValue\"></a>nodeType、nodeName、nodeValue</h3><p>我们那下面这个标签来举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;111&quot;</span>&gt;</span></span><br><span class=\"line\">    生命壹号</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这个标签就包含了三种节点：</p>\n<ul>\n<li><p>元素节点（标签）</p>\n</li>\n<li><p>属性节点</p>\n</li>\n<li><p>文本节点</p>\n</li>\n</ul>\n<p>获取这三个节点的方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);  <span class=\"comment\">//获取元素节点（标签）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> attribute = element.<span class=\"title function_\">getAttributeNode</span>(<span class=\"string\">&quot;id&quot;</span>); <span class=\"comment\">//获取box1的属性节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> txt = element.<span class=\"property\">firstChild</span>;                   <span class=\"comment\">//获取box1的文本节点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> value = element.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&quot;id&quot;</span>);         <span class=\"comment\">//获取id的属性值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(attribute);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value);</span><br></pre></td></tr></table></figure>\n\n<p>打印结果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180128_1935.png\"></p>\n<p>既然这三个都是节点，如果我想获取它们的nodeType、nodeName、nodeValue，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);  <span class=\"comment\">//获取元素节点（标签）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> attribute = element.<span class=\"title function_\">getAttributeNode</span>(<span class=\"string\">&quot;id&quot;</span>); <span class=\"comment\">//获取box1的属性节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> txt = element.<span class=\"property\">firstChild</span>;                   <span class=\"comment\">//获取box1的文本节点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取nodeType</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element.<span class=\"property\">nodeType</span>);       <span class=\"comment\">//1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(attribute.<span class=\"property\">nodeType</span>);     <span class=\"comment\">//2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt.<span class=\"property\">nodeType</span>);           <span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取nodeName</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element.<span class=\"property\">nodeName</span>);       <span class=\"comment\">//DIV</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(attribute.<span class=\"property\">nodeName</span>);     <span class=\"comment\">//id</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt.<span class=\"property\">nodeName</span>);           <span class=\"comment\">//#text</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;--------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取nodeValue</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element.<span class=\"property\">nodeValue</span>);     <span class=\"comment\">//null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(attribute.<span class=\"property\">nodeValue</span>);   <span class=\"comment\">//box1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt.<span class=\"property\">nodeValue</span>);         <span class=\"comment\">//生命壹号</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180128_1939.png\"></p>\n<h2 id=\"文档的加载\"><a href=\"#文档的加载\" class=\"headerlink\" title=\"文档的加载\"></a>文档的加载</h2><p>浏览器在加载一个页面时，是按照自上向下的顺序加载的，读取到一行就运行一行。如果将script标签写到页面的上边，在代码执行时，页面还没有加载，页面没有加载DOM对象也没有加载，会导致无法获取到DOM对象。</p>\n<p><strong>onload 事件</strong>：</p>\n<p>onload 事件会在整个页面加载完成之后才触发。为 window 绑定一个onload事件，该事件对应的响应函数将会在页面加载完成之后执行，这样可以确保我们的代码执行时所有的DOM对象已经加载完毕了。</p>\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 【方式一：先加载，后执行】这段 js 代码是写在 &lt;head&gt; 标签里的，所以建议放在 window.onload 里面。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 获取id为btn的按钮</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;btn&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 为按钮绑定点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;hello&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>点我一下<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 【方式二：后加载，后执行】这段 js 代码是写在 &lt;body&gt; 标签里的，代码的位置是处在页面的下方。这么做，也可以确保：在页面加载完毕后，再执行 js 代码。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 获取id为btn的按钮</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;btn&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 为按钮绑定点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;hello&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，方式一和方式二均可以确保：在页面加载完毕后，再执行 js 代码。</p>\n","text":"常见概念JavaScript的组成JavaScript基础分为三个部分：ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。DOM：文档对象模型（Document object Model），操作网页上的元素的API。比如","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"38-offset相关属性和匀速动画（轮播图的实现）","slug":"JavaScript/38-offset相关属性和匀速动画（含轮播图的实现）","date":"2023-02-16T07:30:25.469Z","updated":"2023-02-16T07:54:10.492Z","comments":true,"path":"api/articles/JavaScript/38-offset相关属性和匀速动画（含轮播图的实现）.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180202_1725.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>JS动画的主要内容如下：</p>\n<p>1、三大家族和一个事件对象：</p>\n<ul>\n<li><p>三大家族：offset&#x2F;scroll&#x2F;client。也叫三大系列。</p>\n</li>\n<li><p>事件对象&#x2F;event（事件被触动时，鼠标和键盘的状态）（通过属性控制）。</p>\n</li>\n</ul>\n<p>2、动画(闪现&#x2F;匀速&#x2F;缓动)</p>\n<p>3、冒泡&#x2F;兼容&#x2F;封装</p>\n<h2 id=\"offset-家族的组成\"><a href=\"#offset-家族的组成\" class=\"headerlink\" title=\"offset 家族的组成\"></a>offset 家族的组成</h2><p>我们知道，JS动画的三大家族包括：offset&#x2F;scroll&#x2F;client。今天来讲一下offset，以及与其相关的匀速动画。</p>\n<blockquote>\n<p>offset的中文是：偏移，补偿，位移。</p>\n</blockquote>\n<p>js中有一套方便的<strong>获取元素尺寸</strong>的办法就是offset家族。offset家族包括：</p>\n<ul>\n<li><p>offsetWidth</p>\n</li>\n<li><p>offsetHight</p>\n</li>\n<li><p>offsetLeft</p>\n</li>\n<li><p>offsetTop</p>\n</li>\n<li><p>offsetParent</p>\n</li>\n</ul>\n<p>下面分别介绍。</p>\n<h3 id=\"1、offsetWidth-和-offsetHight\"><a href=\"#1、offsetWidth-和-offsetHight\" class=\"headerlink\" title=\"1、offsetWidth 和 offsetHight\"></a>1、offsetWidth 和 offsetHight</h3><p><code>offsetWidth</code> 和 <code>offsetHight</code>：获取元素的<strong>宽高 + padding + border</strong>，不包括margin。如下：</p>\n<ul>\n<li><p>offsetWidth &#x3D; width + padding + border</p>\n</li>\n<li><p>offsetHeight &#x3D; Height + padding + border</p>\n</li>\n</ul>\n<p>这两个属性，他们绑定在了所有的节点元素上。获取元素之后，只要调用这两个属性，我们就能够获取元素节点的宽和高。</p>\n<p>举例如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> solid <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div1.<span class=\"property\">offsetHeight</span>);          <span class=\"comment\">//打印结果：140（100+20+20）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> div1.<span class=\"property\">offsetHeight</span>);   <span class=\"comment\">//打印结果：number</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、offsetParent\"><a href=\"#2、offsetParent\" class=\"headerlink\" title=\"2、offsetParent\"></a>2、offsetParent</h3><p><code>offsetParent</code>：获取当前元素的<strong>定位父元素</strong>。</p>\n<ul>\n<li><p>如果当前元素的父元素，<strong>有CSS定位</strong>（position为absolute、relative、fixed），那么 <code>offsetParent</code> 获取的是<strong>最近的</strong>那个父元素。</p>\n</li>\n<li><p>如果当前元素的父元素，<strong>没有CSS定位</strong>（position为absolute、relative、fixed），那么<code>offsetParent</code> 获取的是<strong>body</strong>。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;position: absolute;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;position: fixed;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> box3 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box3&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box3.<span class=\"property\">offsetParent</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1725.png\"></p>\n<h3 id=\"3、offsetLeft-和-offsetTop\"><a href=\"#3、offsetLeft-和-offsetTop\" class=\"headerlink\" title=\"3、offsetLeft 和 offsetTop\"></a>3、offsetLeft 和 offsetTop</h3><p><code>offsetLeft</code>：当前元素相对于其<strong>定位父元素</strong>的水平偏移量。</p>\n<p><code>offsetTop</code>：当前元素相对于其<strong>定位父元素</strong>的垂直偏移量。</p>\n<p>备注：从父亲的 padding 开始算起，父亲的 border 不算在内。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">100px</span> solid <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*position: absolute;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*left: 10px;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*top: 10px;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;left: 10px&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> box2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box2&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//offsetTop和offsetLeft</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box2.<span class=\"property\">offsetLeft</span>);  <span class=\"comment\">//100</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box2.<span class=\"property\">style</span>.<span class=\"property\">left</span>);  <span class=\"comment\">//10px</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在父盒子有定位的情况下，offsetLeft &#x3D;&#x3D; style.left(去掉px之后)。注意，后者只识别行内样式。但区别不仅仅于此，下面会讲。</p>\n<h3 id=\"offsetLeft-和-style-left-区别\"><a href=\"#offsetLeft-和-style-left-区别\" class=\"headerlink\" title=\"offsetLeft 和 style.left 区别\"></a>offsetLeft 和 style.left 区别</h3><p>（1）最大区别在于：</p>\n<p>offsetLeft 可以返回无定位父元素的偏移量。如果父元素中都没有定位，则body为准。</p>\n<p>style.left 只能获取行内样式，如果父元素中都没有设置定位，则返回””（意思是，返回空字符串）;</p>\n<p>（2）offsetTop 返回的是数字，而 style.top 返回的是字符串，而且还带有单位：px。</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">div.<span class=\"property\">offsetLeft</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"string\">&quot;100px&quot;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>（3）offsetLeft 和 offsetTop <strong>只读</strong>，而 style.left 和 style.top 可读写（只读是获取值，可写是修改值）</p>\n<p>总结：我们一般的做法是：<strong>用offsetLeft 和 offsetTop 获取值，用style.left 和 style.top 赋值</strong>（比较方便）。理由如下：</p>\n<ul>\n<li><p>style.left：只能获取行内式，获取的值可能为空，容易出现NaN。</p>\n</li>\n<li><p>offsetLeft：获取值特别方便，而且是现成的number，方便计算。它是只读的，不能赋值。</p>\n</li>\n</ul>\n<h2 id=\"动画的种类\"><a href=\"#动画的种类\" class=\"headerlink\" title=\"动画的种类\"></a>动画的种类</h2><ul>\n<li><p>闪现（基本不用）</p>\n</li>\n<li><p>匀速（本文重点）</p>\n</li>\n<li><p>缓动（后续重点）</p>\n</li>\n</ul>\n<p>简单举例如下：（每间隔500ms，向右移动盒子100px）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>动画<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;left: 0px&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1、闪动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//    btn.onclick = function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//        div.style.left = &quot;500px&quot;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//2、匀速运动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定时器，每隔一定的时间向右走一些</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">parseInt</span>(div.<span class=\"property\">style</span>.<span class=\"property\">left</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//动画原理： 盒子未来的位置 = 盒子现在的位置 + 步长；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//方法1：用offsetLeft获取值，用style.left赋值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = div.<span class=\"property\">offsetLeft</span> + <span class=\"number\">100</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 方法2：必须一开始就在DOM节点上添加 style=&quot;left: 0px;&quot;属性，才能用方法2。否则， div.style.left 的值为 NaN</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// div.style.left = parseInt(div.style.left)+100+&quot;px&quot;;  //方法2：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1840.gif\"></p>\n<h2 id=\"匀速动画的封装：每间隔30ms，移动盒子10px【重要】\"><a href=\"#匀速动画的封装：每间隔30ms，移动盒子10px【重要】\" class=\"headerlink\" title=\"匀速动画的封装：每间隔30ms，移动盒子10px【重要】\"></a>匀速动画的封装：每间隔30ms，移动盒子10px【重要】</h2><p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">195px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>运动到 left = 200px<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>运动到 left = 400px<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btnArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> box2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box2&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> box3 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box3&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btnArr[<span class=\"number\">0</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//如果有一天我们要传递另外一个盒子，那么我们的方法就不好用了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//所以我们要增加第二个参数，被移动的盒子本身。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(box2, <span class=\"number\">200</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(box3, <span class=\"number\">200</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btnArr[<span class=\"number\">1</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(box2, <span class=\"number\">400</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(box3, <span class=\"number\">400</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//【重要】方法的封装：每间隔30ms，将盒子向右移动10px</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\">ele, target</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//要用定时器，先清除定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//一个盒子只能有一个定时器，这样的话，不会和其他盒子出现定时器冲突</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//我们可以把定时器本身，当成为盒子的一个属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//我们要求盒子既能向前又能向后，那么我们的步长就得有正有负</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//目标值如果大于当前值取正，目标值如果小于当前值取负</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> speed = target &gt; ele.<span class=\"property\">offsetLeft</span> ? <span class=\"number\">10</span> : -<span class=\"number\">10</span>;  <span class=\"comment\">//speed指的是步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ele.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//在执行之前就获取当前值和目标值之差</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> val = target - ele.<span class=\"property\">offsetLeft</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = ele.<span class=\"property\">offsetLeft</span> + speed + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//移动的过程中，如果目标值和当前值之差如果小于步长，那么就不能在前进了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//因为步长有正有负，所有转换成绝对值来比较</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(val) &lt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(speed)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = target + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">30</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现的效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_1910.gif\"></p>\n<p>上方代码中的方法封装，可以作为一个模板步骤，要记住。其实，这个封装的方法，写成下面这样，会更严谨，更容易理解：（将if语句进行了改进）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//【重要】方法的封装：每间隔30ms，将盒子向右移动10px</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\">ele, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//要用定时器，先清除定时器</span></span><br><span class=\"line\">    <span class=\"comment\">//一个盒子只能有一个定时器，这样的话，不会和其他盒子出现定时器冲突</span></span><br><span class=\"line\">    <span class=\"comment\">//我们可以把定时器本身，当成为盒子的一个属性</span></span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span><br><span class=\"line\">    <span class=\"comment\">//我们要求盒子既能向前又能向后，那么我们的步长就得有正有负</span></span><br><span class=\"line\">    <span class=\"comment\">//目标值如果大于当前值取正，目标值如果小于当前值取负</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> speed = target &gt; ele.<span class=\"property\">offsetLeft</span> ? <span class=\"number\">10</span> : -<span class=\"number\">10</span>;  <span class=\"comment\">//speed指的是步长</span></span><br><span class=\"line\">    ele.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在执行之前就获取当前值和目标值之差</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> val = target - ele.<span class=\"property\">offsetLeft</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//移动的过程中，如果目标值和当前值之差如果小于步长，那么就不能在前进了</span></span><br><span class=\"line\">        <span class=\"comment\">//因为步长有正有负，所有转换成绝对值来比较</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(val) &lt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(speed)) &#123;  <span class=\"comment\">//如果val小于步长，则直接到达目的地；否则，每次移动一个步长</span></span><br><span class=\"line\">            ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = target + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = ele.<span class=\"property\">offsetLeft</span> + speed + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">30</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码举例：轮播图的实现\"><a href=\"#代码举例：轮播图的实现\" class=\"headerlink\" title=\"代码举例：轮播图的实现\"></a>代码举例：轮播图的实现</h2><p>完整版代码如下：（注释已经比较详细）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Type&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题文档<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.all</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">7px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.screen</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.screen</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.screen</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">3000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.all</span> <span class=\"selector-tag\">ol</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.all</span> <span class=\"selector-tag\">ol</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.all</span> <span class=\"selector-tag\">ol</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.current</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#arr</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#arr</span> <span class=\"selector-tag\">span</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-top</span>: -<span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;黑体&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">opacity</span>: <span class=\"number\">0.3</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#arr</span> <span class=\"selector-id\">#right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：无缝滚动。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//思路：赋值第一张图片放到ul的最后，然后当图片切换到第五张的时候</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//     直接切换第六章，再次从第一张切换到第二张的时候先瞬间切换到</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//     第一张图片，然后滑动到第二张</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.获取事件源及相关元素。（老三步）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.复制第一张图片所在的li,添加到ul的最后面。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.给ol中添加li，ul中的个数-1个，并点亮第一个按钮。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//4.鼠标放到ol的li上切换图片</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//5.添加定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//6.左右切换图片（鼠标放上去隐藏，移开显示）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.获取事件源及相关元素。（老三步）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> all = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;all&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> screen = all.<span class=\"property\">firstElementChild</span> || all.<span class=\"property\">firstChild</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> imgWidth = screen.<span class=\"property\">offsetWidth</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> ul = screen.<span class=\"property\">firstElementChild</span> || screen.<span class=\"property\">firstChild</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> ol = screen.<span class=\"property\">children</span>[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> div = screen.<span class=\"property\">lastElementChild</span> || screen.<span class=\"property\">lastChild</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> spanArr = div.<span class=\"property\">children</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.复制第一张图片所在的li,添加到ul的最后面。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> ulNewLi = ul.<span class=\"property\">children</span>[<span class=\"number\">0</span>].<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ul.<span class=\"title function_\">appendChild</span>(ulNewLi);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.给ol中添加li，ul中的个数-1个，并点亮第一个按钮。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ul.<span class=\"property\">children</span>.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> olNewLi = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                olNewLi.<span class=\"property\">innerHTML</span> = i + <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                ol.<span class=\"title function_\">appendChild</span>(olNewLi)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> olLiArr = ol.<span class=\"property\">children</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            olLiArr[<span class=\"number\">0</span>].<span class=\"property\">className</span> = <span class=\"string\">&quot;current&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//4.鼠标放到ol的li上切换图片</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; olLiArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//自定义属性，把索引值绑定到元素的index属性上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                olLiArr[i].<span class=\"property\">index</span> = i;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                olLiArr[i].<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//排他思想</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; olLiArr.<span class=\"property\">length</span>; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        olLiArr[j].<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">this</span>.<span class=\"property\">className</span> = <span class=\"string\">&quot;current&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//鼠标放到小的方块上的时候索引值和key以及square同步</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    key = this.index;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    square = this.index;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    key = square = <span class=\"variable language_\">this</span>.<span class=\"property\">index</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//移动盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">animate</span>(ul, -<span class=\"variable language_\">this</span>.<span class=\"property\">index</span> * imgWidth);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//5.添加定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> timer = <span class=\"built_in\">setInterval</span>(autoPlay, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//固定向右切换图片</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//两个定时器（一个记录图片，一个记录小方块）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> key = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> square = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">autoPlay</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//通过控制key的自增来模拟图片的索引值，然后移动ul</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                key++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (key &gt; olLiArr.<span class=\"property\">length</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//图片已经滑动到最后一张，接下来，跳转到第一张，然后在滑动到第二张</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    ul.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    key = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">animate</span>(ul, -key * imgWidth);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//通过控制square的自增来模拟小方块的索引值，然后点亮盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//排他思想做小方块</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                square++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (square &gt; olLiArr.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;<span class=\"comment\">//索引值不能大于等于5，如果等于5，立刻变为0；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    square = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; olLiArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    olLiArr[i].<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                olLiArr[square].<span class=\"property\">className</span> = <span class=\"string\">&quot;current&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//鼠标放上去清除定时器，移开后在开启定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            all.<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                div.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;block&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">clearInterval</span>(timer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            all.<span class=\"property\">onmouseout</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                div.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                timer = <span class=\"built_in\">setInterval</span>(autoPlay, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//6.左右切换图片（鼠标放上去显示，移开隐藏）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            spanArr[<span class=\"number\">0</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//通过控制key的自增来模拟图片的索引值，然后移动ul</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                key--;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (key &lt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//先移动到最后一张，然后key的值取之前一张的索引值，然后在向前移动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    ul.<span class=\"property\">style</span>.<span class=\"property\">left</span> = -imgWidth * (olLiArr.<span class=\"property\">length</span>) + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    key = olLiArr.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">animate</span>(ul, -key * imgWidth);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//通过控制square的自增来模拟小方块的索引值，然后点亮盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//排他思想做小方块</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                square--;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (square &lt; <span class=\"number\">0</span>) &#123;<span class=\"comment\">//索引值不能大于等于5，如果等于5，立刻变为0；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    square = olLiArr.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; olLiArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    olLiArr[i].<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                olLiArr[square].<span class=\"property\">className</span> = <span class=\"string\">&quot;current&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            spanArr[<span class=\"number\">1</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//右侧的和定时器一模一样</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">autoPlay</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\">ele, target</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> speed = target &gt; ele.<span class=\"property\">offsetLeft</span> ? <span class=\"number\">10</span> : -<span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                ele.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">var</span> val = target - ele.<span class=\"property\">offsetLeft</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = ele.<span class=\"property\">offsetLeft</span> + speed + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(val) &lt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(speed)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = target + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, <span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;all&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;all&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;screen&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;screen&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/1.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/2.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/3.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/4.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/5.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;200&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;arr&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span>&lt;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2020.gif\"></p>\n<p>温馨提示：动图太大，可以把<a href=\"http://img.smyhvae.com/20180202_2020.gif\">http://img.smyhvae.com/20180202_2020.gif</a>单独在浏览器中打开。</p>\n<p>工程文件：<a href=\"https://github.com/qianguyihao/web-resource/blob/main/project/2018-02-02-JS%E5%8A%A8%E7%94%BB%E5%AE%9E%E7%8E%B0%E8%BD%AE%E6%92%AD%E5%9B%BE.rar\">JS动画实现轮播图.rar</a></p>\n","text":"前言JS动画的主要内容如下：1、三大家族和一个事件对象：三大家族：offset&#x2F;scroll&#x2F;client。也叫三大系列。事件对象&#x2F;event（事件被触动时，鼠标和键盘的状态）（通过属性控制）。2、动画(闪现&#x2F;匀速&#x2F;缓动)3、冒泡","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"40-client（可视区）相关属性","slug":"JavaScript/40-client（可视区）相关属性","date":"2023-02-16T07:30:25.425Z","updated":"2023-02-16T07:54:46.077Z","comments":true,"path":"api/articles/JavaScript/40-client（可视区）相关属性.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180203_2155.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"client-家族的组成\"><a href=\"#client-家族的组成\" class=\"headerlink\" title=\"client 家族的组成\"></a>client 家族的组成</h2><h3 id=\"clientWidth-和-clientHeight\"><a href=\"#clientWidth-和-clientHeight\" class=\"headerlink\" title=\"clientWidth 和 clientHeight\"></a>clientWidth 和 clientHeight</h3><p>元素调用时：</p>\n<ul>\n<li><p>clientWidth：获取元素的可见宽度（width + padding）。</p>\n</li>\n<li><p>clientHeight：获取元素的可见高度（height + padding）。</p>\n</li>\n</ul>\n<p>body&#x2F;html 调用时：</p>\n<ul>\n<li><p>clientWidth：获取网页可视区域宽度。</p>\n</li>\n<li><p>clientHeight：获取网页可视区域高度。</p>\n</li>\n</ul>\n<p><strong>声明</strong>：</p>\n<ul>\n<li><p><code>clientWidth</code> 和 <code>clientHeight</code> 属性是只读的，不可修改。</p>\n</li>\n<li><p><code>clientWidth</code> 和 <code>clientHeight</code> 的值都是不带 px 的，返回的都是一个数字，可以直接进行计算。</p>\n</li>\n</ul>\n<h3 id=\"clientX-和-clientY\"><a href=\"#clientX-和-clientY\" class=\"headerlink\" title=\"clientX 和 clientY\"></a>clientX 和 clientY</h3><p>event调用：</p>\n<ul>\n<li><p>clientX：鼠标距离可视区域左侧距离。</p>\n</li>\n<li><p>clientY：鼠标距离可视区域上侧距离。</p>\n</li>\n</ul>\n<h3 id=\"clientTop-和-clientLeft\"><a href=\"#clientTop-和-clientLeft\" class=\"headerlink\" title=\"clientTop 和 clientLeft\"></a>clientTop 和 clientLeft</h3><ul>\n<li><p>clientTop：盒子的上border。</p>\n</li>\n<li><p>clientLeft：盒子的左border。</p>\n</li>\n</ul>\n<h2 id=\"三大家族-offset-x2F-scroll-x2F-client-的区别\"><a href=\"#三大家族-offset-x2F-scroll-x2F-client-的区别\" class=\"headerlink\" title=\"三大家族 offset&#x2F;scroll&#x2F;client 的区别\"></a>三大家族 offset&#x2F;scroll&#x2F;client 的区别</h2><h3 id=\"区别1：宽高\"><a href=\"#区别1：宽高\" class=\"headerlink\" title=\"区别1：宽高\"></a>区别1：宽高</h3><ul>\n<li><p>offsetWidth  &#x3D; width  + padding + border</p>\n</li>\n<li><p>offsetHeight &#x3D; height + padding + border</p>\n</li>\n<li><p>scrollWidth   &#x3D; 内容宽度（不包含border）</p>\n</li>\n<li><p>scrollHeight  &#x3D; 内容高度（不包含border）</p>\n</li>\n<li><p>clientWidth  &#x3D; width  + padding</p>\n</li>\n<li><p>clientHeight &#x3D; height + padding</p>\n</li>\n</ul>\n<h3 id=\"区别2：上左\"><a href=\"#区别2：上左\" class=\"headerlink\" title=\"区别2：上左\"></a>区别2：上左</h3><p>offsetTop&#x2F;offsetLeft：</p>\n<ul>\n<li>调用者：任意元素。(盒子为主)</li>\n<li>作用：距离父系盒子中带有定位的距离。</li>\n</ul>\n<p>scrollTop&#x2F;scrollLeft：</p>\n<ul>\n<li>调用者：document.body.scrollTop（window调用）(盒子也可以调用，但必须有滚动条)</li>\n<li>作用：浏览器无法显示的部分（被卷去的部分）。</li>\n</ul>\n<p>clientY&#x2F;clientX：</p>\n<ul>\n<li>调用者：event</li>\n<li>作用：鼠标距离浏览器可视区域的距离（左、上）。</li>\n</ul>\n<h2 id=\"函数封装：获取浏览器的宽高（可视区域）\"><a href=\"#函数封装：获取浏览器的宽高（可视区域）\" class=\"headerlink\" title=\"函数封装：获取浏览器的宽高（可视区域）\"></a>函数封装：获取浏览器的宽高（可视区域）</h2><p>函数封装如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//函数封装：获取屏幕可视区域的宽高</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">client</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span> !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//ie9及其以上的版本的写法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;width&quot;</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;height&quot;</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//标准模式的写法（有DTD时）</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;width&quot;</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;height&quot;</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//没有DTD时的写法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;width&quot;</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientWidth</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;height&quot;</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientHeight</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>案例：根据浏览器的可视宽度，给定不同的背景的色。</strong></p>\n<blockquote>\n<p>PS：这个可以用来做响应式。</p>\n</blockquote>\n<p>代码如下：（需要用到上面的封装好的方法）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;tools.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：浏览器每次更改大小，判断是否符合某一标准然后给背景上色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//  // &gt;960红色，大于640小于960蓝色，小于640绿色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = fn;  <span class=\"comment\">//页面大小发生变化时，执行该函数。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//页面加载的时候直接执行一次函数，确定浏览器可视区域的宽，给背景上色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">fn</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//封装成函数，然后指定的时候去调用和绑定函数名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">client</span>().<span class=\"property\">width</span> &gt; <span class=\"number\">960</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;red&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">client</span>().<span class=\"property\">width</span> &gt; <span class=\"number\">640</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;blue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;green&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>上当代码中，<code>window.onresize</code>事件指的是：在窗口或框架被调整大小时发生。各个事件的解释如下：</p>\n<ul>\n<li><p>window.onscroll        屏幕滑动</p>\n</li>\n<li><p>window.onresize       浏览器大小变化</p>\n</li>\n<li><p>window.onload\t        页面加载完毕</p>\n</li>\n<li><p>div.onmousemove    鼠标在盒子上移动（注意：不是盒子移动）</p>\n</li>\n</ul>\n<h2 id=\"获取显示器的分辨率\"><a href=\"#获取显示器的分辨率\" class=\"headerlink\" title=\"获取显示器的分辨率\"></a>获取显示器的分辨率</h2><p>比如，我的电脑的显示器分辨率是：1920*1080。</p>\n<p>获取显示器的分辨率：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">screen</span>.<span class=\"property\">width</span> + <span class=\"string\">&quot;    &quot;</span> + <span class=\"variable language_\">window</span>.<span class=\"property\">screen</span>.<span class=\"property\">height</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_2155.png\"></p>\n<p>上图中，不管我如何改变浏览器的窗口大小，title栏显示的值永远都是我的显示器分辨率：1920*1080。</p>\n","text":"client 家族的组成clientWidth 和 clientHeight元素调用时：clientWidth：获取元素的可见宽度（width + padding）。clientHeight：获取元素的可见高度（height + padding）。body&#x2F;html 调","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"37-通过style对象获取和设置行内样式","slug":"JavaScript/37-通过style对象获取和设置行内样式","date":"2023-02-16T07:30:25.466Z","updated":"2023-02-16T07:53:42.184Z","comments":true,"path":"api/articles/JavaScript/37-通过style对象获取和设置行内样式.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180129_1407.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"style属性的获取和修改\"><a href=\"#style属性的获取和修改\" class=\"headerlink\" title=\"style属性的获取和修改\"></a>style属性的获取和修改</h2><p>在DOM当中，如果想设置样式，有两种形式：</p>\n<ul>\n<li><p>className（针对内嵌样式）</p>\n</li>\n<li><p>style（针对行内样式）</p>\n</li>\n</ul>\n<p>这篇文章，我们就来讲一下style。</p>\n<p>需要注意的是：style是一个对象，只能获取<strong>行内样式</strong>，不能获取内嵌的样式和外链的样式。例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">6px</span> solid red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 200px;height: 100px;background-color: pink;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> box1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box1.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box1.<span class=\"property\">style</span>.<span class=\"property\">border</span>);  <span class=\"comment\">//没有打印结果，因为这个属性不是行内样式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> box1.<span class=\"property\">style</span>);  <span class=\"comment\">//因为是对象，所以打印结果是Object</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box1.<span class=\"property\">style</span>);         <span class=\"comment\">//打印结果是对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180129_1407.png\"></p>\n<p>上图显示，因为border属性不是行内样式，所以无法通过style对象获取。</p>\n<h3 id=\"通过-js-读取元素的样式\"><a href=\"#通过-js-读取元素的样式\" class=\"headerlink\" title=\"通过 js 读取元素的样式\"></a>通过 js 读取元素的样式</h3><p>语法：（方式一）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素.<span class=\"property\">style</span>.样式名</span><br></pre></td></tr></table></figure>\n\n<p>备注：我们通过style属性读取的样式都是<strong>行内样式</strong>。</p>\n<p>语法：（方式二）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素.<span class=\"property\">style</span>[<span class=\"string\">&quot;属性&quot;</span>];  <span class=\"comment\">//格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">box.<span class=\"property\">style</span>[<span class=\"string\">&quot;width&quot;</span>];  <span class=\"comment\">//举例</span></span><br></pre></td></tr></table></figure>\n\n<p>方式二最大的优点是：可以给属性传递参数。</p>\n<h3 id=\"通过-js-设置元素的样式\"><a href=\"#通过-js-设置元素的样式\" class=\"headerlink\" title=\"通过 js 设置元素的样式\"></a>通过 js 设置元素的样式</h3><p>语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素.<span class=\"property\">style</span>.样式名 = 样式值;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box1.style.width = &quot;300px&quot;;</span><br><span class=\"line\">box1.style.backgroundColor = &quot;red&quot;; // 驼峰命名法</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>备注：我们通过style属性设置的样式都是<strong>行内样式</strong>，而行内样式有较高的优先级。但是如果在样式中的其他地方写了<code>!important</code>，则此时<code>!important</code>会有更高的优先级。</p>\n<h3 id=\"style属性的注意事项\"><a href=\"#style属性的注意事项\" class=\"headerlink\" title=\"style属性的注意事项\"></a>style属性的注意事项</h3><p>style属性需要注意以下几点：</p>\n<p>（1）样式少的时候使用。</p>\n<p>（2）style是对象。我们在上方已经打印出来，typeof的结果是Object。</p>\n<p>（3）值是字符串，没有设置值是“”。</p>\n<p>（4）命名规则，驼峰命名。</p>\n<p>（5）只能获取行内样式，和内嵌和外链无关。</p>\n<p>（6）box.style.cssText &#x3D; “字符串形式的样式”。</p>\n<p><code>cssText</code>这个属性，其实就是把行内样式里面的值当做字符串来对待。在上方代码的基础之上，举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> box1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//通过cssText一次性设置行内样式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    box1.<span class=\"property\">style</span>.<span class=\"property\">cssText</span> = <span class=\"string\">&quot;width: 300px;height: 300px;background-color: green;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(box1.<span class=\"property\">style</span>.<span class=\"property\">cssText</span>);   <span class=\"comment\">//这一行更加可以理解,style是对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180129_1410.png\"></p>\n<h3 id=\"style的常用属性\"><a href=\"#style的常用属性\" class=\"headerlink\" title=\"style的常用属性\"></a>style的常用属性</h3><p>style的常用属性包括：</p>\n<ul>\n<li><p>backgroundColor</p>\n</li>\n<li><p>backgroundImage</p>\n</li>\n<li><p>color</p>\n</li>\n<li><p>width</p>\n</li>\n<li><p>height</p>\n</li>\n<li><p>border</p>\n</li>\n<li><p>opacity 设置透明度 (IE8以前是filter: alpha(opacity&#x3D;xx))</p>\n</li>\n</ul>\n<p>注意DOM对象style的属性和标签中style内的值不一样，因为在JS中，<code>-</code>不能作为标识符。比如：</p>\n<ul>\n<li><p>DOM中：backgroundColor</p>\n</li>\n<li><p>CSS中：background-color</p>\n</li>\n</ul>\n<h2 id=\"style属性的举例\"><a href=\"#style属性的举例\" class=\"headerlink\" title=\"style属性的举例\"></a>style属性的举例</h2><p>我们针对上面列举的几个style的样式，来举几个例子：</p>\n<ul>\n<li><p>举例1、改变div的大小和透明度</p>\n</li>\n<li><p>举例2、当前输入的文本框高亮显示</p>\n</li>\n<li><p>举例3、高级隔行变色、高亮显示</p>\n</li>\n</ul>\n<p>下面来逐一实现。</p>\n<h3 id=\"举例1：改变div的大小和透明度\"><a href=\"#举例1：改变div的大小和透明度\" class=\"headerlink\" title=\"举例1：改变div的大小和透明度\"></a>举例1：改变div的大小和透明度</h3><p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100px;height: 100px;background-color: pink;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    div.<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"string\">&quot;200px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div.<span class=\"property\">style</span>.<span class=\"property\">height</span> = <span class=\"string\">&quot;200px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;black&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        div.<span class=\"property\">style</span>.<span class=\"property\">opacity</span> = <span class=\"string\">&quot;0.2&quot;</span>;   <span class=\"comment\">//设置背景色的透明度。单位是0.1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        div.<span class=\"property\">style</span>.<span class=\"property\">filter</span> = <span class=\"string\">&quot;alpha(opacity=20)&quot;</span>;   <span class=\"comment\">//上一行代码的兼容性写法。注意单位是百进制</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例2：当前输入的文本框高亮显示\"><a href=\"#举例2：当前输入的文本框高亮显示\" class=\"headerlink\" title=\"举例2：当前输入的文本框高亮显示\"></a>举例2：当前输入的文本框高亮显示</h3><p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：让所有的input标签获取焦点后高亮显示</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.获取事件源</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> inpArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;input&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//2.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//3.书写事件驱动程序</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; inpArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//获取焦点后，所有的input标签被绑定onfocus事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        inpArr[i].<span class=\"property\">onfocus</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">border</span> = <span class=\"string\">&quot;2px solid red&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#ccc&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//绑定onblur事件，取消样式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        inpArr[i].<span class=\"property\">onblur</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">border</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例3：高级隔行变色、高亮显示\"><a href=\"#举例3：高级隔行变色、高亮显示\" class=\"headerlink\" title=\"举例3：高级隔行变色、高亮显示\"></a>举例3：高级隔行变色、高亮显示</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-collapse</span>: collapse;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-spacing</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#c0c0c0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d0d0d0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#404060</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#09c</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: bold <span class=\"number\">16px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">14px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f0f0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.current</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red <span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>序号<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>课程<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>成绩<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;target&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                1</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>生命壹号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>语文<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                2</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>生命贰号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>日语<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>99<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                3</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>生命叁号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>营销学<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>98<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                4</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>生命伍号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>数学<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>90<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                5</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>许嵩<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>英语<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>96<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                6</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>vae<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>体育<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>90<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：让tr各行变色，鼠标放入tr中，高亮显示。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.隔行变色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> tbody = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;target&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> trArr = tbody.<span class=\"property\">children</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//循环判断并各行赋值属性（背景色）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; trArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            trArr[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#a3a3a3&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            trArr[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#ccc&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//鼠标进入高亮显示</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//难点：鼠标移开的时候要回复原始颜色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//计数器（进入tr之后，立刻记录颜色，然后移开的时候使用记录好的颜色）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> myColor = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        trArr[i].<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//赋值颜色之前，先记录颜色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            myColor = <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#fff&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        trArr[i].<span class=\"property\">onmouseout</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = myColor;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现的效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180129_1520.gif\"></p>\n<p>代码解释：</p>\n<p>上方代码中，我们<strong>用到了计数器myColor来记录每一行最原始的颜色</strong>（赋值白色之前）。如果不用计数器，可能很多人以为代码是写的：（错误的代码）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：让tr各行变色，鼠标放入tr中，高亮显示。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.隔行变色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> tbody = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;target&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> trArr = tbody.<span class=\"property\">children</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//循环判断并各行赋值属性（背景色）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; trArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> !== <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            trArr[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#a3a3a3&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            trArr[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#ccc&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//鼠标进入高亮显示</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//难点：鼠标移开的时候要回复原始颜色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//计数器（进入tr之后，立刻记录颜色，然后移开的时候使用记录好的颜色）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        trArr[i].<span class=\"property\">onmouseover</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#fff&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        trArr[i].<span class=\"property\">onmouseout</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;#a3a3a3&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这种错误的代码，实现的效果却是：（未达到效果）</p>\n<p><img src=\"http://img.smyhvae.com/20180129_1525.gif\"></p>\n<h2 id=\"通过-js-获取元素当前显示的样式\"><a href=\"#通过-js-获取元素当前显示的样式\" class=\"headerlink\" title=\"通过 js 获取元素当前显示的样式\"></a>通过 js 获取元素当前显示的样式</h2><p>我们在上面的内容中，通过<code>元素.style.className</code>的方式只能获取<strong>行内样式</strong>。但是，有些元素，也写了<strong>内嵌样式或外链样式</strong>。</p>\n<p>既然样式有这么多种，那么，如何获取元素当前显示的样式（包括行内样式、内嵌样式、外链样式）呢？我们接下来看一看。</p>\n<h3 id=\"获取元素当前正在显示的样式\"><a href=\"#获取元素当前正在显示的样式\" class=\"headerlink\" title=\"获取元素当前正在显示的样式\"></a>获取元素当前正在显示的样式</h3><p>（1）w3c的做法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">getComputedStyle</span>(<span class=\"string\">&quot;要获取样式的元素&quot;</span>, <span class=\"string\">&quot;伪元素&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>两个参数都是必须要有的。参数二中，如果没有伪元素就用 null 代替（一般都传null）。</p>\n<p>（2）IE和opera的做法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj.<span class=\"property\">currentStyle</span>;</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li><p>如果当前元素没有设置该样式，则获取它的默认值。</p>\n</li>\n<li><p>该方法会返回一个<strong>对象</strong>，对象中封装了当前元素对应的样式，可以通过<code>对象.样式名</code>来读取具体的某一个样式。</p>\n</li>\n<li><p>通过currentStyle和getComputedStyle()读取到的样式都是只读的，不能修改，如果要修改必须通过style属性。</p>\n</li>\n</ul>\n<p>综合上面两种写法，就有了一种兼容性的写法，同时将其封装。代码举例如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*border: 1px solid #000;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100px;height: 100px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getStyle</span>(div1, <span class=\"string\">&quot;width&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getStyle</span>(div1, <span class=\"string\">&quot;padding&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getStyle</span>(div1, <span class=\"string\">&quot;background-color&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     * 兼容方法，获取元素当前正在显示的样式。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     * 参数：</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     *      obj     要获取样式的元素</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     *.     name    要获取的样式名</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">    */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getStyle</span>(<span class=\"params\">ele, attr</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">getComputedStyle</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">window</span>.<span class=\"title function_\">getComputedStyle</span>(ele, <span class=\"literal\">null</span>)[attr];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> ele.<span class=\"property\">currentStyle</span>[attr];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1425.png\"></p>\n","text":"style属性的获取和修改在DOM当中，如果想设置样式，有两种形式：className（针对内嵌样式）style（针对行内样式）这篇文章，我们就来讲一下style。需要注意的是：style是一个对象，只能获取行内样式，不能获取内嵌的样式和外链的样式。例如：1<br>2<br>3<","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"43-事件委托","slug":"JavaScript/43-事件委托","date":"2023-02-16T12:33:22.267Z","updated":"2023-02-16T12:34:03.334Z","comments":true,"path":"api/articles/JavaScript/43-事件委托.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20190101.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"事件委托\"><a href=\"#事件委托\" class=\"headerlink\" title=\"事件委托\"></a>事件委托</h2><p>事件委托，通俗地来讲，就是把一个元素响应事件（click、keydown……）的函数委托到另一个元素。</p>\n<p>比如说有一个列表 ul，列表之中有大量的列表项 <code>&lt;a&gt;</code>标签：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;parent-list&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;my_link&quot;</span>&gt;</span>超链接一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;my_link&quot;</span>&gt;</span>超链接二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;my_link&quot;</span>&gt;</span>超链接三<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当我们的鼠标移到<code>&lt;a&gt;</code>标签上的时候，需要获取此<code>&lt;a&gt;</code>的相关信息并飘出悬浮窗以显示详细信息，或者当某个<code>&lt;a&gt;</code>被点击的时候需要触发相应的处理事件。我们通常的写法，是为每个<code>&lt;a&gt;</code>都绑定类似onMouseOver或者onClick之类的事件监听：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> parentNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;parent-list&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> aNodes = parentNode.<span class=\"title function_\">getElementByTagName</span>(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>, l = aNodes.<span class=\"property\">length</span>; i &lt; l; i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        aNodes[i].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是超链接 a 的单击相应函数&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是，上面的做法过于消耗内存和性能。<strong>我们希望，只绑定一次事件，即可应用到多个元素上</strong>，即使元素是后来添加的。</p>\n<p>因此，比较好的方法就是把这个点击事件绑定到他的父层，也就是 <code>ul</code> 上，然后在执行事件函数的时候再去匹配判断目标元素。如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 获取父节点，并为它绑定click单击事件。 false 表示事件在冒泡阶段触发（默认）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;parent-list&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// e.target 表示：触发事件的对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//如果触发事件的对象是我们期望的元素，则执行；否则不执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (event.<span class=\"property\">target</span> &amp;&amp; event.<span class=\"property\">target</span>.<span class=\"property\">className</span> == <span class=\"string\">&#x27;link&#x27;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// 或者写成 if (event.target &amp;&amp; event.target.nodeName.toUpperCase() == &#x27;A&#x27;) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我是ul的单击响应函数&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;parent-list&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #bfa;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我是p元素<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;link&quot;</span>&gt;</span>超链接一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;link&quot;</span>&gt;</span>超链接二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;link&quot;</span>&gt;</span>超链接三<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码，为父节点注册 click 事件，当子节点被点击的时候，click事件会从子节点开始<strong>向父节点冒泡</strong>。<strong>父节点捕获到事件</strong>之后，开始执行方法体里的内容：通过判断 event.target 拿到了被点击的子节点<code>&lt;a&gt;</code>。从而可以获取到相应的信息，并作处理。</p>\n<p>换而言之，参数为false，说明事件是在冒泡阶段触发（子元素向父元素传递事件）。而父节点注册了事件函数，子节点没有注册事件函数，此时，会在父节点中执行函数体里的代码。</p>\n<p><strong>总结</strong>：事件委托是利用了冒泡机制，减少了事件绑定的次数，减少内存消耗，提高性能。</p>\n<p>事件委托的参考链接：</p>\n<ul>\n<li><p><a href=\"https://www.cnblogs.com/owenChen/archive/2013/02/18/2915521.html\">荐 | JavaScript事件代理和委托（Delegation）</a></p>\n</li>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/26536815\">JavaScript 事件委托详解</a></p>\n</li>\n</ul>\n<h2 id=\"我的公众号\"><a href=\"#我的公众号\" class=\"headerlink\" title=\"我的公众号\"></a>我的公众号</h2><p>想学习<font color=#0000ff><strong>更多技能</strong></font>？不妨关注我的微信公众号：<strong>千古壹号</strong>（id：<code>qianguyihao</code>）。</p>\n<p>扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：</p>\n<p><img src=\"http://img.smyhvae.com/20190101.png\"></p>\n","text":"事件委托事件委托，通俗地来讲，就是把一个元素响应事件（click、keydown……）的函数委托到另一个元素。比如说有一个列表 ul，列表之中有大量的列表项 &lt;a&gt;标签：1<br>2<br>3<br>4<br>5<br>&lt;ul id=&quot;parent-l","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"39-scroll相关属性和缓动动画","slug":"JavaScript/39-scroll相关属性和缓动动画","date":"2023-02-16T07:30:25.471Z","updated":"2023-02-16T07:54:24.862Z","comments":true,"path":"api/articles/JavaScript/39-scroll相关属性和缓动动画.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180202_2258.gif","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"scroll-相关属性\"><a href=\"#scroll-相关属性\" class=\"headerlink\" title=\"scroll 相关属性\"></a>scroll 相关属性</h2><h3 id=\"window-onscroll-方法\"><a href=\"#window-onscroll-方法\" class=\"headerlink\" title=\"window.onscroll() 方法\"></a>window.onscroll() 方法</h3><p>当我们用鼠标滚轮，滚动网页的时候，会触发 window.onscroll() 方法。效果如下：（注意看控制台的打印结果）</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2258.gif\"></p>\n<p>如果你需要做滚动监听，可以使用这个方法。</p>\n<p>我们来看看和 scroll 相关的有哪些属性。</p>\n<h3 id=\"1、ScrollWidth-和-scrollHeight\"><a href=\"#1、ScrollWidth-和-scrollHeight\" class=\"headerlink\" title=\"1、ScrollWidth 和 scrollHeight\"></a>1、ScrollWidth 和 scrollHeight</h3><p><code>ScrollWidth</code> 和 <code>scrollHeight</code>：获取元素<strong>整个滚动区域</strong>的宽、高。包括 width 和 padding，不包括 border和margin。</p>\n<p><strong>注意</strong>：</p>\n<p><code>scrollHeight</code> 的特点是：如果内容超出了盒子，<code>scrollHeight</code>为内容的高（包括超出的内容）；如果不超出，<code>scrollHeight</code>为盒子本身的高度。<code>ScrollWidth</code>同理。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">3px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">8px</span> solid red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\">    静，能寒窗苦守；动，能点石成金。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// `scrollHeight` 的特点是：如果内容超出了盒子，`scrollHeight`为内容的高（包括超出的内容）；如果不超出，`scrollHeight`为盒子本身的高度。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//IE8以下（不包括IE8），为盒子本身内容的高度。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div.<span class=\"property\">scrollWidth</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div.<span class=\"property\">scrollHeight</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1235.png\"></p>\n<h3 id=\"2、scrollTop-和-scrollLeft\"><a href=\"#2、scrollTop-和-scrollLeft\" class=\"headerlink\" title=\"2、scrollTop 和 scrollLeft\"></a>2、scrollTop 和 scrollLeft</h3><ul>\n<li><p><code>scrollLeft</code>：获取水平滚动条滚动的距离。</p>\n</li>\n<li><p><code>scrollTop</code>：获取垂直滚动条滚动的距离。</p>\n</li>\n</ul>\n<p><strong>实战经验</strong>：</p>\n<p>当某个元素满足<code>scrollHeight - scrollTop == clientHeight</code>时，说明垂直滚动条滚动到底了。</p>\n<p>当某个元素满足<code>scrollWidth - scrollLeft == clientWidth</code>时，说明水平滚动条滚动到底了。</p>\n<p>这个实战经验非常有用，可以用来判断用户是否已经将内容滑动到底了。比如说，有些场景下，希望用户能够看完“长长的活动规则”，才允许触发接下来的表单操作。</p>\n<h3 id=\"scrollTop-的兼容性\"><a href=\"#scrollTop-的兼容性\" class=\"headerlink\" title=\"scrollTop 的兼容性\"></a>scrollTop 的兼容性</h3><p>如果要获取页面滚动的距离，scrollTop 这个属性的写法要注意兼容性，如下。</p>\n<p>（1）如果文档没有 DTD 声明，写法为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span></span><br></pre></td></tr></table></figure>\n\n<p>在没有 DTD 声明的情况下，要求是这种写法，chrome浏览器才能认出来。</p>\n<p>（2）如果文档有 DTD 声明，写法为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span></span><br></pre></td></tr></table></figure>\n\n<p>在有 DTD 声明的情况下，要求是这种写法，IE6、7、8才能认出来。</p>\n<p>综合上面这两个，就诞生了一种兼容性的写法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> <span class=\"comment\">//方式一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> + <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>  <span class=\"comment\">//方式二</span></span><br></pre></td></tr></table></figure>\n\n<p>另外还有一种兼容性的写法：<code>window.pageYOffset</code> 和 <code>window.pageXOffset</code>。这种写法无视DTD的声明。这种写法支持的浏览器版本是：火狐&#x2F;谷歌&#x2F;ie9+。</p>\n<p>综合上面的几种写法，为了兼容，不管有没有DTD，<strong>最终版的兼容性写法：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断是否已经-DTD-声明\"><a href=\"#判断是否已经-DTD-声明\" class=\"headerlink\" title=\"判断是否已经 DTD 声明\"></a>判断是否已经 DTD 声明</h3><p>方法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>   <span class=\"comment\">// 已声明</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;BackCompat&quot;</span>   <span class=\"comment\">// 未声明</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将-scrollTop-和-scrollLeft-进行封装\"><a href=\"#将-scrollTop-和-scrollLeft-进行封装\" class=\"headerlink\" title=\"将 scrollTop 和 scrollLeft 进行封装\"></a>将 scrollTop 和 scrollLeft 进行封装</h3><p>这里，我们将 scrollTop 和 scrollLeft 封装为一个方法，名叫scroll()，返回值为 一个对象。以后就直接调用<code>scroll().top</code> 和 <code>scroll().left</code>就好。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">6000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">5000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：封装一个兼容的scroll().返回的是对象，用scroll().top获取scrollTop，用scroll().left获取scrollLeft</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//        var myScroll = scroll();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//        myScroll.top;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">scroll</span>().<span class=\"property\">top</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">scroll</span>().<span class=\"property\">left</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//函数封装（简单封装，实际工作使用）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> &#123; <span class=\"comment\">//此函数的返回值是对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">right</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，函数定义的那部分就是要封装的代码。</p>\n<p>另外还有一种比较麻烦的封装方式：（仅供参考）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 开始封装自己的scrollTop</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> !== <span class=\"literal\">undefined</span>) &#123;  <span class=\"comment\">// ie9+ 高版本浏览器</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为 window.pageYOffset 默认的是  0  所以这里需要判断</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>) &#123;    <span class=\"comment\">// 标准浏览器   来判断有没有声明DTD</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;   <span class=\"comment\">// 未声明 DTD</span></span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取-html-文档的方法\"><a href=\"#获取-html-文档的方法\" class=\"headerlink\" title=\"获取 html 文档的方法\"></a>获取 html 文档的方法</h2><p>获取title、body、head、html标签的方法如下：</p>\n<ul>\n<li><p><code>document.title</code> 文档标题；</p>\n</li>\n<li><p><code>document.head</code>  文档的头标签</p>\n</li>\n<li><p><code>document.body</code>  文档的body标签；</p>\n</li>\n<li><p><code>document.documentElement</code>  （这个很重要）。</p>\n</li>\n</ul>\n<p><code>document.documentElement</code>表示文档的html标签。也就是说，基本结构当中的 <code>html 标签</code>而是通过<code>document.documentElement</code>访问的，并不是通过 document.html 去访问的。</p>\n<h2 id=\"scrollTop-举例：固定导航栏\"><a href=\"#scrollTop-举例：固定导航栏\" class=\"headerlink\" title=\"scrollTop 举例：固定导航栏\"></a>scrollTop 举例：固定导航栏</h2><p>完整版代码实现：</p>\n<p>（1）index.html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">vertical-align</span>: top;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.main</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#Q-nav1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.fixed</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--引入工具js--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;tools.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求1：当我们滚动界面的时候，被卷曲的头部如果超过第二个盒子距离顶部的位置，那么直接给第二个盒子加类名.fixed</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求2：当我们滚动界面的时候，被卷曲的头部如果小于第二个盒子距离顶部的位置，那么直接给第二个盒子取消类名.fixed</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.老三步。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> topDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;top&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> height = topDiv.<span class=\"property\">offsetHeight</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> middle = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;Q-nav1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> main = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;main&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//2.判断 ，被卷曲的头部的大小</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (<span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> &gt; height) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//3.满足条件添加类，否则删除类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    middle.<span class=\"property\">className</span> += <span class=\"string\">&quot; fixed&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//第二个盒子也要占位置，为了避免重叠，我们给第三个盒子一个上padding的空间，把这个空间留给第二个盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    main.<span class=\"property\">style</span>.<span class=\"property\">paddingTop</span> = middle.<span class=\"property\">offsetHeight</span> + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    middle.<span class=\"property\">className</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//清零</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    main.<span class=\"property\">style</span>.<span class=\"property\">paddingTop</span> = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;top&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;top&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/top.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;Q-nav1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/nav.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/main.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，有一个技巧：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main.<span class=\"property\">style</span>.<span class=\"property\">paddingTop</span> = middle.<span class=\"property\">offsetHeight</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>仔细看注释就好。</p>\n<p>（2）tools.js：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by smyhvae on 2018/02/03.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 开始封装自己的scrollTop</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> !== <span class=\"literal\">undefined</span>) &#123;  <span class=\"comment\">// ie9+ 高版本浏览器</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为 window.pageYOffset 默认的是  0  所以这里需要判断</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>) &#123;    <span class=\"comment\">// 标准浏览器   来判断有没有声明DTD</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;   <span class=\"comment\">// 未声明 DTD</span></span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1619.gif\"></p>\n<p><del>工程文件</del>：</p>\n<ul>\n<li><p>2018-02-03-scrollTop固定导航栏.rar</p>\n</li>\n<li><p>下载链接暂无。</p>\n</li>\n</ul>\n<h2 id=\"缓动动画\"><a href=\"#缓动动画\" class=\"headerlink\" title=\"缓动动画\"></a>缓动动画</h2><h3 id=\"三个函数\"><a href=\"#三个函数\" class=\"headerlink\" title=\"三个函数\"></a>三个函数</h3><p>缓慢动画里，我们要用到三个函数，这里先列出来：</p>\n<ul>\n<li><p>Math.ceil()         向上取整</p>\n</li>\n<li><p>Math.floor()        向下取整</p>\n</li>\n<li><p>Math.round();   四舍五入</p>\n</li>\n</ul>\n<h3 id=\"缓动动画的原理\"><a href=\"#缓动动画的原理\" class=\"headerlink\" title=\"缓动动画的原理\"></a>缓动动画的原理</h3><p>缓动动画的原理就是：在移动的过程中，步长越来越小。</p>\n<p>设置步长为：<strong>目标位置和盒子当前位置的十分之一</strong>。用公式表达，即：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">盒子位置 = 盒子本身位置 + (目标位置 - 盒子本身位置)/ 10；</span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>运动到left = 400px<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//动画原理：盒子未来的位置 = 盒子当前的位置+步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = div.<span class=\"property\">offsetLeft</span> + (<span class=\"number\">400</span> - div.<span class=\"property\">offsetLeft</span>) / <span class=\"number\">10</span> + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">30</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2046.gif\"></p>\n<h3 id=\"缓慢动画的封装（解决四舍五入的问题）\"><a href=\"#缓慢动画的封装（解决四舍五入的问题）\" class=\"headerlink\" title=\"缓慢动画的封装（解决四舍五入的问题）\"></a>缓慢动画的封装（解决四舍五入的问题）</h3><p>我们发现一个问题，上图中的盒子最终并没有到达400px的位置，而是只到了396.04px就停住了：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2140.png\"></p>\n<p>原因是：JS在取整的运算时，进行了四舍五入。</p>\n<p>我们把打印396.04px这个left值打印出来看看：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2150.png\"></p>\n<p>我么发现，通过<code>div.style.left</code>获取的值是精确的，通过<code>div.offsetLeft</code>获取的left值会进行四舍五入。</p>\n<p>此时，我们就要用到取整的函数了。</p>\n<p>通过对缓动动画进行封装，完整版的代码实现如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>运动到200<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>运动到400<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn[<span class=\"number\">0</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(div, <span class=\"number\">200</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn[<span class=\"number\">1</span>].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">animate</span>(div, <span class=\"number\">400</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//缓动动画封装</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\">ele, target</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//要用定时器，先清定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//一个萝卜一个坑儿，一个元素对应一个定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ele.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//获取步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步长应该是越来越小的，缓动的算法。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> step = (target - ele.<span class=\"property\">offsetLeft</span>) / <span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//对步长进行二次加工(大于0向上取整,小于0向下取整)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//达到的效果是：最后10像素的时候都是1像素1像素的向目标位置移动，就能够到达指定位置。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            step = step &gt; <span class=\"number\">0</span> ? <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(step) : <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(step);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//动画原理： 目标位置 = 当前位置 + 步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = ele.<span class=\"property\">offsetLeft</span> + step + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(step);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//检测缓动动画有没有停止</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;smyhvae&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(target - ele.<span class=\"property\">offsetLeft</span>) &lt;= <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(step)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//处理小数赋值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                ele.<span class=\"property\">style</span>.<span class=\"property\">left</span> = target + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">clearInterval</span>(ele.<span class=\"property\">timer</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">30</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180202_2239.gif\"></p>\n<h2 id=\"window-scrollTo-方法举例：返回到顶部小火箭\"><a href=\"#window-scrollTo-方法举例：返回到顶部小火箭\" class=\"headerlink\" title=\"window.scrollTo()方法举例：返回到顶部小火箭\"></a>window.scrollTo()方法举例：返回到顶部小火箭</h2><p>（1）index.html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">bottom</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1210px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">500</span> <span class=\"number\">26px</span>/<span class=\"number\">35px</span> <span class=\"string\">&quot;simsun&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;tools.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：被卷去的头部超过100显示小火箭，然后点击小火箭屏幕缓慢移动到最顶端。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//难点：我们以前是移动盒子，现在是移动屏幕，我们没有学过如何移动屏幕。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//      技术点：window.scrollTo(x,y);浏览器显示区域跳转到指定的坐标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.老三步</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> img = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;img&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//被卷去的距离大于200显示小火箭，否则隐藏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//2.显示隐藏小火箭</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (<span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> &gt; <span class=\"number\">1000</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    img.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;block&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    img.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//每次移动滚动条的时候都给leader赋值，模拟leader获取距离顶部的距离</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                leader = <span class=\"title function_\">scroll</span>().<span class=\"property\">top</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.缓动跳转到页面最顶端（利用我们的缓动动画）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> timer = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> target = <span class=\"number\">0</span>; <span class=\"comment\">//目标位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> leader = <span class=\"number\">0</span>; <span class=\"comment\">//显示区域自身的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            img.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//技术点：window.scrollTo(0,0);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//要用定时器，先清定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">clearInterval</span>(timer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                timer = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//获取步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">var</span> step = (target - leader) / <span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//二次处理步长</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    step = step &gt; <span class=\"number\">0</span> ? <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(step) : <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(step);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    leader = leader + step; <span class=\"comment\">//往上移动的过程中，step是负数。当前位置减去步长，就等于下一步的位置。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//显示区域移动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(<span class=\"number\">0</span>, leader);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//清除定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (leader === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"built_in\">clearInterval</span>(timer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, <span class=\"number\">25</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/Top.jpg&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    我是最顶端.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    生命壹号，永不止步.....<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）tools.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by smyhvae on 2015/12/8.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数：获取scrollTop和scrollLeft的值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 开始封装自己的scrollTop</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> != <span class=\"literal\">null</span>) &#123;  <span class=\"comment\">// ie9+ 高版本浏览器</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为 window.pageYOffset 默认的是  0  所以这里需要判断</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>) &#123;    <span class=\"comment\">// 标准浏览器   来判断有没有声明DTD</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;   <span class=\"comment\">// 未声明 DTD</span></span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1710.gif\"></p>\n<p>小火箭的图片资源：</p>\n<p><img src=\"http://img.smyhvae.com/20180203-Top.jpg\"></p>\n","text":"scroll 相关属性window.onscroll() 方法当我们用鼠标滚轮，滚动网页的时候，会触发 window.onscroll() 方法。效果如下：（注意看控制台的打印结果） [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"44-键盘事件","slug":"JavaScript/44-键盘事件","date":"2023-02-16T12:33:22.268Z","updated":"2023-02-16T12:35:01.652Z","comments":true,"path":"api/articles/JavaScript/44-键盘事件.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"鼠标的拖拽事件\"><a href=\"#鼠标的拖拽事件\" class=\"headerlink\" title=\"鼠标的拖拽事件\"></a>鼠标的拖拽事件</h2><p>拖拽的流程：</p>\n<p>（1）<code>onmousedown</code>：当鼠标在被拖拽元素上按下时，开始拖拽；</p>\n<p>（2）<code>onmousemove</code>：当鼠标移动时被拖拽元素跟随鼠标移动；</p>\n<p>（3）<code>onmouseup</code>：当鼠标松开时，被拖拽元素固定在当前位置。</p>\n<h2 id=\"鼠标的滚轮事件\"><a href=\"#鼠标的滚轮事件\" class=\"headerlink\" title=\"鼠标的滚轮事件\"></a>鼠标的滚轮事件</h2><p><code>onmousewheel</code>：鼠标滚轮滚动的事件，会在滚轮滚动时触发。但是火狐不支持该属性。</p>\n<p><code>DOMMouseScroll</code>：在火狐中需要使用 DOMMouseScroll 来绑定滚动事件。注意该事件需要通过addEventListener()函数来绑定。</p>\n<h2 id=\"键盘事件\"><a href=\"#键盘事件\" class=\"headerlink\" title=\"键盘事件\"></a>键盘事件</h2><h3 id=\"事件名\"><a href=\"#事件名\" class=\"headerlink\" title=\"事件名\"></a>事件名</h3><p><code>onkeydown</code>：按键被按下。</p>\n<p><code>onkeyup</code>：按键被松开。</p>\n<p><strong>注意</strong>：</p>\n<ul>\n<li><p>如果一直按着某一个按键不松手，那么，<code>onkeydown</code>事件会一直触发。此时，松开键盘，<code>onkeyup</code>事件会执行一次。</p>\n</li>\n<li><p>当<code>onkeydown</code>连续触发时，第一次和第二次之间会间隔稍微长一点，后续的间隔会非常快。这种设计是为了防止误操作的发生。</p>\n</li>\n</ul>\n<p>键盘事件一般都会绑定给一些可以获取到焦点的对象或者是document。代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 键盘按下了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"property\">onkeyup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 键盘松开了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"判断哪个键盘被按下\"><a href=\"#判断哪个键盘被按下\" class=\"headerlink\" title=\"判断哪个键盘被按下\"></a>判断哪个键盘被按下</h3><p>可以通过<code>event</code>事件对象的<code>keyCode</code>来获取按键的编码。</p>\n<p>此外，<code>event</code>事件对象里面还提供了以下几个属性：</p>\n<ul>\n<li><p>altKey</p>\n</li>\n<li><p>ctrlKey</p>\n</li>\n<li><p>shiftKey</p>\n</li>\n</ul>\n<p>上面这三个属性，可以用来判断<code>alt</code>、<code>ctrl</code>、和<code>shift</code>是否被按下。如果按下则返回true，否则返回false。代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao：键盘按下了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 判断y和ctrl是否同时被按下</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (event.<span class=\"property\">ctrlKey</span> &amp;&amp; event.<span class=\"property\">keyCode</span> === <span class=\"number\">89</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ctrl和y都被按下了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>举例</strong>：input 文本框中，禁止输入数字。代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//获取input</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> input = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;input&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        input.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//console.log(&#x27;qianguyihao:&#x27; + event.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//数字 48 - 57</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//使文本框中不能输入数字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (event.<span class=\"property\">keyCode</span> &gt;= <span class=\"number\">48</span> &amp;&amp; event.<span class=\"property\">keyCode</span> &lt;= <span class=\"number\">57</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//在文本框中输入内容，属于onkeydown的默认行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 如果在onkeydown中取消了默认行为，则输入的内容，不会出现在文本框中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"举例：通过键盘的方向键，移动盒子\"><a href=\"#举例：通过键盘的方向键，移动盒子\" class=\"headerlink\" title=\"举例：通过键盘的方向键，移动盒子\"></a>举例：通过键盘的方向键，移动盒子</h2><p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-id\">#box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 使div可以根据不同的方向键向不同的方向移动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 按左键，div向左移</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * 按右键，div向右移</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             * ...</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">             */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//为document绑定一个按键按下的事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//定义一个变量，来表示移动的速度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> speed = <span class=\"number\">10</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//当用户按了ctrl以后，速度加快</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (event.<span class=\"property\">ctrlKey</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;smyhvae ctrl&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    speed = <span class=\"number\">20</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * 37 左</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * 38 上</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * 39 右</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * 40 下</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">switch</span> (event.<span class=\"property\">keyCode</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">37</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//alert(&quot;向左&quot;); left值减小</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        box1.<span class=\"property\">style</span>.<span class=\"property\">left</span> = box1.<span class=\"property\">offsetLeft</span> - speed + <span class=\"string\">&#x27;px&#x27;</span>; <span class=\"comment\">// 在初始值的基础之上，减去 speed 大小</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">39</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//alert(&quot;向右&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        box1.<span class=\"property\">style</span>.<span class=\"property\">left</span> = box1.<span class=\"property\">offsetLeft</span> + speed + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">38</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//alert(&quot;向上&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        box1.<span class=\"property\">style</span>.<span class=\"property\">top</span> = box1.<span class=\"property\">offsetTop</span> - speed + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">40</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//alert(&quot;向下&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        box1.<span class=\"property\">style</span>.<span class=\"property\">top</span> = box1.<span class=\"property\">offsetTop</span> + speed + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上方代码，待改进的地方：</p>\n<p>（1）移动盒子时，如果要加速，需要先按<code>方向键</code>，再按<code>Ctrl键</code>。</p>\n<p>（2）首次移动盒子时，动作较慢。后续如果学习了定时器相关的内容，可以再改进。</p>\n","text":"鼠标的拖拽事件拖拽的流程：（1）onmousedown：当鼠标在被拖拽元素上按下时，开始拖拽；（2）onmousemove：当鼠标移动时被拖拽元素跟随鼠标移动；（3）onmouseup：当鼠标松开时，被拖拽元素固定在当前位置。鼠标的滚轮事件onmousewheel：鼠标滚轮滚动的","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"42-事件的传播和事件冒泡","slug":"JavaScript/42-事件的传播和事件冒泡","date":"2023-02-16T12:33:22.265Z","updated":"2023-02-16T12:33:55.016Z","comments":true,"path":"api/articles/JavaScript/42-事件的传播和事件冒泡.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180204_1218.jpg","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"DOM事件流\"><a href=\"#DOM事件流\" class=\"headerlink\" title=\"DOM事件流\"></a>DOM事件流</h2><p>事件传播的三个阶段是：事件捕获、事件冒泡和目标。</p>\n<ul>\n<li><p>事件捕获阶段：事件从祖先元素往子元素查找（DOM树结构），直到捕获到事件目标 target。在这个过程中，默认情况下，事件相应的监听函数是不会被触发的。</p>\n</li>\n<li><p>事件目标：当到达目标元素之后，执行目标元素该事件相应的处理函数。如果没有绑定监听函数，那就不执行。</p>\n</li>\n<li><p>事件冒泡阶段：事件从事件目标 target 开始，从子元素往冒泡祖先元素冒泡，直到页面的最上一级标签。</p>\n</li>\n</ul>\n<p>如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1218.jpg\"></p>\n<p>PS：这个概念类似于 Android 里的 <strong>touch 事件传递</strong>。</p>\n<h3 id=\"事件捕获\"><a href=\"#事件捕获\" class=\"headerlink\" title=\"事件捕获\"></a>事件捕获</h3><p>addEventListener可以捕获事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box1.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 box3&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>上面的方法中，参数为true，代表事件在捕获阶段执行。</p>\n<p>代码演示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参数为true，代表事件在「捕获」阶段触发；参数为false或者不写参数，代表事件在「冒泡」阶段触发</span></span><br><span class=\"line\">box3.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 child&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">box2.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 father&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">box1.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 grandfather&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 body&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>效果演示：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1101.gif\"></p>\n<p>（如果上面的图片打不开，请点击：<a href=\"http://img.smyhvae.com/20180204_1101.gif\">http://img.smyhvae.com/20180204_1101.gif</a>）</p>\n<p><strong>重点</strong>：捕获阶段，事件依次传递的顺序是：window –&gt; document –&gt; html–&gt; body –&gt; 父元素、子元素、目标元素。</p>\n<p>这几个元素在事件捕获阶段的完整写法是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 window&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 document&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 html&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 body&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fatherBox.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 father&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">childBox.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;捕获 child&quot;</span>);</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<p>（1）第一个接收到事件的对象是 <strong>window</strong>（有人会说body，有人会说html，这都是错误的）。</p>\n<p>（2）JS中涉及到DOM对象时，有两个对象最常用：window、doucument。它们俩是最先获取到事件的。</p>\n<p><strong>补充一个知识点：</strong></p>\n<p>在 js中：</p>\n<ul>\n<li><p>如果想获取 <code>html</code>节点，方法是<code>document.documentElement</code>。</p>\n</li>\n<li><p>如果想获取 <code>body</code> 节点，方法是：<code>document.body</code>。</p>\n</li>\n</ul>\n<p>二者不要混淆了。</p>\n<h3 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h3><p><strong>事件冒泡</strong>: 当一个元素上的事件被触发的时候（比如说鼠标点击了一个按钮），同样的事件将会在那个元素的所有<strong>祖先元素</strong>中被触发。这一过程被称为事件冒泡；这个事件从原始元素开始一直冒泡到DOM树的最上层。</p>\n<p>通俗来讲，冒泡指的是：<strong>子元素的事件被触发时，父元素的同样的事件也会被触发</strong>。取消冒泡就是取消这种机制。</p>\n<p>代码演示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//事件冒泡</span></span><br><span class=\"line\">box3.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;child&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">box2.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;father&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">box1.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;grandfather&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;body&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://img.smyhvae.com/20180204_1028.gif\"></p>\n<p>（如果上面的图片打不开，请点击：<a href=\"http://img.smyhvae.com/20180204_1028.gif\">http://img.smyhvae.com/20180204_1028.gif</a>）</p>\n<p>上图显示，当我点击子元素 box3 的时候，它的父元素box2、box1、body都依次被触发了。即使我改变代码的顺序，也不会影响效果的顺序。</p>\n<p>当然，上面的代码中，我们用 addEventListener 这种 DOM2的写法也是可以的，但是第三个参数要写 false，或者不写。</p>\n<p><strong>冒泡顺序</strong>：</p>\n<p>一般的浏览器: （除IE6.0之外的浏览器）</p>\n<ul>\n<li>div -&gt; body -&gt; html -&gt; document -&gt; window</li>\n</ul>\n<p>IE6.0：</p>\n<ul>\n<li>div -&gt; body -&gt; html -&gt; document</li>\n</ul>\n<h3 id=\"不是所有的事件都能冒泡\"><a href=\"#不是所有的事件都能冒泡\" class=\"headerlink\" title=\"不是所有的事件都能冒泡\"></a>不是所有的事件都能冒泡</h3><p>以下事件不冒泡：blur、focus、load、unload、onmouseenter、onmouseleave。意思是，事件不会往父元素那里传递。</p>\n<p>我们检查一个元素是否会冒泡，可以通过事件的以下参数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event.<span class=\"property\">bubbles</span></span><br></pre></td></tr></table></figure>\n\n<p>如果返回值为true，说明该事件会冒泡；反之则相反。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box1.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;冒泡 child&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">bubbles</span>); <span class=\"comment\">//打印结果：true。说明 onclick 事件是可以冒泡的</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"阻止冒泡\"><a href=\"#阻止冒泡\" class=\"headerlink\" title=\"阻止冒泡\"></a>阻止冒泡</h2><p>大部分情况下，冒泡都是有益的。当然，如果你想阻止冒泡，也是可以的。可以按下面的方法阻止冒泡。</p>\n<h3 id=\"阻止冒泡的方法\"><a href=\"#阻止冒泡的方法\" class=\"headerlink\" title=\"阻止冒泡的方法\"></a>阻止冒泡的方法</h3><p>w3c的方法：（火狐、谷歌、IE11）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event.<span class=\"title function_\">stopPropagation</span>();</span><br></pre></td></tr></table></figure>\n\n<p>IE10以下则是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event.<span class=\"property\">cancelBubble</span> = <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>兼容代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box3.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;child&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//阻止冒泡</span></span><br><span class=\"line\">     event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (event &amp;&amp; event.<span class=\"property\">stopPropagation</span>) &#123;</span><br><span class=\"line\">         event.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         event.<span class=\"property\">cancelBubble</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，我们对box3进行了阻止冒泡，产生的效果是：事件不会继续传递到 father、grandfather、body了。</p>\n<h3 id=\"阻止冒泡的举例\"><a href=\"#阻止冒泡的举例\" class=\"headerlink\" title=\"阻止冒泡的举例\"></a>阻止冒泡的举例</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-id\">#box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        * 开启box1的绝对定位</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        */</span></span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * 使div可以跟随鼠标移动</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//获取box1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> box1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;box1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//给整个页面绑定：鼠标移动事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//兼容的方式获取event对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// 鼠标在页面的位置 = 滚动条滚动的距离 + 可视区域的坐标。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">var</span> pagex = event.<span class=\"property\">pageX</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">left</span> + event.<span class=\"property\">clientX</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">var</span> pagey = event.<span class=\"property\">pageY</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> + event.<span class=\"property\">clientY</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//   设置div的偏移量（相对于整个页面）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// 注意，如果想通过 style.left 来设置属性，一定要给 box1 开启绝对定位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    box1.<span class=\"property\">style</span>.<span class=\"property\">left</span> = pagex + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    box1.<span class=\"property\">style</span>.<span class=\"property\">top</span> = pagey + <span class=\"string\">&#x27;px&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 【重要注释】</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 当 document.onmousemove 和 box2.onmousemove 同时触发时，通过  box2 阻止事件向 document 冒泡。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 也就是说，只要是在 box2 的区域，就只触发 document.onmousemove 事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> box2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;box2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                box2.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//阻止冒泡</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (event &amp;&amp; event.<span class=\"property\">stopPropagation</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        event.<span class=\"title function_\">stopPropagation</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        event.<span class=\"property\">cancelBubble</span> = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// scroll 函数封装</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//此函数的返回值是对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">right</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 1000px;width: 2000px;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box2&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 300px; height: 300px; background-color: #bfa;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>关键地方可以看代码中的注释。</p>\n<p>效果演示：</p>\n<p><img src=\"http://img.smyhvae.com/20191112_1650.gif\"></p>\n","text":"DOM事件流事件传播的三个阶段是：事件捕获、事件冒泡和目标。事件捕获阶段：事件从祖先元素往子元素查找（DOM树结构），直到捕获到事件目标 target。在这个过程中，默认情况下，事件相应的监听函数是不会被触发的。事件目标：当到达目标元素之后，执行目标元素该事件相应的处理函数。如果","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"41-事件的绑定和事件对象Event","slug":"JavaScript/41-事件的绑定和事件对象Event","date":"2023-02-16T12:33:22.262Z","updated":"2023-02-16T12:33:44.440Z","comments":true,"path":"api/articles/JavaScript/41-事件的绑定和事件对象Event.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180203_1735.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"绑定事件的两种方式-x2F-DOM事件的级别\"><a href=\"#绑定事件的两种方式-x2F-DOM事件的级别\" class=\"headerlink\" title=\"绑定事件的两种方式&#x2F;DOM事件的级别\"></a>绑定事件的两种方式&#x2F;DOM事件的级别</h2><p>我们在之前的一篇文章《04-JavaScript&#x2F;22-DOM简介和DOM操作》中已经讲过事件的概念。这里讲一下绑定（注册）事件的两种方式，我们以onclick事件为例。</p>\n<h3 id=\"DOM0的写法：onclick\"><a href=\"#DOM0的写法：onclick\" class=\"headerlink\" title=\"DOM0的写法：onclick\"></a>DOM0的写法：onclick</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>点我<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//这种事件绑定的方式，如果绑定多个，则后面的会覆盖掉前面的</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;事件1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;事件2&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>点击按钮后，上方代码的打印结果：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事件2</span><br></pre></td></tr></table></figure>\n\n<p>我们可以看到，<code>DOM对象.事件 =  函数</code>的这种绑定事件的方式：一个元素的一个事件只能绑定一个响应函数。如果绑定了多个响应函数，则后者会覆盖前者。</p>\n<h3 id=\"DOM2的写法：addEventListener（高版本浏览器）\"><a href=\"#DOM2的写法：addEventListener（高版本浏览器）\" class=\"headerlink\" title=\"DOM2的写法：addEventListener（高版本浏览器）\"></a>DOM2的写法：addEventListener（高版本浏览器）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n\n<p>参数解释：</p>\n<ul>\n<li><p>参数1：事件名的字符串(注意，没有on)</p>\n</li>\n<li><p>参数2：回调函数：当事件触发时，该函数会被执行</p>\n</li>\n<li><p>参数3：<strong>true表示捕获阶段触发，false表示冒泡阶段触发（默认）</strong>。如果不写，则默认为false。【重要】</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// addEventListener: 事件监听器。 原事件被执行的时候，后面绑定的事件照样被执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 这种写法不存在响应函数被覆盖的情况。（更适合团队开发）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, fn1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, fn2);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;事件1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;事件2&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>点击按钮后，上方代码的打印结果：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事件1</span><br><span class=\"line\">事件2</span><br></pre></td></tr></table></figure>\n\n<p>我们可以看到，<code>addEventListener()</code>这种绑定事件的方式：</p>\n<ul>\n<li><p>一个元素的一个事件，可以绑定多个响应函数。不存在响应函数被覆盖的情况。<strong>执行顺序是</strong>：事件被触发时，响应函数会按照函数的绑定顺序执行。</p>\n</li>\n<li><p>addEventListener()中的this，是绑定事件的对象。</p>\n</li>\n<li><p><code>addEventListener()</code>不支持 IE8 及以下的浏览器。在IE8中可以使用<code>attachEvent</code>来绑定事件（详见下一小段）。</p>\n</li>\n</ul>\n<h3 id=\"DOM2的写法：attachEvent（IE8及以下版本浏览器）\"><a href=\"#DOM2的写法：attachEvent（IE8及以下版本浏览器）\" class=\"headerlink\" title=\"DOM2的写法：attachEvent（IE8及以下版本浏览器）\"></a>DOM2的写法：attachEvent（IE8及以下版本浏览器）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onclick&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li><p>参数1：事件名的字符串(注意，有on)</p>\n</li>\n<li><p>参数2：回调函数：当事件触发时，该函数会被执行</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        btn.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onclick&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;事件1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        btn.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onclick&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;事件2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在低版本的IE浏览器上，点击按钮后，上方代码的打印结果：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事件2</span><br><span class=\"line\">事件1</span><br></pre></td></tr></table></figure>\n\n<p>我们可以看到，<code>attachEvent()</code>这种绑定事件的方式：</p>\n<ul>\n<li><p>一个元素的一个事件，可以绑定多个响应函数。不存在响应函数被覆盖的情况。<strong>注意</strong>：执行顺序是，后绑定的先执行。</p>\n</li>\n<li><p>attachEvent()中的this，是window</p>\n</li>\n</ul>\n<h3 id=\"兼容性写法\"><a href=\"#兼容性写法\" class=\"headerlink\" title=\"兼容性写法\"></a>兼容性写法</h3><p>上面的内容里，需要强调的是：</p>\n<ul>\n<li><p><code>addEventListener()</code>中的this，是绑定事件的对象。</p>\n</li>\n<li><p><code>attachEvent()</code>中的this，是window。</p>\n</li>\n</ul>\n<p>既然这两个写法的<code>this</code>不同，那么，有没有一种兼容性的写法可以确保这两种绑定方式的this是相同的呢？我们可以封装一下。代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;button&#x27;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">myBind</span>(btn , <span class=\"string\">&quot;click&quot;</span> , <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义一个函数，用来为指定元素绑定响应函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * addEventListener()中的this，是绑定事件的对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * attachEvent()中的this，是window</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         *  需要统一两个方法this</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 参数：</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         *  element 要绑定事件的对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         *  eventStr 事件的字符串(不要on)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         *  callback 回调函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">myBind</span>(<span class=\"params\">element , eventStr , callback</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(element.<span class=\"property\">addEventListener</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//大部分浏览器兼容的方式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                element.<span class=\"title function_\">addEventListener</span>(eventStr , callback , <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * this是谁，由调用方式决定</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 * callback.call(element)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//IE8及以下</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                element.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&quot;on&quot;</span>+eventStr , <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//在匿名函数 function 中调用回调函数callback</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    callback.<span class=\"title function_\">call</span>(element);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"事件对象\"><a href=\"#事件对象\" class=\"headerlink\" title=\"事件对象\"></a>事件对象</h2><p>当事件的响应函数被触发时，会产生一个事件对象<code>event</code>。浏览器每次都会将这个事件<code>event</code>作为实参传进之前的响应函数。</p>\n<p>这个对象中包含了与当前事件相关的一切信息。比如鼠标的坐标、键盘的哪个按键被按下、鼠标滚轮滚动的方向等。</p>\n<h3 id=\"获取-event-对象（兼容性问题）\"><a href=\"#获取-event-对象（兼容性问题）\" class=\"headerlink\" title=\"获取 event 对象（兼容性问题）\"></a>获取 event 对象（兼容性问题）</h3><p>所有浏览器都支持event对象，但支持的方式不同。如下。</p>\n<p>（1）普通浏览器的写法是 <code>event</code>。比如：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1735.png\"></p>\n<p>（2）ie 678 的写法是 <code>window.event</code>。此时，事件对象 event 是作为window对象的属性保存的。</p>\n<p>于是，我们可以采取一种兼容性的写法。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>; <span class=\"comment\">// 兼容性写法</span></span><br></pre></td></tr></table></figure>\n\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//点击页面的任何部分</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>; <span class=\"comment\">////兼容性写法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">timeStamp</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">bubbles</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">button</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">pageX</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">pageY</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">screenX</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">screenY</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">target</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">type</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">clientX</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">clientY</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"event-属性\"><a href=\"#event-属性\" class=\"headerlink\" title=\"event 属性\"></a>event 属性</h3><p>event 有很多属性，比如：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1739.png\"></p>\n<p>由于pageX 和 pageY的兼容性不好，我们可以这样做：</p>\n<ul>\n<li>鼠标在页面的位置 &#x3D; 滚动条滚动的距离 + 可视区域的坐标。</li>\n</ul>\n<h2 id=\"Event举例\"><a href=\"#Event举例\" class=\"headerlink\" title=\"Event举例\"></a>Event举例</h2><h3 id=\"举例1：使-div-跟随鼠标移动\"><a href=\"#举例1：使-div-跟随鼠标移动\" class=\"headerlink\" title=\"举例1：使 div 跟随鼠标移动\"></a>举例1：使 div 跟随鼠标移动</h3><p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-id\">#box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        * 开启box1的绝对定位</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">        */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 使div可以跟随鼠标移动</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//获取box1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> box1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//给整个页面绑定：鼠标移动事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">//兼容的方式获取event对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">// 鼠标在页面的位置 = 滚动条滚动的距离 + 可视区域的坐标。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">var</span> pagex = event.<span class=\"property\">pageX</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">left</span> + event.<span class=\"property\">clientX</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">var</span> pagey = event.<span class=\"property\">pageY</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> + event.<span class=\"property\">clientY</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">//   设置div的偏移量（相对于整个页面）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">// 注意，如果想通过 style.left 来设置属性，一定要给 box1开启绝对定位。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          box1.<span class=\"property\">style</span>.<span class=\"property\">left</span> = pagex + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          box1.<span class=\"property\">style</span>.<span class=\"property\">top</span> = pagey + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// scroll 函数封装</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">//此函数的返回值是对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">right</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 1000px;width: 2000px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"举例2：获取鼠标距离所在盒子的距离\"><a href=\"#举例2：获取鼠标距离所在盒子的距离\" class=\"headerlink\" title=\"举例2：获取鼠标距离所在盒子的距离\"></a>举例2：获取鼠标距离所在盒子的距离</h3><p>关键点：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">鼠标距离所在盒子的距离 = 鼠标在整个页面的位置 - 所在盒子在整个页面的位置</span><br></pre></td></tr></table></figure>\n\n<p>代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding-top</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">18px</span>/<span class=\"number\">30px</span> <span class=\"string\">&quot;simsun&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;animate.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//需求：鼠标进入盒子之后只要移动，哪怕1像素，随时显示鼠标在盒子中的坐标。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//技术点：新事件，onmousemove：在事件源上，哪怕鼠标移动1像素也会触动这个事件。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//一定程度上，模拟了定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.老三步和新五步</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//2.获取鼠标在整个页面的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//3.获取盒子在整个页面的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//4.用鼠标的位置减去盒子的位置赋值给盒子的内容。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1.老三步和新五步</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    div.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//2.获取鼠标在整个页面的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> pagex = event.<span class=\"property\">pageX</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">left</span> + event.<span class=\"property\">clientX</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> pagey = event.<span class=\"property\">pageY</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> + event.<span class=\"property\">clientY</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//3.获取盒子在整个页面的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// var xx =</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// var yy =</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//4.用鼠标的位置减去盒子的位置赋值给盒子的内容。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> targetx = pagex - div.<span class=\"property\">offsetLeft</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> targety = pagey - div.<span class=\"property\">offsetTop</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;鼠标在盒子中的X坐标为：&quot;</span> + targetx + <span class=\"string\">&quot;px;&lt;br&gt;鼠标在盒子中的Y坐标为：&quot;</span> + targety + <span class=\"string\">&quot;px;&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1828.gif\"></p>\n<h3 id=\"举例3：商品放大镜\"><a href=\"#举例3：商品放大镜\" class=\"headerlink\" title=\"举例3：商品放大镜\"></a>举例3：商品放大镜</h3><p>代码实现：</p>\n<p>（1）index.html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">350px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.big</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*mask的中文是：遮罩*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.mask</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">175px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">175px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0.4</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: move;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.small</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">vertical-align</span>: top;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;tools.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放到小盒子上，让大盒子里面的图片和我们同步等比例移动。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//技术点：onmouseenter==onmouseover 第一个不冒泡</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//技术点：onmouseleave==onmouseout  第一个不冒泡</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.鼠标放上去显示盒子，移开隐藏盒子。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.老三步和新五步（黄盒子跟随移动）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.右侧的大图片，等比例移动。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//0.获取相关元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> box = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> small = box.<span class=\"property\">firstElementChild</span> || box.<span class=\"property\">firstChild</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> big = box.<span class=\"property\">children</span>[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> mask = small.<span class=\"property\">children</span>[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> bigImg = big.<span class=\"property\">children</span>[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.鼠标放上去显示盒子，移开隐藏盒子。(为小盒子绑定事件)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            small.<span class=\"property\">onmouseenter</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//封装好方法调用：显示元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">show</span>(mask);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">show</span>(big);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            small.<span class=\"property\">onmouseleave</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//封装好方法调用：隐藏元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">hide</span>(mask);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">hide</span>(big);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.老三步和新五步（黄盒子跟随移动）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定的事件是onmousemove，而事件源是small(只要在小盒子上移动1像素，黄盒子也要跟随)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            small.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//新五步</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                event = event || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//想要移动黄盒子，必须要知道鼠标在small小图中的位置。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> pagex = event.<span class=\"property\">pageX</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">left</span> + event.<span class=\"property\">clientX</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> pagey = event.<span class=\"property\">pageY</span> || <span class=\"title function_\">scroll</span>().<span class=\"property\">top</span> + event.<span class=\"property\">clientY</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//x：mask的left值，y：mask的top值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> x = pagex - box.<span class=\"property\">offsetLeft</span> - mask.<span class=\"property\">offsetWidth</span> / <span class=\"number\">2</span>; <span class=\"comment\">//除以2，可以保证鼠标mask的中间</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> y = pagey - box.<span class=\"property\">offsetTop</span> - mask.<span class=\"property\">offsetHeight</span> / <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//限制换盒子的范围</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//left取值为大于0，小盒子的宽-mask的宽。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    x = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (x &gt; small.<span class=\"property\">offsetWidth</span> - mask.<span class=\"property\">offsetWidth</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    x = small.<span class=\"property\">offsetWidth</span> - mask.<span class=\"property\">offsetWidth</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//top同理。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (y &lt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    y = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (y &gt; small.<span class=\"property\">offsetHeight</span> - mask.<span class=\"property\">offsetHeight</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    y = small.<span class=\"property\">offsetHeight</span> - mask.<span class=\"property\">offsetHeight</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//移动黄盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(small.<span class=\"property\">offsetHeight</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                mask.<span class=\"property\">style</span>.<span class=\"property\">left</span> = x + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                mask.<span class=\"property\">style</span>.<span class=\"property\">top</span> = y + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//3.右侧的大图片，等比例移动。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//如何移动大图片？等比例移动。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//    大图片/大盒子 = 小图片/mask盒子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//    大图片走的距离/mask走的距离 = （大图片-大盒子）/（小图片-黄盒子）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                var bili = (bigImg.offsetWidth-big.offsetWidth)/(small.offsetWidth-mask.offsetWidth);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//大图片走的距离/mask盒子都的距离 = 大图片/小图片</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> bili = bigImg.<span class=\"property\">offsetWidth</span> / small.<span class=\"property\">offsetWidth</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> xx = bili * x;  <span class=\"comment\">//知道比例，就可以移动大图片了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> yy = bili * y;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                bigImg.<span class=\"property\">style</span>.<span class=\"property\">marginTop</span> = -yy + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                bigImg.<span class=\"property\">style</span>.<span class=\"property\">marginLeft</span> = -xx + <span class=\"string\">&quot;px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;small&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/001.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mask&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;big&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/0001.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）tools.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by smyhvae on 2018/02/03.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//显示和隐藏</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">show</span>(<span class=\"params\">ele</span>) &#123;</span><br><span class=\"line\">    ele.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;block&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">hide</span>(<span class=\"params\">ele</span>) &#123;</span><br><span class=\"line\">    ele.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scroll</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 开始封装自己的scrollTop</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> != <span class=\"literal\">null</span>) &#123;  <span class=\"comment\">// ie9+ 高版本浏览器</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为 window.pageYOffset 默认的是  0  所以这里需要判断</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageXOffset</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> === <span class=\"string\">&quot;CSS1Compat&quot;</span>) &#123;    <span class=\"comment\">// 标准浏览器   来判断有没有声明DTD</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">            <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;   <span class=\"comment\">// 未声明 DTD</span></span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>,</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果演示：</p>\n<p><img src=\"http://img.smyhvae.com/20180203_1920.gif\"></p>\n","text":"绑定事件的两种方式&#x2F;DOM事件的级别我们在之前的一篇文章《04-JavaScript&#x2F;22-DOM简介和DOM操作》中已经讲过事件的概念。这里讲一下绑定（注册）事件的两种方式，我们以onclick事件为例。DOM0的写法：onclick1<br>2<br>3<","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"45-BOM简介和navigator.userAgent&History&Location","slug":"JavaScript/45-BOM简介和navigator.userAgent&History&Location","date":"2023-02-16T12:33:22.270Z","updated":"2023-02-16T12:35:16.787Z","comments":true,"path":"api/articles/JavaScript/45-BOM简介和navigator.userAgent&History&Location.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180425_1656.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"常见概念\"><a href=\"#常见概念\" class=\"headerlink\" title=\"常见概念\"></a>常见概念</h2><h3 id=\"JavaScript的组成\"><a href=\"#JavaScript的组成\" class=\"headerlink\" title=\"JavaScript的组成\"></a>JavaScript的组成</h3><p>JavaScript基础分为三个部分：</p>\n<ul>\n<li><p>ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。</p>\n</li>\n<li><p><strong>DOM</strong>：文档对象模型（Document object Model），操作<strong>网页上的元素</strong>的API。比如让盒子移动、变色、轮播图等。</p>\n</li>\n<li><p><strong>BOM</strong>：浏览器对象模型（Browser Object Model），操作<strong>浏览器部分功能</strong>的API。比如让浏览器自动滚动。</p>\n</li>\n</ul>\n<h3 id=\"常见的-BOM-对象\"><a href=\"#常见的-BOM-对象\" class=\"headerlink\" title=\"常见的 BOM 对象\"></a>常见的 BOM 对象</h3><p>BOM可以让我们通过JS来操作浏览器。BOM中为我们提供了一些对象，来完成对浏览器相关的操作。</p>\n<p>常见的 BOM对象有：</p>\n<ul>\n<li><p>Window：代表整个浏览器的窗口，同时 window 也是网页中的全局对象。</p>\n</li>\n<li><p>Navigator：代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p>\n</li>\n<li><p>Location：代表当前浏览器的地址栏信息，通过 Location 可以获取地址栏信息，或者操作浏览器跳转页面。</p>\n</li>\n<li><p>History：代表浏览器的历史记录，通过该对象可以操作浏览器的历史记录。由于隐私原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后翻页，而且该操作只在当次访问时有效。</p>\n</li>\n<li><p>Screen：代表用户的屏幕信息，通过该对象可以获取用户的显示器的相关信息。</p>\n</li>\n</ul>\n<p>备注：这些 BOM 对象都是作为 window 对象的属性保存的，可以通过window对象来使用，也可以直接使用。比如说，我可以使用 <code>window.location.href</code>，也可以直接使用 <code>location.href</code>，二者是等价的。</p>\n<p>备注2：不要忘了，之前学习过的<code>document</code>也是在<code>window</code>中保存的。</p>\n<p>这篇文章，我们先来讲一下 几个常见的 BOM 对象。</p>\n<h2 id=\"Navigator-和-navigator-userAgent\"><a href=\"#Navigator-和-navigator-userAgent\" class=\"headerlink\" title=\"Navigator 和 navigator.userAgent\"></a>Navigator 和 <code>navigator.userAgent</code></h2><p><code>Navigator</code>代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p>\n<p>由于历史原因，Navigator对象中的大部分属性都已经不能帮助我们识别浏览器了。</p>\n<p><strong>一般我们只会使用<code>navigator.userAgent</code>来获取浏览器的信息</strong>。</p>\n<p>userAgent 的值是一个字符串，简称 <strong>UA</strong>，这个字符串中包含了用来描述浏览器信息的内容，不同的浏览器会有不同的userAgent。</p>\n<p><strong>代码举例</strong>：（获取当前浏览器的UA）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> ua = navigator.<span class=\"property\">userAgent</span>; <span class=\"comment\">// 获取当前浏览器的 userAgent</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;qianguyihao 当前浏览器的UA是：&#x27;</span> + ua);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span> (<span class=\"regexp\">/firefox/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是火狐浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/chrome/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是Chrome浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/msie/i</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是IE浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;ActiveXObject&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;是 IE11 浏览器&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在电脑上模拟移动端浏览器\"><a href=\"#在电脑上模拟移动端浏览器\" class=\"headerlink\" title=\"在电脑上模拟移动端浏览器\"></a>在电脑上模拟移动端浏览器</h3><p>不同浏览器（包括微信内置的浏览器）的 userAgent 信息，是不一样的，我们可以根据 <code>navigator.userAgent</code>属性来获取。</p>\n<p>比如说，我们在电脑浏览器上，按F12，然后在控制台输入<code>navigator.userAgent</code>，如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180425_1656.png\"></p>\n<p>上图显示，MacOS上的Chrome浏览器的 userAgent 是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36&quot;</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以在电脑浏览器的控制台里可以添加很多设备，通过这种方式，可以模拟移动端浏览器的场景，非常有用，请务必掌握。操作如下：</p>\n<p>（1）需要点击 edit，手动添加：</p>\n<p><img src=\"http://img.smyhvae.com/20191127_1903.png\"></p>\n<p>（2）添加时，根据 User agent 来识别不同的浏览器：</p>\n<p><img src=\"http://img.smyhvae.com/20191127_1918.png\"></p>\n<h3 id=\"不同浏览器的-userAgent\"><a href=\"#不同浏览器的-userAgent\" class=\"headerlink\" title=\"不同浏览器的 userAgent\"></a>不同浏览器的 userAgent</h3><p>iOS 版微信浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13E233 MicroMessenger/6.3.15 NetType/WIFI Language/zh_CN</span><br></pre></td></tr></table></figure>\n\n<p>Android 版微信浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0.1; GT-I9502 Build/LRX22C; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 MicroMessenger/6.1.0.78_r1129455.543 NetType/WIFI</span><br></pre></td></tr></table></figure>\n\n<p>iOS 版本QQ浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_2 like Mac OS X) AppleWebKit/604.4.7 (KHTML, like Gecko) Mobile/15C202 QQ/7.3.5.473 V1_IPH_SQ_7.3.5_1_APP_A Pixel/1125 Core/UIWebView Device/Apple(iPhone X) NetType/WIFI QBWebViewType/1</span><br></pre></td></tr></table></figure>\n\n<p>Android 版 QQ浏览器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 4.4.2; PE-TL20 Build/HuaweiPE-TL20; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.132 MQQBrowser/6.2 TBS/043807 Mobile Safari/537.36 V1_AND_SQ_7.3.2_762_YYB_D QQ/7.3.2.3350 NetType/WIFI WebP/0.3.0 Pixel/1080</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>参考链接</strong>：</p>\n<ul>\n<li><p><a href=\"https://blog.csdn.net/taambernk520/article/details/80801574\">微信、QQ在Android和iOS的UserAgent</a></p>\n</li>\n<li><p><a href=\"http://www.cnblogs.com/7z7chn/p/5370352.html\">判断微信内置浏览器的UserAgent</a></p>\n</li>\n<li><p><a href=\"https://gist.github.com/wjp2013/fff34c063cf0cf227d65\">微信内置浏览器UserAgent的判断</a></p>\n</li>\n</ul>\n<h2 id=\"History-对象\"><a href=\"#History-对象\" class=\"headerlink\" title=\"History 对象\"></a>History 对象</h2><p>History对象：可以用来操作浏览器的向前或向后翻页。</p>\n<h3 id=\"History对象的属性\"><a href=\"#History对象的属性\" class=\"headerlink\" title=\"History对象的属性\"></a>History对象的属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"property\">length</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：获取浏览器历史列表中的 url 数量。注意，只是统计当次的数量，如果浏览器关了，数量会重置为1。</p>\n<h3 id=\"History对象的方法\"><a href=\"#History对象的方法\" class=\"headerlink\" title=\"History对象的方法\"></a>History对象的方法</h3><p><strong>方法1</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.back();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来回退到上一个页面，作用和浏览器的「回退按钮」一样。</p>\n<p><strong>方法2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">forward</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来跳转下一个页面，作用和浏览器的「前进按钮」一样。</p>\n<p><strong>方法3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.<span class=\"title function_\">go</span>( int n);  <span class=\"comment\">// 需要整数作为参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 代码举例：</span></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">1</span> ); <span class=\"comment\">// 向前跳转一个页面，相当于 history.forward()</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">2</span> ); <span class=\"comment\">// 表示向前跳转两个页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( <span class=\"number\">0</span> ); <span class=\"comment\">// 刷新当前页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( -<span class=\"number\">1</span> ); <span class=\"comment\">// 向后跳转一个页面，相当于 history.back()</span></span><br><span class=\"line\"></span><br><span class=\"line\">history.<span class=\"title function_\">go</span>( -<span class=\"number\">2</span> ); <span class=\"comment\">// 向后跳转两个页面</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>解释：向前&#x2F;向后跳转 n 个页面。</p>\n<p>备注：浏览器的前进按钮、后退按钮，在这个位置：</p>\n<p><img src=\"http://img.smyhvae.com/20180201_2146.png\"></p>\n<h2 id=\"Location-对象\"><a href=\"#Location-对象\" class=\"headerlink\" title=\"Location 对象\"></a>Location 对象</h2><p>Location 对象：封装了浏览器地址栏的 URL 信息。</p>\n<p>下面介绍一些常见的属性和方法。</p>\n<h3 id=\"Location-对象的属性：location-href\"><a href=\"#Location-对象的属性：location-href\" class=\"headerlink\" title=\"Location 对象的属性：location.href\"></a>Location 对象的属性：location.href</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.href</span><br><span class=\"line\"></span><br><span class=\"line\">location.href = &#x27;https://xxx&#x27;;</span><br></pre></td></tr></table></figure>\n\n<p>解释：获取当前页面的 url 路径（或者设置 url 路径）；或者跳转到指定路径。</p>\n<p>举例1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(location.<span class=\"property\">href</span>); <span class=\"comment\">// 获取当前页面的url 路径</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>举例2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"property\">href</span> = <span class=\"string\">&#x27;www.baidu.com&#x27;</span>; <span class=\"comment\">// 跳转到指定的页面链接。通俗理解就是：跳转到其他的页面</span></span><br></pre></td></tr></table></figure>\n\n<p>从上方的<strong>举例2</strong>中可以看出：如果直接将<code>location.href</code>属性修改为一个绝对路径（或相对路径），则页面会自动跳转到该路径，并生成相应的历史记录。</p>\n<p><strong>window.location.href 是异步代码：</strong></p>\n<p>需要特别注意的是：window.location.href的赋值，并不会中断Javascript的执行立即进行页面跳转。因为 LocationChange 行为在浏览器内核中是起定时器异步执行的。异步执行的好处是为了防止代码调用过深，导致栈溢出，另外也是为了防止递归进入加载逻辑，导致状态紊乱，保证导航请求是顺序执行的。</p>\n<p>解决办法：在 location.href 的下一行，加上 return 即可。意思是，执行了 location.href 之后，就不要再继续往下执行了。</p>\n<p>参考链接：<a href=\"https://juejin.cn/post/6844904040518647815\">location.href的异步机制</a></p>\n<h3 id=\"Location-对象的方法\"><a href=\"#Location-对象的方法\" class=\"headerlink\" title=\"Location 对象的方法\"></a>Location 对象的方法</h3><p><strong>方法1</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">assign</span>(str);</span><br></pre></td></tr></table></figure>\n\n<p>解释：用来跳转到其他的页面，作用和直接修改<code>location.href</code>一样。</p>\n<p><strong>方法2</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">reload</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：用于重新加载当前页面，作用和刷新按钮一样。</p>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location.<span class=\"title function_\">reload</span>(); <span class=\"comment\">// 重新加载当前页面。</span></span><br><span class=\"line\">location.<span class=\"title function_\">reload</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// 在方法的参数中传递一个true，则会强制清空缓存刷新页面。</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>方法3</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">location.<span class=\"title function_\">replace</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：使用一个新的页面替换当前页面，调用完毕也会跳转页面。但不会生成历史记录，不能使用「后退按钮」后退。</p>\n","text":"常见概念JavaScript的组成JavaScript基础分为三个部分：ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。DOM：文档对象模型（Document object Model），操作网页上的元素的API。比如","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"46-定时器","slug":"JavaScript/46-定时器","date":"2023-02-17T13:27:58.622Z","updated":"2023-02-17T13:28:13.892Z","comments":true,"path":"api/articles/JavaScript/46-定时器.json","excerpt":"","keywords":null,"cover":null,"content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"定时器的常见方法\"><a href=\"#定时器的常见方法\" class=\"headerlink\" title=\"定时器的常见方法\"></a>定时器的常见方法</h2><ul>\n<li><p>setInterval()：循环调用。将一段代码，<strong>每隔一段时间</strong>执行一次。（循环执行）</p>\n</li>\n<li><p>setTimeout()：延时调用。将一段代码，等待一段时间之后<strong>再执行</strong>。（只执行一次）</p>\n</li>\n</ul>\n<p>备注：在实际开发中，二者是可以根据需要，互相替代的。</p>\n<h2 id=\"setInterval-的使用\"><a href=\"#setInterval-的使用\" class=\"headerlink\" title=\"setInterval() 的使用\"></a>setInterval() 的使用</h2><p><code>setInterval()</code>：循环调用。将一段代码，<strong>每隔一段时间</strong>执行一次。（循环执行）</p>\n<p><strong>参数</strong>：</p>\n<ul>\n<li><p>参数1：回调函数，该函数会每隔一段时间被调用一次。</p>\n</li>\n<li><p>参数2：每次调用的间隔时间，单位是毫秒。</p>\n</li>\n</ul>\n<p><strong>返回值</strong>：返回一个Number类型的数据。这个数字用来作为定时器的<strong>唯一标识</strong>，方便用来清除定时器。</p>\n<h3 id=\"定义定时器\"><a href=\"#定义定时器\" class=\"headerlink\" title=\"定义定时器\"></a>定义定时器</h3><p><strong>方式一</strong>：匿名函数</p>\n<p>每间隔一秒，将 数字 加1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    num ++;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>方式二：</strong></p>\n<p>每间隔一秒，将 数字 加1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setInterval</span>(fn,<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   num ++;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"清除定时器\"><a href=\"#清除定时器\" class=\"headerlink\" title=\"清除定时器\"></a>清除定时器</h3><p>定时器的返回值是作为这个定时器的<strong>唯一标识</strong>，可以用来清除定时器。具体方法是：假设定时器setInterval()的返回值是<code>参数1</code>，那么<code>clearInterval(参数1)</code>就可以清除定时器。</p>\n<p>setTimeout()的道理是一样的。</p>\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> timer = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);  <span class=\"comment\">//每间隔一秒，打印一次num的值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        num ++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span>(num === <span class=\"number\">5</span>) &#123;  <span class=\"comment\">//打印四次之后，就清除定时器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"built_in\">clearInterval</span>(timer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"setTimeout-的使用\"><a href=\"#setTimeout-的使用\" class=\"headerlink\" title=\"setTimeout() 的使用\"></a>setTimeout() 的使用</h2><p><code>setTimeout()</code>：延时调用。将一段代码，等待一段时间之后<strong>再执行</strong>。（只执行一次）</p>\n<p><strong>参数</strong>：</p>\n<ul>\n<li><p>参数1：回调函数，该函数会每隔一段时间被调用一次。</p>\n</li>\n<li><p>参数2：每次调用的间隔时间，单位是毫秒。</p>\n</li>\n</ul>\n<p><strong>返回值</strong>：返回一个Number类型的数据。这个数字用来作为定时器的<strong>唯一标识</strong>，方便用来清除定时器。</p>\n<h3 id=\"定义和清除定时器\"><a href=\"#定义和清除定时器\" class=\"headerlink\" title=\"定义和清除定时器\"></a>定义和清除定时器</h3><p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> timer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>); <span class=\"comment\">// 3秒之后，再执行这段代码。</span></span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>代码举例：（箭头函数写法）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>); <span class=\"comment\">// 3秒之后，再执行这段代码。</span></span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"setTimeout-举例：5秒后关闭网页两侧的广告栏\"><a href=\"#setTimeout-举例：5秒后关闭网页两侧的广告栏\" class=\"headerlink\" title=\"setTimeout() 举例：5秒后关闭网页两侧的广告栏\"></a>setTimeout() 举例：5秒后关闭网页两侧的广告栏</h3><p>假设网页两侧的广告栏为两个img标签，它们的样式为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>5秒后关闭广告栏的js代码为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//获取相关元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> imgArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;img&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//设置定时器：5秒后关闭两侧的广告栏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setTimeout</span>(fn,<span class=\"number\">5000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            imgArr[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            imgArr[<span class=\"number\">1</span>].<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;none&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n","text":"定时器的常见方法setInterval()：循环调用。将一段代码，每隔一段时间执行一次。（循环执行）setTimeout()：延时调用。将一段代码，等待一段时间之后再执行。（只执行一次）备注：在实际开发中，二者是可以根据需要，互相替代的。setInterval() 的使用setI","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"48-jQuery动画详解","slug":"JavaScript/48-jQuery动画详解","date":"2023-02-17T13:27:58.626Z","updated":"2023-02-17T13:28:50.101Z","comments":true,"path":"api/articles/JavaScript/48-jQuery动画详解.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180205_1358.gif","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>jQuery提供的一组网页中常见的动画效果，这些动画是标准的、有规律的效果；同时还提供给我们了自定义动画的功能。</p>\n<h2 id=\"显示动画\"><a href=\"#显示动画\" class=\"headerlink\" title=\"显示动画\"></a>显示动画</h2><p>方式一：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">show</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：无参数，表示让指定的元素直接显示出来。其实这个方法的底层就是通过<code>display: block;</code>实现的。</p>\n<p>方式二：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">show</span>(<span class=\"number\">2000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>解释：通过控制元素的宽高、透明度、display属性，逐渐显示，2秒后显示完毕。</p>\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1358.gif\"></p>\n<p>方式三：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">show</span>(<span class=\"string\">&quot;slow&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>参数可以是：</p>\n<ul>\n<li><p>slow 慢：600ms</p>\n</li>\n<li><p>normal 正常：400ms</p>\n</li>\n<li><p>fast 快：200ms</p>\n</li>\n</ul>\n<p>解释：和方式二类似，也是通过控制元素的宽高、透明度、display属性，逐渐显示。</p>\n<p>方式四：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//show(毫秒值，回调函数;</span></span><br><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">show</span>(<span class=\"number\">5000</span>,<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;动画执行完毕！&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>解释：动画执行完后，立即执行回调函数。</p>\n<p><strong>总结：</strong></p>\n<p>上面的四种方式几乎一致：参数可以有两个，第一个是动画的执行时长，第二个是动画结束后执行的回调函数。</p>\n<h2 id=\"隐藏动画\"><a href=\"#隐藏动画\" class=\"headerlink\" title=\"隐藏动画\"></a>隐藏动画</h2><p>方式参照上面的show()方法的方式。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">hide</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">$(selector).<span class=\"title function_\">hide</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$(selector).<span class=\"title function_\">hide</span>(<span class=\"string\">&quot;slow&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$(selector).<span class=\"title function_\">hide</span>(<span class=\"number\">1000</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>显示和隐藏的来回切换：</strong></p>\n<p>显示和隐藏的来回切换采用的是toggle()方法：就是先执行show()，再执行hide()。</p>\n<p>同样是四种方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">toggle</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"滑入和滑出\"><a href=\"#滑入和滑出\" class=\"headerlink\" title=\"滑入和滑出\"></a>滑入和滑出</h2><p><strong>1、滑入动画效果</strong>：（类似于生活中的卷帘门）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">slideDown</span>(speed, 回调函数);</span><br></pre></td></tr></table></figure>\n\n<p>解释：下拉动画，显示元素。</p>\n<p>注意：省略参数或者传入不合法的字符串，那么则使用默认值：400毫秒（同样适用于fadeIn&#x2F;slideDown&#x2F;slideUp）</p>\n<p><strong>2 滑出动画效果：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">slideUp</span>(speed, 回调函数);</span><br></pre></td></tr></table></figure>\n\n<p>解释：上拉动画，隐藏元素。</p>\n<p><strong>3、滑入滑出切换动画效果：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">slideToggle</span>(speed, 回调函数);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释同show()方法。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//点击按钮后产生动画</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(0)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑入动画： slideDown(毫秒值，回调函数[显示完毕执行什么]);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">slideDown</span>(<span class=\"number\">2000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;动画执行完毕！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//滑出动画</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(1)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑出动画：slideUp(毫秒值，回调函数[显示完毕后执行什么]);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">slideUp</span>(<span class=\"number\">2000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;动画执行完毕！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(2)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑入滑出切换（同样有四种用法）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">slideToggle</span>(<span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>滑入<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>滑出<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>切换<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://img.smyhvae.com/20180205_1420.gif\"></p>\n<h2 id=\"淡入淡出动画\"><a href=\"#淡入淡出动画\" class=\"headerlink\" title=\"淡入淡出动画\"></a>淡入淡出动画</h2><p>1、淡入动画效果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">fadeIn</span>(speed, callback);</span><br></pre></td></tr></table></figure>\n\n<p>作用：让元素以淡淡的进入视线的方式展示出来。</p>\n<p>2、淡出动画效果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">fadeOut</span>(<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>作用：让元素以渐渐消失的方式隐藏起来</p>\n<p>3、淡入淡出切换动画效果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">fadeToggle</span>(<span class=\"string\">&#x27;fast&#x27;</span>, callback);</span><br></pre></td></tr></table></figure>\n\n<p>作用：通过改变透明度，切换匹配元素的显示或隐藏状态。</p>\n<p>参数的含义同show()方法。</p>\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*opacity: 1;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//点击按钮后产生动画</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(0)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //淡入动画用法1:   fadeIn();   不加参数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">fadeIn</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //淡入动画用法2:   fadeIn(2000);   毫秒值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeIn(2000);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //通过控制  透明度和display</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//淡入动画用法3:   fadeIn(字符串);   slow慢：600ms   normal正常:400ms   fast快：200ms</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeIn(&quot;slow&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeIn(&quot;fast&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeIn(&quot;normal&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//淡入动画用法4:   fadeIn(毫秒值，回调函数[显示完毕执行什么]);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeIn(5000,function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    alert(&quot;动画执行完毕！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//滑出动画</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(1)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //滑出动画用法1:   fadeOut();   不加参数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //滑出动画用法2:   fadeOut(2000);   毫秒值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut(2000);  //通过这个方法实现的：display: none;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //通过控制  透明度和display</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑出动画用法3:   fadeOut(字符串);   slow慢：600ms   normal正常:400ms   fast快：200ms</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut(&quot;slow&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut(&quot;fast&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut(&quot;normal&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑出动画用法1:   fadeOut(毫秒值，回调函数[显示完毕执行什么]);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;div&quot;).fadeOut(2000,function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    alert(&quot;动画执行完毕！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(2)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//滑入滑出切换</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//同样有四种用法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">fadeToggle</span>(<span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button:eq(3)&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//改透明度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//同样有四种用法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">fadeTo</span>(<span class=\"number\">1000</span>, <span class=\"number\">0.5</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>淡入<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>淡出<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>切换<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>改透明度为0.5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义动画\"><a href=\"#自定义动画\" class=\"headerlink\" title=\"自定义动画\"></a>自定义动画</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">animate</span>(&#123;params&#125;, speed, callback);</span><br></pre></td></tr></table></figure>\n\n<p>作用：执行一组CSS属性的自定义动画。</p>\n<ul>\n<li><p>第一个参数表示：要执行动画的CSS属性（必选）</p>\n</li>\n<li><p>第二个参数表示：执行动画时长（可选）</p>\n</li>\n<li><p>第三个参数表示：动画执行完后，立即执行的回调函数（可选）</p>\n</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> json = &#123;<span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">500</span>, <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">500</span>, <span class=\"string\">&quot;left&quot;</span>: <span class=\"number\">300</span>, <span class=\"string\">&quot;top&quot;</span>: <span class=\"number\">300</span>, <span class=\"string\">&quot;border-radius&quot;</span>: <span class=\"number\">100</span>&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> json2 = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;left&quot;</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;top&quot;</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;border-radius&quot;</span>: <span class=\"number\">100</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"string\">&quot;background-color&quot;</span>: <span class=\"string\">&quot;red&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//自定义动画</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">animate</span>(json, <span class=\"number\">1000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">animate</span>(json2, <span class=\"number\">1000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;动画执行完毕！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>自定义动画<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"停止动画\"><a href=\"#停止动画\" class=\"headerlink\" title=\"停止动画\"></a>停止动画</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">stop</span>(<span class=\"literal\">true</span>, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>里面的两个参数，有不同的含义。</strong></p>\n<p>第一个参数：</p>\n<ul>\n<li><p>true：后续动画不执行。</p>\n</li>\n<li><p>false：后续动画会执行。</p>\n</li>\n</ul>\n<p>第二个参数：</p>\n<ul>\n<li><p>true：立即执行完成当前动画。</p>\n</li>\n<li><p>false：立即停止当前动画。</p>\n</li>\n</ul>\n<p>PS：参数如果都不写，默认两个都是false。实际工作中，直接写stop()用的多。</p>\n<p><strong>效果演示：</strong></p>\n<p>当第二个参数为true时，效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1445.gif\"></p>\n<p>当第二个参数为false时，效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1450.gif\"></p>\n<p>这个<strong>后续动画</strong>我们要好好理解，来看个例子。</p>\n<p><strong>案例：鼠标悬停时，弹出下拉菜单（下拉时带动画）</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">330px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: green;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &gt; <span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//入口函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放入一级li中，让他里面的ul显示。移开隐藏。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqli = $(<span class=\"string\">&quot;.wrap&gt;ul&gt;li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli.<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">stop</span>().<span class=\"title function_\">slideDown</span>(<span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定事件(移开隐藏)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli.<span class=\"title function_\">mouseleave</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">stop</span>().<span class=\"title function_\">slideUp</span>(<span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1500.gif\"></p>\n<p>上方代码中，关键的地方在于，用了stop函数，再执行动画前，先停掉之前的动画。</p>\n<p>如果去掉stop()函数，效果如下：（不是我们期望的效果）</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1505.gif\"></p>\n<h3 id=\"stop方法的总结\"><a href=\"#stop方法的总结\" class=\"headerlink\" title=\"stop方法的总结\"></a>stop方法的总结</h3><p>当调用stop()方法后，队列里面的下一个动画将会立即开始。<br>但是，如果参数clearQueue被设置为true，那么队列面剩余的动画就被删除了，并且永远也不会执行。</p>\n<p>如果参数jumpToEnd被设置为true，那么当前动画会停止，但是参与动画的每一个CSS属性将被立即设置为它们的目标值。比如：slideUp()方法，那么元素会立即隐藏掉。如果存在回调函数，那么回调函数也会立即执行。</p>\n<p>注意：如果元素动画还没有执行完，此时调用stop()方法，那么动画将会停止。并且动画没有执行完成，那么回调函数也不会被执行。</p>\n<h2 id=\"举例：右下角的弹出广告\"><a href=\"#举例：右下角的弹出广告\" class=\"headerlink\" title=\"举例：右下角的弹出广告\"></a>举例：右下角的弹出广告</h2><p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.ad</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">230px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/ad.jpg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.ad</span> <span class=\"selector-tag\">span</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/h.jpg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：然广告ad部分，先滑入，在滑出，在淡入。然后绑定事件，点击span弹出</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.ad&quot;</span>).<span class=\"title function_\">slideDown</span>(<span class=\"number\">1000</span>).<span class=\"title function_\">slideUp</span>(<span class=\"number\">1000</span>).<span class=\"title function_\">fadeIn</span>(<span class=\"number\">1000</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;span&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">parent</span>().<span class=\"title function_\">fadeOut</span>(<span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//第二种写法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//            $(&quot;.ad&quot;).slideDown(1000, function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;.ad&quot;).slideUp(1000, function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    $(&quot;.ad&quot;).fadeIn(1000, function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        $(&quot;.ad&quot;).children(&quot;span&quot;).click(function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                            $(this).parent().fadeOut(1000, function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                                alert(&quot;执行完毕！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                            &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//            &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ani&quot;</span>&gt;</span>我是内容<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ad&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2000.gif\"></p>\n","text":"前言jQuery提供的一组网页中常见的动画效果，这些动画是标准的、有规律的效果；同时还提供给我们了自定义动画的功能。显示动画方式一：1<br>$(&quot;div&quot;).show();<br>解释：无参数，表示让指定的元素直接显示出来。其实这个方法的底层就是通过disp","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"47-jQuery的介绍和选择器","slug":"JavaScript/47-jQuery的介绍和选择器","date":"2023-02-17T13:27:58.624Z","updated":"2023-02-17T13:28:41.479Z","comments":true,"path":"api/articles/JavaScript/47-jQuery的介绍和选择器.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180204_1710.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"jQuery-的介绍\"><a href=\"#jQuery-的介绍\" class=\"headerlink\" title=\"jQuery 的介绍\"></a>jQuery 的介绍</h2><h3 id=\"引入-jQuery-的原因\"><a href=\"#引入-jQuery-的原因\" class=\"headerlink\" title=\"引入 jQuery 的原因\"></a>引入 jQuery 的原因</h3><p>在用 js 写代码时，会遇到一些问题：</p>\n<ul>\n<li><p>window.onload 事件有事件覆盖的问题，因此只能写一个事件。</p>\n</li>\n<li><p>代码容错性差。</p>\n</li>\n<li><p>浏览器兼容性问题。</p>\n</li>\n<li><p>书写很繁琐，代码量多。</p>\n</li>\n<li><p>代码很乱，各个页面到处都是。</p>\n</li>\n<li><p>动画效果很难实现。</p>\n</li>\n</ul>\n<p>如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1710.png\"></p>\n<p>jQuery的出现，可以解决以上问题。</p>\n<h3 id=\"什么是-jQuery\"><a href=\"#什么是-jQuery\" class=\"headerlink\" title=\"什么是 jQuery\"></a>什么是 jQuery</h3><p>jQuery 是 js 的一个库，封装了我们开发过程中常用的一些功能，方便我们调用，提高开发效率。</p>\n<p>js库是把我们常用的功能放到一个单独的文件中，我们用的时候，直接引用到页面里即可。</p>\n<p>以下是jQuery的相关信息：</p>\n<ul>\n<li><p>官网：<a href=\"http://jquery.com/\">http://jquery.com/</a></p>\n</li>\n<li><p>官网API文档：<a href=\"http://api.jquery.com/\">http://api.jquery.com/</a></p>\n</li>\n<li><p>中文汉化API文档：<a href=\"http://www.css88.com/jqapi-1.9/\">http://www.css88.com/jqapi-1.9/</a></p>\n</li>\n</ul>\n<h3 id=\"学习jQuery，主要是学什么\"><a href=\"#学习jQuery，主要是学什么\" class=\"headerlink\" title=\"学习jQuery，主要是学什么\"></a>学习jQuery，主要是学什么</h3><p>初期，主要学习如何使用jQuery操作DOM，其实就是学习jQuery封装好的那些API。</p>\n<p>这些API的共同特点是：几乎全都是方法。所以，在使用jQuery的API时，都是方法调用，也就是说要加小括号()，小括号里面是相应的参数，参数不同，功能不同。</p>\n<h3 id=\"jQuery初体验\"><a href=\"#jQuery初体验\" class=\"headerlink\" title=\"jQuery初体验\"></a>jQuery初体验</h3><p>现在用原生 js 来写下面这一段代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//原生js</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;button&quot;</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> divArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; divArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    divArr[i].<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&quot;block&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    divArr[i].<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;生命壹号&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>显示五个div盒子和设置内容<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果用 jQuery 来写，保持其他的代码不变，<code>&lt;script&gt;</code>部分的代码修改为：（需要提前引入 ）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//jquery版</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//获取元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> jQbtn = $(<span class=\"string\">&quot;button&quot;</span>);<span class=\"comment\">//根据标签名获取元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> jQdiv = $(<span class=\"string\">&quot;div&quot;</span>);<span class=\"comment\">//根据标签名获取元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        jQbtn.<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jQdiv.<span class=\"title function_\">show</span>(<span class=\"number\">1000</span>);<span class=\"comment\">//显示盒子。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jQdiv.<span class=\"title function_\">html</span>(<span class=\"string\">&quot;tomorrow！&quot;</span>);<span class=\"comment\">//设置内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//上面的两行可以写成链式编程：jQdiv.show(3000).html(1111);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);<span class=\"comment\">//事件是通过方法绑定的。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-的两大特点\"><a href=\"#jQuery-的两大特点\" class=\"headerlink\" title=\"jQuery 的两大特点\"></a>jQuery 的两大特点</h3><p>（1）<strong>链式编程</strong>：比如<code>.show()</code>和<code>.html()</code>可以连写成<code>.show().html()</code>。</p>\n<p>链式编程原理：return this。</p>\n<p>通常情况下，只有设置操作才能把链式编程延续下去。因为获取操作的时候，会返回获取到的相应的值，无法返回 this。</p>\n<p>（2）<strong>隐式迭代</strong>：隐式 对应的是 显式。隐式迭代的意思是：在方法的内部会为匹配到的所有元素进行循环遍历，执行相应的方法；而不用我们再进行循环，简化我们的操作，方便我们调用。</p>\n<p>如果获取的是多元素的值，大部分情况下返回的是第一个元素的值。</p>\n<h2 id=\"jQuery-的使用\"><a href=\"#jQuery-的使用\" class=\"headerlink\" title=\"jQuery 的使用\"></a>jQuery 的使用</h2><h3 id=\"使用-jQuery-的基本步骤\"><a href=\"#使用-jQuery-的基本步骤\" class=\"headerlink\" title=\"使用 jQuery 的基本步骤\"></a>使用 jQuery 的基本步骤</h3><p>（1）引包</p>\n<p>（2）入口函数</p>\n<p>（3）功能实现代码（事件处理）</p>\n<p>如下图所示：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1940.png\"></p>\n<p>主要，导包的代码一定要放在js代码的最上面。</p>\n<h3 id=\"jQuery-的版本\"><a href=\"#jQuery-的版本\" class=\"headerlink\" title=\"jQuery 的版本\"></a>jQuery 的版本</h3><p>jQuery 有两个大版本：</p>\n<ul>\n<li><p>1.x版本：最新版为 v1.11.3。</p>\n</li>\n<li><p>2.x版本：最新版为 v2.1.4（不再支持IE6、7、8）。</p>\n</li>\n<li><p>3.x版本。</p>\n</li>\n</ul>\n<p>PS：开发版本一般用1.10以上。</p>\n<p>我们以 v1.11.1版本为例，下载下来后发现，里面有两个文件：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_1950.png\"></p>\n<p>它们的区别是：</p>\n<ul>\n<li><p>第一个是未压缩版，第二个是压缩版。</p>\n</li>\n<li><p>平时开发过程中，可以使用任意一个版本；但是，项目上线的时候，推荐使用压缩版。</p>\n</li>\n</ul>\n<h2 id=\"jQuery-的入口函数和-符号\"><a href=\"#jQuery-的入口函数和-符号\" class=\"headerlink\" title=\"jQuery 的入口函数和 $ 符号\"></a>jQuery 的入口函数和 <code>$</code> 符号</h2><h3 id=\"入口函数（重要）\"><a href=\"#入口函数（重要）\" class=\"headerlink\" title=\"入口函数（重要）\"></a>入口函数（重要）</h3><p>原生 js 的入口函数指的是：<code>window.onload = function() &#123;&#125;;</code> 如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//原生 js 的入口函数。页面上所有内容加载完毕，才执行。</span></span><br><span class=\"line\"> <span class=\"comment\">//不仅要等文本加载完毕，而且要等图片也要加载完毕，才执行函数。</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>而 jQuery的入口函数，有以下几种写法：</p>\n<p>写法一：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.文档加载完毕，图片不加载的时候，就可以执行这个函数。</span></span><br><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>写法二：（写法一的简洁版）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2.文档加载完毕，图片不加载的时候，就可以执行这个函数。</span></span><br><span class=\"line\">$(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>写法三：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//3.文档加载完毕，图片也加载完毕的时候，在执行这个函数。</span></span><br><span class=\"line\">$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>jQuery入口函数与js入口函数的区别</strong>：</p>\n<p>区别一：书写个数不同：</p>\n<ul>\n<li><p>Js 的入口函数只能出现一次，出现多次会存在事件覆盖的问题。</p>\n</li>\n<li><p>jQuery 的入口函数，可以出现任意多次，并不存在事件覆盖问题。</p>\n</li>\n</ul>\n<p>区别二：执行时机不同：</p>\n<ul>\n<li><p>Js的入口函数是在<strong>所有的文件资源加载</strong>完成后，才执行。这些<strong>文件资源</strong>包括：页面文档、外部的js文件、外部的css文件、图片等。</p>\n</li>\n<li><p>jQuery的入口函数，是在文档加载完成后，就执行。文档加载完成指的是：DOM树加载完成后，就可以操作DOM了，不用等到所有的<strong>外部资源</strong>都加载完成。</p>\n</li>\n</ul>\n<p>文档加载的顺序：从上往下，边解析边执行。</p>\n<h3 id=\"jQuery的-符号\"><a href=\"#jQuery的-符号\" class=\"headerlink\" title=\"jQuery的$符号\"></a>jQuery的<code>$</code>符号</h3><p>jQuery 使用 <code>$</code> 符号原因：书写简洁、相对于其他字符与众不同、容易被记住。</p>\n<p>jQuery占用了我们两个变量：<code>$</code> 和 jQuery。当我们在代码中打印它们俩的时候：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jQuery);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($===jQuery);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打印结果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2014.png\"></p>\n<p>从打印结果可以看出，$ 代表的就是 jQuery。</p>\n<p>那怎么理解jQuery里面的 <code>$</code> 符号呢？</p>\n<p><strong><code>$</code> 实际上表示的是一个函数名</strong> 如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(); // 调用上面我们自定义的函数$</span><br><span class=\"line\"></span><br><span class=\"line\">$(document）.ready(function()&#123;&#125;); // 调用入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">$(function()&#123;&#125;); // 调用入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">$(“#btnShow”) // 获取id属性为btnShow的元素</span><br><span class=\"line\"></span><br><span class=\"line\">$(“div”) // 获取所有的div标签元素</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>如上方所示，jQuery 里面的 <code>$</code> 函数，根据传入参数的不同，进行不同的调用，实现不同的功能。返回的是jQuery对象。</p>\n<p>jQuery这个js库，除了<code> $</code> 之外，还提供了另外一个函数：jQuery。jQuery函数跟 <code>$</code> 函数的关系：<code>jQuery === $</code>。</p>\n<h2 id=\"js中的DOM对象-和-jQuery对象-比较（重点，难点）\"><a href=\"#js中的DOM对象-和-jQuery对象-比较（重点，难点）\" class=\"headerlink\" title=\"js中的DOM对象 和 jQuery对象 比较（重点，难点）\"></a>js中的DOM对象 和 jQuery对象 比较（重点，难点）</h2><h3 id=\"二者的区别\"><a href=\"#二者的区别\" class=\"headerlink\" title=\"二者的区别\"></a>二者的区别</h3><p>通过 jQuery 获取的元素是一个<strong>数组</strong>，数组中包含着原生JS中的DOM对象。举例：</p>\n<p>针对下面这样一个div结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过原生 js 获取这些元素节点的方式是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myBox = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;box&quot;</span>);           <span class=\"comment\">//通过 id 获取单个元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> boxArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&quot;box&quot;</span>);  <span class=\"comment\">//通过 class 获取的是数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> divArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;div&quot;</span>);    <span class=\"comment\">//通过标签获取的是数组</span></span><br></pre></td></tr></table></figure>\n\n<p>通过 jQuery 获取这些元素节点的方式是：（获取的都是数组）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取的是数组，里面包含着原生 JS 中的DOM对象。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> jqBox1 = $(<span class=\"string\">&quot;#box&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> jqBox2 = $(<span class=\"string\">&quot;.box&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> jqBox3 = $(<span class=\"string\">&quot;div&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>我们打印出来看看：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2045.png\"></p>\n<p>上图显示，由于JQuery 自带了 css()方法，我们还可以直接在代码中给 div 设置 css 属性。</p>\n<p><strong>总结</strong>：jQuery 就是把 DOM 对象重新包装了一下，让其具有了 jQuery 方法。</p>\n<h3 id=\"二者的相互转换\"><a href=\"#二者的相互转换\" class=\"headerlink\" title=\"二者的相互转换\"></a>二者的相互转换</h3><p><strong>1、 DOM 对象 转为 jQuery对象</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(js对象);</span><br></pre></td></tr></table></figure>\n\n<p>举例：（拿上一段的代码举例）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//转换。</span></span><br><span class=\"line\">jqBox1 = $(myBox);</span><br><span class=\"line\">jqBox2 = $(boxArr);</span><br><span class=\"line\">jqBox3 = $(divArr);</span><br></pre></td></tr></table></figure>\n\n<p>DOM 对象转换成了 jquery 对象之后，上面的功能可以直接调用。</p>\n<p><strong>2、jQuery对象 转为 DOM 对象</strong>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jquery对象[index];      <span class=\"comment\">//方式1（推荐）</span></span><br><span class=\"line\"></span><br><span class=\"line\">jquery对象.<span class=\"title function_\">get</span>(index);  <span class=\"comment\">//方式2</span></span><br></pre></td></tr></table></figure>\n\n<p>jQuery对象转换成了 DOM 对象之后，可以直接调用 DOM 提供的一些功能。如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//jquery对象转换成 DOM 对象之后</span></span><br><span class=\"line\">jqBox3[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;black&quot;</span>;</span><br><span class=\"line\">jqBox3.<span class=\"title function_\">get</span>(<span class=\"number\">4</span>).<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;pink&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结</strong>：如果想要用哪种方式设置属性或方法，必须转换成该类型。</p>\n<h3 id=\"举例：隔行变色\"><a href=\"#举例：隔行变色\" class=\"headerlink\" title=\"举例：隔行变色\"></a>举例：隔行变色</h3><p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//入口函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqLi = $(<span class=\"string\">&quot;li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; jqLi.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//jquery对象，转换成了js对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    jqLi[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;pink&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    jqLi[i].<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;yellow&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2111.png\"></p>\n<h2 id=\"jQuery-选择器\"><a href=\"#jQuery-选择器\" class=\"headerlink\" title=\"jQuery 选择器\"></a>jQuery 选择器</h2><p>我们以前在CSS中学习的选择器有：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2122.png\"></p>\n<p>今天来学习一下jQuery 选择器。</p>\n<p>jQuery选择器是jQuery强大的体现，它提供了一组方法，让我们更加方便的获取到页面中的元素。</p>\n<h3 id=\"1、jQuery-的基本选择器\"><a href=\"#1、jQuery-的基本选择器\" class=\"headerlink\" title=\"1、jQuery 的基本选择器\"></a>1、jQuery 的基本选择器</h3><p><img src=\"http://img.smyhvae.com/20180204_2125.png\"></p>\n<p>解释如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2126.png\"></p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//入口函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//三种方式获取jquery对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqBox1 = $(<span class=\"string\">&quot;#box&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqBox2 = $(<span class=\"string\">&quot;.box&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqBox3 = $(<span class=\"string\">&quot;div&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//操作标签选择器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox3.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;width&quot;</span>, <span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox3.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;height&quot;</span>, <span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox3.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin&quot;</span>, <span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox3.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//操作类选择器(隐式迭代，不用一个一个设置)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox2.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;red&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//操作id选择器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqBox1.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2133.png\"></p>\n<h3 id=\"2、层级选择器\"><a href=\"#2、层级选择器\" class=\"headerlink\" title=\"2、层级选择器\"></a>2、层级选择器</h3><p><img src=\"http://img.smyhvae.com/20180204_2138.png\"></p>\n<p>解释如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2139.png\"></p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//获取ul中的li设置为粉色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//后代：儿孙重孙曾孙玄孙....</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqLi = $(<span class=\"string\">&quot;ul li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqLi.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin&quot;</span>, <span class=\"number\">5</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqLi.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//子代：亲儿子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqOtherLi = $(<span class=\"string\">&quot;ul&gt;li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqOtherLi.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;red&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>aaa<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>bbb<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>ccc<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2145.png\"></p>\n<h3 id=\"3、基本过滤选择器\"><a href=\"#3、基本过滤选择器\" class=\"headerlink\" title=\"3、基本过滤选择器\"></a>3、基本过滤选择器</h3><p><img src=\"http://img.smyhvae.com/20180204_2150.png\"></p>\n<p>解释：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2151.png\"></p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :odd</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;li:odd&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;red&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :even</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;li:even&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;green&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :eq(index)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;ul li:eq(3)&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;30px&quot;</span>);  <span class=\"comment\">//设置第四个li的字体</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :lt(index)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;li:lt(6)&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;30px&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :gt(index)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;.ulList1 li:gt(7)&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;40px&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :first</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;.ulList li:first&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;40px&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// :last</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&quot;li:last&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;40px&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4、属性选择器\"><a href=\"#4、属性选择器\" class=\"headerlink\" title=\"4、属性选择器\"></a>4、属性选择器</h3><p><img src=\"http://img.smyhvae.com/20180204_2155.png\"></p>\n<h3 id=\"5、筛选选择器\"><a href=\"#5、筛选选择器\" class=\"headerlink\" title=\"5、筛选选择器\"></a>5、筛选选择器</h3><p><img src=\"http://img.smyhvae.com/20180204_2200.png\"></p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqul = $(<span class=\"string\">&quot;ul&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//find(selector); 从jquery对象的后代中查找</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//必须制定参数，如果不指定获取不到元素。length === 0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqul.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqul.<span class=\"title function_\">find</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//chidlren(selector); 从jquery对象的子代中查找</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//不写参数代表获取所有子元素。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqul.<span class=\"title function_\">children</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;green&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//eq(索引值); 从jquery对象的子代中查找该索引值的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//要写该数组中的第几个。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqul.<span class=\"title function_\">children</span>().<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;red&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//next(); 该元素的下一个兄弟元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqul.<span class=\"title function_\">children</span>().<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">next</span>().<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//siblings(selector); 该元素的所有兄弟元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqul.<span class=\"title function_\">children</span>().<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">next</span>().<span class=\"title function_\">siblings</span>().<span class=\"title function_\">css</span>(<span class=\"string\">&quot;border&quot;</span>, <span class=\"string\">&quot;1px solid blue&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//parent(); 该元素的父元素（和定位没有关系）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqul.<span class=\"title function_\">children</span>().<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">parent</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>我是ol中的li<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>我是ol中的li<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>我是ol中的li<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>我是ol中的li<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180204_2203.png\"></p>\n<h2 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h2><h3 id=\"举例1：鼠标悬停时，弹出下拉菜单【重要】\"><a href=\"#举例1：鼠标悬停时，弹出下拉菜单【重要】\" class=\"headerlink\" title=\"举例1：鼠标悬停时，弹出下拉菜单【重要】\"></a>举例1：鼠标悬停时，弹出下拉菜单【重要】</h3><p>完整版代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">330px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellowgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &gt; <span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//入口函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放入一级li中，让他里面的ul显示。移开隐藏。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqli = $(<span class=\"string\">&quot;.wrap&gt;ul&gt;li&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli.<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//这个位置用到了this.</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// console.log(this);  //打印结果是js中的dom对象。注意：jquery对象绑定的事件中，this指js中的dom对象。【重要】</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//让this中的ul显示出来。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                原生 js 的做法是：this.children[1].style.display = &quot;block&quot;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//把js的dom对象包装为jquery对象，然后用jquery方法操作</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">show</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定事件：鼠标移开时，隐藏下拉菜单</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli.<span class=\"title function_\">mouseleave</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>一级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:void(0);&quot;</span>&gt;</span>二级菜单3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>上方代码中，我们可以看到，用 jQuery来操作，是非常方便的。</p>\n<p>实现效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1030.gif\"></p>\n<p><strong>this的用法：</strong></p>\n<p>上方代码中，核心的一行代码是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">show</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">hide</span>();</span><br></pre></td></tr></table></figure>\n\n<p>如果我把这行代码中的this直接写成 DOM对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jqli.<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">show</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">jqli.<span class=\"title function_\">children</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">hide</span>();</span><br></pre></td></tr></table></figure>\n\n<p>产生的结果是：（不是我们期望的结果）</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1050.gif\"></p>\n<p>两张图的对比，可以看出this的作用：谁正在调用函数，this就指的是谁。</p>\n<h3 id=\"举例2：鼠标悬停时变色\"><a href=\"#举例2：鼠标悬停时变色\" class=\"headerlink\" title=\"举例2：鼠标悬停时变色\"></a>举例2：鼠标悬停时变色</h3><p>完整版代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求；隔行变色；鼠标悬停时，还要变色。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqli1 = $(<span class=\"string\">&quot;li:odd&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqli2 = $(<span class=\"string\">&quot;li:even&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli1.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;#cccccc&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqli2.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;white&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//鼠标悬停时变色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> color = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                color = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>);  <span class=\"comment\">//先把之前的颜色保存下来，鼠标离开时还原</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, <span class=\"string\">&quot;green&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//鼠标离开时，恢复为原来的颜色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">mouseleave</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background&quot;</span>, color);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>生命壹号，永不止步<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1100.gif\"></p>\n<h3 id=\"举例3：突出显示\"><a href=\"#举例3：突出显示\" class=\"headerlink\" title=\"举例3：突出显示\"></a>举例3：突出显示</h3><p>要求：鼠标悬停时，突出显示这个li，让其他的li都半透明。</p>\n<p>用 jQuery的选择起来实现，会发现非常方便。</p>\n<p>完整版代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">630px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">394px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"variable language_\">window</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放入li中，其他的li半透明，当前盒子的opacity值为1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.wrap&quot;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//链式编程</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;opacity&quot;</span>, <span class=\"number\">1</span>).<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;opacity&quot;</span>, <span class=\"number\">0.4</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//离开wrap的时候所有的li的全部opacity值为1；</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.wrap&quot;</span>).<span class=\"title function_\">mouseleave</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">children</span>().<span class=\"title function_\">children</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;opacity&quot;</span>, <span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(&quot;.wrap li&quot;).css(&quot;opacity&quot;,1);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/01.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/02.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/03.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/04.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/05.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/06.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>实现的效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1118_2.gif\"></p>\n<p>注意这里的css布局里，每一个图片都用一个li来存放。设置li的父亲的宽度之后，然后将li设置为浮动，即可自适应地排列成两排。</p>\n<p><del>工程文件</del>：</p>\n<ul>\n<li><p>2018-02-05-突出显示.rar</p>\n</li>\n<li><p>下载链接暂无</p>\n</li>\n</ul>\n<h3 id=\"举例4：手风琴效果\"><a href=\"#举例4：手风琴效果\" class=\"headerlink\" title=\"举例4：手风琴效果\"></a>举例4：手风琴效果</h3><p>完整版代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">list-style-type</span>: none;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.parentWrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>:center;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.menuGroup</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#999</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:<span class=\"number\">#e0ecff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.groupTitle</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>:block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>:<span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-bottom</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>:pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.menuGroup</span> &gt; <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>:<span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>:none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标点击span，让他下面的div显示出来。让其他的div隐藏。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.parentWrap span&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(this).next().show();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //让其他的隐藏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //点击的span的父亲li，的所有的兄弟元素li，的孩子元素div全部隐藏。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(this).parent(&quot;li&quot;).siblings(&quot;li&quot;).children(&quot;div&quot;).hide();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//连式编程</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">next</span>().<span class=\"title function_\">show</span>().<span class=\"title function_\">parent</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parentWrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menuGroup&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;groupTitle&quot;</span>&gt;</span>标题1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是弹出来的div1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menuGroup&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;groupTitle&quot;</span>&gt;</span>标题2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是弹出来的div2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menuGroup&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;groupTitle&quot;</span>&gt;</span>标题3<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是弹出来的div3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menuGroup&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;groupTitle&quot;</span>&gt;</span>标题4<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是弹出来的div4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1120.gif\"></p>\n<p>注意这里的 选择器的用法：parent、next</p>\n<h3 id=\"举例5：淘宝精品服饰广告\"><a href=\"#举例5：淘宝精品服饰广告\" class=\"headerlink\" title=\"举例5：淘宝精品服饰广告\"></a>举例5：淘宝精品服饰广告</h3><p>完整版代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrapper</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">298px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">248px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span>, <span class=\"selector-id\">#center</span>, <span class=\"selector-id\">#right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span> <span class=\"selector-tag\">li</span>, <span class=\"selector-id\">#right</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/lili.jpg</span>) repeat-x;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>, <span class=\"selector-id\">#right</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">48px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">27px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">27px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-id\">#right</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/abg.gif</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> solid pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-right</span>: <span class=\"number\">1px</span> solid pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：鼠标放入两侧的li中，让中间的ul中对应索引值的li显示出来，其他的隐藏。（右侧的li要+9）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//左侧先绑。获取绑mouseenter</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;#left li&quot;</span>).<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//显示对应索引值的中间的li</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//alert($(this).index());  获取索引值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#center li&quot;</span>).<span class=\"title function_\">eq</span>($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">index</span>()).<span class=\"title function_\">show</span>().<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//右侧</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;#right li&quot;</span>).<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//显示对应索引值的中间的li</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//alert($(this).index());  获取索引值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#center li:eq(&quot;</span> + ($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">index</span>() + <span class=\"number\">9</span>) + <span class=\"string\">&quot;)&quot;</span>).<span class=\"title function_\">show</span>().<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>女靴<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>雪地靴<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>冬裙<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>呢大衣<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>毛衣<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>棉服<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>女裤<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>羽绒服<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>牛仔裤<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/女靴.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/雪地靴.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/冬裙.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/呢大衣.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/毛衣.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/棉服.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/女裤.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/羽绒服.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/牛仔裤.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/女包.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/男包.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/登山鞋.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/皮带.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/围巾.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/皮衣.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/男毛衣.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/男棉服.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/男靴.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>女包<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>男包<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>登山鞋<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>皮带<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>围巾<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>皮衣<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>男毛衣<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>男棉服<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>男靴<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1135.gif\"></p>\n<p><del>工程文件</del>：</p>\n<ul>\n<li><p><a href=\"\">2018-02-05-淘宝精品服饰广告.rar</a></p>\n</li>\n<li><p>下载链接暂无。</p>\n</li>\n</ul>\n","text":"jQuery 的介绍引入 jQuery 的原因在用 js 写代码时，会遇到一些问题：window.onload 事件有事件覆盖的问题，因此只能写一个事件。代码容错性差。浏览器兼容性问题。书写很繁琐，代码量多。代码很乱，各个页面到处都是。动画效果很难实现。如下图所示： [Figur","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"51-Zepto入门","slug":"JavaScript/51-Zepto入门","date":"2023-02-17T13:27:58.619Z","updated":"2023-02-17T13:29:18.115Z","comments":true,"path":"api/articles/JavaScript/51-Zepto入门.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180414_2210.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"Zepto-的介绍\"><a href=\"#Zepto-的介绍\" class=\"headerlink\" title=\"Zepto 的介绍\"></a>Zepto 的介绍</h2><h3 id=\"什么是-Zepto\"><a href=\"#什么是-Zepto\" class=\"headerlink\" title=\"什么是 Zepto\"></a>什么是 Zepto</h3><p>zepto是轻量级的JavaScript库，专门为移动端定制的框架。</p>\n<p>与jquery有着类似的API，俗称：会jquery就会用zepto</p>\n<h3 id=\"zepto的特点\"><a href=\"#zepto的特点\" class=\"headerlink\" title=\"zepto的特点\"></a>zepto的特点</h3><ul>\n<li><p>针对移动端</p>\n</li>\n<li><p>轻量级，压缩版本只有8kb左右</p>\n</li>\n<li><p>响应，执行快</p>\n</li>\n<li><p>语法、API大部分同jquery一样，学习难度低，上手快。</p>\n</li>\n<li><p>目前API完善的框架中体积最小的一个</p>\n</li>\n</ul>\n<h3 id=\"相关网址\"><a href=\"#相关网址\" class=\"headerlink\" title=\"相关网址\"></a>相关网址</h3><ul>\n<li><p>官网：<a href=\"http://zeptojs.com/\">http://zeptojs.com/</a></p>\n</li>\n<li><p>GitHub：<a href=\"https://github.com/madrobby/zepto\">https://github.com/madrobby/zepto</a></p>\n</li>\n</ul>\n<h2 id=\"Zepto-与-jQuery-的前世今生\"><a href=\"#Zepto-与-jQuery-的前世今生\" class=\"headerlink\" title=\"Zepto 与 jQuery 的前世今生\"></a>Zepto 与 jQuery 的前世今生</h2><h3 id=\"相同点\"><a href=\"#相同点\" class=\"headerlink\" title=\"相同点\"></a>相同点</h3><ul>\n<li><p>都是优秀的js函数库</p>\n</li>\n<li><p>语法、API大部分都一样（zepto是按照jquery的思路来设计的）</p>\n</li>\n<li><p>Zepto 相当于 jQuery 的子集</p>\n</li>\n<li><p>同jQuery一样，都是以<code>$</code>符号为核心函数。</p>\n</li>\n</ul>\n<h3 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h3><h2 id=\"Zepto-的初体验\"><a href=\"#Zepto-的初体验\" class=\"headerlink\" title=\"Zepto 的初体验\"></a>Zepto 的初体验</h2><p>（1）Zepto 库的下载：</p>\n<p>我们去官网下载 Zepto的开发版本<code>zepto.js</code>：</p>\n<p><img src=\"http://img.smyhvae.com/20180414_2210.png\"></p>\n<p>官网里，还有这样一张图：</p>\n<p><img src=\"http://img.smyhvae.com/20180414_2215.png\"></p>\n<p>上图的意思是：</p>\n<ul>\n<li><p>最前面打钩的那五个api，已经包含在<code>zepto.js </code>文件里了；</p>\n</li>\n<li><p>后面没有打钩的那些api，如果需要用它们，必须单独下载响应的文件。</p>\n</li>\n</ul>\n<p>比如说，移动端的 touch 事件是很常见的，我们可以将<code>touch.js</code>这个文件下载，稍后用。</p>\n<p>（2）代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>我是 div<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/zepto1.2.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/touch.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&#x27;#btn&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hello world&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码实现的效果是，当手在div上滑动时，就会弹出 alert窗。可以看出，这里面代码的写法和 jQuery 是一致的。</p>\n<p>注意，我们要将浏览器切换到手机模式，才能看到<code>touchstart</code>事件的效果；否则，在浏览器上点来点去，是没有反应的。</p>\n<h2 id=\"Zepto-和-jQuery-相同的-api\"><a href=\"#Zepto-和-jQuery-相同的-api\" class=\"headerlink\" title=\"Zepto 和 jQuery 相同的  api\"></a>Zepto 和 jQuery 相同的  api</h2><blockquote>\n<p>意思是，jQuery 和 Zepto 有哪些共同点。</p>\n</blockquote>\n<h3 id=\"jQuery-的主要特性\"><a href=\"#jQuery-的主要特性\" class=\"headerlink\" title=\"jQuery 的主要特性\"></a>jQuery 的主要特性</h3><p>下面来讲一下 jQuery 的主要特性（jQuery 的核心函数<code>$</code>、jQuery 对象），它们对 Zepto 来说，同样适用。</p>\n<p><strong>1、jQuery 的核心函数<code>$</code></strong>:</p>\n<p>作为函数使用（参数）：</p>\n<ul>\n<li><p>function</p>\n</li>\n<li><p>html字符串</p>\n</li>\n<li><p>DOM code</p>\n</li>\n<li><p>选择器字符串</p>\n</li>\n</ul>\n<p>作为对象调用(方法)：</p>\n<ul>\n<li><p>$.ajax() $.get() $.post()</p>\n</li>\n<li><p>$.isArray()      $.each()      $.isFunction()      $.trim()</p>\n</li>\n</ul>\n<p><strong>2、jQuery 对象</strong>：</p>\n<p>概念：jquery核心函数$()调用返回的对象就是jquery对象的数组（可能有只有一个）。</p>\n<p>使用列举：</p>\n<ul>\n<li><p>addClass()</p>\n</li>\n<li><p>removeClass()</p>\n</li>\n<li><p>show()</p>\n</li>\n<li><p>find()</p>\n</li>\n</ul>\n<h3 id=\"代码举例\"><a href=\"#代码举例\" class=\"headerlink\" title=\"代码举例\"></a>代码举例</h3><p>1、<code>$.each()</code>方法举例：（遍历数组）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/zepto-1.2.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/zepto-1.2.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $.<span class=\"title function_\">each</span>(arr, <span class=\"keyword\">function</span> (<span class=\"params\">index, item</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, item);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180416_1145.png\"></p>\n<p>2、<code>append()</code>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/zepto-1.2.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;libs/touch.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"string\">&#x27;.box1&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&#x27;.box1&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;p&gt;我是新添加的元素&lt;/p&gt;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码实现的效果是：每次，当手在box1上滑动时，会在 box1 中新添加一个元素。</p>\n<p>4、<code>find()</code>方法举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;.box1&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;touch&#x27;</span>);</span><br><span class=\"line\">    $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;p&#x27;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;background&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>代码解释：找到 box1 中的 p 标签， 给 p 标签设置背景色。</p>\n<p>注意，代码里的<code>$(this).find()</code>相当于<code>this.find</code>，只不过this没有find方法，而$有find方法。</p>\n<p>5、<code>show()</code>方法举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">`.box1`</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;.box2&#x27;</span>).<span class=\"title function_\">show</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>假设 box2 一开始是隐藏的，事件中，让 box2 显示出来。</p>\n","text":"Zepto 的介绍什么是 Zeptozepto是轻量级的JavaScript库，专门为移动端定制的框架。与jquery有着类似的API，俗称：会jquery就会用zeptozepto的特点针对移动端轻量级，压缩版本只有8kb左右响应，执行快语法、API大部分同jquery一样，学","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"50-jQuery的事件机制和其他知识","slug":"JavaScript/50-jQuery的事件机制和其他知识","date":"2023-02-17T13:27:58.632Z","updated":"2023-02-17T13:29:12.150Z","comments":true,"path":"api/articles/JavaScript/50-jQuery的事件机制和其他知识.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180205_2338.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"jQuery-设置宽度和高度\"><a href=\"#jQuery-设置宽度和高度\" class=\"headerlink\" title=\"jQuery 设置宽度和高度\"></a>jQuery 设置宽度和高度</h2><p>宽度操作：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">height</span>();     <span class=\"comment\">//不带参数表示获取高度</span></span><br><span class=\"line\">$(selector).<span class=\"title function_\">height</span>(<span class=\"number\">200</span>);  <span class=\"comment\">//带参数表示设置高度</span></span><br></pre></td></tr></table></figure>\n\n\n<p>宽度操作：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">width</span>();     <span class=\"comment\">//不带参数表示获取宽度</span></span><br><span class=\"line\">$(selector).<span class=\"title function_\">width</span>(<span class=\"number\">200</span>);  <span class=\"comment\">//带参数表示设置高宽度</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>问题</strong>：jQuery的css()获取高度，和jQuery的height获取高度，二者的区别？</p>\n<p>答案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">css</span>();     <span class=\"comment\">//返回的是string类型，例如：30px</span></span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">height</span>();  <span class=\"comment\">//返回得失number类型，例如：30。常用于数学计算。</span></span><br></pre></td></tr></table></figure>\n\n<p>如上方代码所示，<code>$(&quot;div&quot;).height();</code>返回的是number类型，常用于数学计算。</p>\n<h2 id=\"jQuery-的坐标操作\"><a href=\"#jQuery-的坐标操作\" class=\"headerlink\" title=\"jQuery 的坐标操作\"></a>jQuery 的坐标操作</h2><h3 id=\"offset-方法\"><a href=\"#offset-方法\" class=\"headerlink\" title=\"offset()方法\"></a>offset()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">offset</span>();</span><br><span class=\"line\">$(selector).<span class=\"title function_\">offset</span>(&#123;<span class=\"attr\">left</span>:<span class=\"number\">100</span>, <span class=\"attr\">top</span>: <span class=\"number\">150</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>作用：获取或设置元素相对于 document 文档的位置。参数解释：</p>\n<ul>\n<li><p>无参数：表示获取。返回值为：{left:num, top:num}。返回值是相对于document的位置。</p>\n</li>\n<li><p>有参数：表示设置。参数建议使用 number 数值类型。</p>\n</li>\n</ul>\n<p>注意：设置offset后，如果元素没有定位(默认值：static)，则被修改为relative。</p>\n<h3 id=\"position-方法\"><a href=\"#position-方法\" class=\"headerlink\" title=\"position()方法\"></a>position()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">position</span>();</span><br></pre></td></tr></table></figure>\n\n<p>作用：获取相对于其最近的<strong>带有定位</strong>的父元素的位置。返回值为对象：<code>&#123;left:num, top:num&#125;</code>。</p>\n<p>注意：只能获取，不能设置。</p>\n<h3 id=\"scrollTop-方法\"><a href=\"#scrollTop-方法\" class=\"headerlink\" title=\"scrollTop()方法\"></a>scrollTop()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">scrollTop</span>();</span><br><span class=\"line\">$(selector).<span class=\"title function_\">scrollTop</span>(<span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<p>作用：获取或者设置元素被卷去的头部的距离。参数解释：</p>\n<ul>\n<li><p>无参数：表示获取偏移。</p>\n</li>\n<li><p>有参数：表示设置偏移，参数为数值类型。</p>\n</li>\n</ul>\n<h3 id=\"scrollLeft-方法\"><a href=\"#scrollLeft-方法\" class=\"headerlink\" title=\"scrollLeft()方法\"></a>scrollLeft()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">scrollLeft</span>();</span><br><span class=\"line\">$(selector).<span class=\"title function_\">scrollLeft</span>(<span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<p>作用：获取或者设置元素水平方向滚动的位置。参数解释：</p>\n<ul>\n<li><p>无参数：表示获取偏移。</p>\n</li>\n<li><p>有参数：表示设置偏移，参数为数值类型。</p>\n</li>\n</ul>\n<p>代码示范：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">5000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//距离页面最顶端或者最左侧的距离和有没有定位没有关系</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>($(<span class=\"string\">&quot;.box2&quot;</span>).<span class=\"title function_\">offset</span>().<span class=\"property\">top</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//距离页面最顶端或者最左侧的距离和有没有定位没有关系</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">1</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;.box2&quot;</span>).<span class=\"title function_\">offset</span>(&#123;<span class=\"string\">&quot;left&quot;</span>: <span class=\"number\">1000</span>, <span class=\"string\">&quot;top&quot;</span>: <span class=\"number\">1000</span>&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//距离父系盒子中带有定位的盒子的距离(获取的就是定位值，和margin/padding无关)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">2</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>($(<span class=\"string\">&quot;.box2&quot;</span>).<span class=\"title function_\">position</span>().<span class=\"property\">top</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//距离父系盒子中带有定位的盒子的距离(获取的就是定位值，和margin/padding无关)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">3</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;.box2&quot;</span>).<span class=\"title function_\">position</span>().<span class=\"property\">top</span> = <span class=\"string\">&quot;100px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//获取被选取的头部</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">4</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>($(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scrollTop</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//获取被选取的头部</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">5</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scrollTop</span>(<span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>offset().top获取<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>offset().top设置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>position().top获取<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>position().top设置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>scrollTop()<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>scrollTop()<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery的事件机制\"><a href=\"#jQuery的事件机制\" class=\"headerlink\" title=\"jQuery的事件机制\"></a>jQuery的事件机制</h2><h3 id=\"常见的事件绑定\"><a href=\"#常见的事件绑定\" class=\"headerlink\" title=\"常见的事件绑定\"></a>常见的事件绑定</h3><ul>\n<li><p>click(handler) \t\t\t\t单击事件。</p>\n</li>\n<li><p>blur(handler) \t\t\t\t失去焦点事件。</p>\n</li>\n<li><p>mouseenter(handler) \t\t鼠标进入事件。</p>\n</li>\n<li><p>mouseleave(handler)\t\t\t鼠标离开事件。</p>\n</li>\n<li><p>dbclick(handler) \t\t\t双击事件。</p>\n</li>\n<li><p>change(handler)  改变事件，如：文本框值改变，下拉列表值改变等。</p>\n</li>\n<li><p>focus(handler) \t\t\t\t获得焦点事件。</p>\n</li>\n<li><p>keydown(handler) \t\t\t键盘按下事件。</p>\n</li>\n</ul>\n<p>参考链接：<a href=\"http://www.w3school.com.cn/jquery/jquery_ref_events.asp\">http://www.w3school.com.cn/jquery/jquery_ref_events.asp</a></p>\n<h3 id=\"on方式绑定事件\"><a href=\"#on方式绑定事件\" class=\"headerlink\" title=\"on方式绑定事件\"></a>on方式绑定事件</h3><p>最早采用的是 bind、delegate等方式绑定的。jQuery 1.7版本后，jQuery用on统一了所有的事件处理的方法，此方法兼容zepto(移动端类似于jQuery的一个库)。</p>\n<p>格式举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click mouseenter&quot;</span>, <span class=\"string\">&quot;.box&quot;</span>, &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"number\">111</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">data</span>);      <span class=\"comment\">//event.data获取的就是第三个参数这个json。</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">data</span>.<span class=\"property\">name</span>); <span class=\"comment\">//event.data.name获取的是name的值。</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li><p>第一个参数：events，绑定事件的名称可以是由空格分隔的多个事件（标准事件或者自定义事件）。上方代码绑定的是单击事件和鼠标进入事件。</p>\n</li>\n<li><p>第二个参数：selector, 执行事件的后代元素。</p>\n</li>\n<li><p>第三个参数：data，传递给事件处理函数的数据，事件触发的时候通过event.data来使用（也就是说，可以通过event拿到data）</p>\n</li>\n<li><p>第四个参数：handler，事件处理函数。</p>\n</li>\n</ul>\n<p>简单点的写法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>,<span class=\"string\">&quot;.box&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"off方式解绑事件\"><a href=\"#off方式解绑事件\" class=\"headerlink\" title=\"off方式解绑事件\"></a>off方式解绑事件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">off</span>();      <span class=\"comment\">// 解绑匹配元素的所有事件</span></span><br><span class=\"line\"></span><br><span class=\"line\">$(selector).<span class=\"title function_\">off</span>(<span class=\"string\">&quot;click&quot;</span>);   <span class=\"comment\">// 解绑匹配元素的所有click事件</span></span><br><span class=\"line\"></span><br><span class=\"line\">$(selector).<span class=\"title function_\">off</span>( <span class=\"string\">&quot;click&quot;</span>, <span class=\"string\">&quot;**&quot;</span> );   <span class=\"comment\">// 解绑所有代理的click事件，元素本身的事件不会被解绑</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery的事件对象\"><a href=\"#jQuery的事件对象\" class=\"headerlink\" title=\"jQuery的事件对象\"></a>jQuery的事件对象</h2><p>event.data                  传递给事件处理程序的额外数据</p>\n<p>event.currentTarget             等同于this，当前DOM对象</p>\n<p>event.pageX                     鼠标相对于文档左部边缘的位置</p>\n<p>event.target                    触发事件源，不一定&#x3D;&#x3D;&#x3D;this</p>\n<p>event.stopPropagation()；    阻止事件冒泡</p>\n<p>event.preventDefault();     阻止默认行为</p>\n<p>event.type                  事件类型：click，dbclick…</p>\n<p>event.which                     鼠标的按键类型：左1 中2 右3</p>\n<p>event.keyCode               键盘按键代码</p>\n<p>代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, &#123;&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">data</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">currentTarget</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">target</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">pageX</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">type</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">which</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">keyCode</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方代码中，我们通过event参数，获取了点击事件的各种event里的属性。</p>\n<p>单击网页后，打印结果为：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2338.png\"></p>\n<p><strong>举例</strong>：键盘上对的按键按下时，变色</p>\n<p>这个时候就要用到event参数，因为要获取event.keyCode，才能知道按下的是键盘上的哪个按键。</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">h1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求：在页面上，按键.是哪个颜色的首写字母div就改变为该颜色，然后span内容赋值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.给document绑定keyup事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.获取值，根据此值，给div和span上色和内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> div = $(<span class=\"string\">&quot;#bgChange&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> span = $(<span class=\"string\">&quot;#keyCodeSpan&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">keyup</span>(<span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;  <span class=\"comment\">//键盘弹出时，触发事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//调用方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">setColor</span>(e.<span class=\"property\">keyCode</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">setColor</span>(<span class=\"params\">keyCode</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//alert(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//2.获取值，根据此值，给div和span上色和内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">switch</span> (keyCode) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">80</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//修改内容pink</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">setEle</span>(<span class=\"string\">&quot;pink&quot;</span>, keyCode);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">66</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//修改内容blue</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">setEle</span>(<span class=\"string\">&quot;blue&quot;</span>, keyCode);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">79</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//修改内容orange</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">setEle</span>(<span class=\"string\">&quot;orange&quot;</span>, keyCode);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">82</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//修改内容red</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">setEle</span>(<span class=\"string\">&quot;red&quot;</span>, keyCode);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">case</span> <span class=\"number\">89</span>:</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//修改内容yellow</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">setEle</span>(<span class=\"string\">&quot;yellow&quot;</span>, keyCode);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">default</span> :</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;系统没有设置该颜色！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">function</span> <span class=\"title function_\">setEle</span>(<span class=\"params\">a, b</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    div.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background-color&quot;</span>, a);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    span.<span class=\"title function_\">text</span>(b);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.给document绑定keyup事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//            $(document).keyup(function (e) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //alert(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                //2.获取值，根据此值，给div和span上色和内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                switch (e.keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    case 80:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        //修改内容pink</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        div.css(&quot;background-color&quot;,&quot;pink&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        span.text(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        break;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    case 66:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        //修改内容blue</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        div.css(&quot;background-color&quot;,&quot;blue&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        span.text(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        break;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    case 79:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        //修改内容orange</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        div.css(&quot;background-color&quot;,&quot;orange&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        span.text(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        break;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    case 82:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        //修改内容red</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        div.css(&quot;background-color&quot;,&quot;red&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        span.text(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        break;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    case 89:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        //修改内容yellow</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        div.css(&quot;background-color&quot;,&quot;yellow&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        span.text(e.keyCode);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        break;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    default :</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                        alert(&quot;系统没有设置该颜色！&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//            &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>按键改变颜色<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bgChange&quot;</span>&gt;</span></span><br><span class=\"line\">        keyCode为：</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;keyCodeSpan&quot;</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"jQuery-的两大特点\"><a href=\"#jQuery-的两大特点\" class=\"headerlink\" title=\"jQuery 的两大特点\"></a>jQuery 的两大特点</h2><p>（1）<strong>链式编程</strong>：比如<code>.show()</code>和<code>.html()</code>可以连写成<code>.show().html()</code>。</p>\n<p>链式编程原理：return this。</p>\n<p>通常情况下，只有设置操作才能把链式编程延续下去。因为获取操作的时候，会返回获取到的相应的值，无法返回 this。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">end</span>(); <span class=\"comment\">// 结束当前链最近的一次过滤操作，并且返回匹配元素之前的状态。</span></span><br></pre></td></tr></table></figure>\n\n\n<p>（2）<strong>隐式迭代</strong>：隐式 对应的是 显式。隐式迭代的意思是：在方法的内部会为匹配到的所有元素进行循环遍历，执行相应的方法；而不用我们再进行循环，简化我们的操作，方便我们调用。</p>\n<p>如果获取的是多元素的值，大部分情况下返回的是第一个元素的值。</p>\n<p><strong>举例：</strong>五角星评分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>五角星评分案例<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.comment</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#ff3100</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.comment</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> star_none = <span class=\"string\">&#x27;☆&#x27;</span>; <span class=\"comment\">// 空心五角星</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> star_sel = <span class=\"string\">&#x27;★&#x27;</span>; <span class=\"comment\">// 实心五角星</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求1：鼠标放悬停时，当前的li和之前所有的li内容全部变为实心五角星，移开变为空心。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.comment li&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;mouseenter&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//当前五角星，和之前的所有五角星，全部是实心的，其他的为空心</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//写法一：分两次写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(this).text(star_sel).prevAll(&quot;li&quot;).text(star_sel);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                $(this).nextAll(&quot;li&quot;).text(star_none);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//写法二：一次性写完，但要用到end()，否则会出问题。【重要】</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">text</span>(star_sel).<span class=\"title function_\">prevAll</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">text</span>(star_sel).<span class=\"title function_\">end</span>().<span class=\"title function_\">nextAll</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">text</span>(star_none);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.comment li&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;mouseleave&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//bug：如果没有点击过li，那么会出现无法清除的现象，处理办法就是先判断，看看是否有current类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;li.current&quot;</span>).<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    $(<span class=\"string\">&quot;.comment li&quot;</span>).<span class=\"title function_\">text</span>(star_none);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//当鼠标移开的时候，谁有current类名，那么当前和之前所有的li前部是实心五角星，后面的所有li都是空心</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    $(<span class=\"string\">&quot;li.current&quot;</span>).<span class=\"title function_\">text</span>(star_sel).<span class=\"title function_\">prevAll</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">text</span>(star_sel).<span class=\"title function_\">end</span>().<span class=\"title function_\">nextAll</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">text</span>(star_none);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求2：鼠标点击那个li，当你前li和之前所有的li都变成实心五角星，其他变为空心。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.comment li&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//点击哪个li给他加一个类名。清空其他所有的li的类名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;current&quot;</span>).<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">removeAttr</span>(<span class=\"string\">&quot;class&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;comment&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>☆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>☆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>☆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>☆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>☆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>上方代码中，注意end的用法，很巧妙。</p>\n<p>实现效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180206_1100.gif\"></p>\n<h2 id=\"each的用法\"><a href=\"#each的用法\" class=\"headerlink\" title=\"each的用法\"></a>each的用法</h2><p>大部分情况下是不需要使用each方法的，因为jQuery的隐式迭代特性。</p>\n<p>但是，如果要对每个元素做不同的处理，这时候就用到了each方法。</p>\n<p>格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\">index,element</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li><p>参数一：表示当前元素在所有匹配元素中的索引号</p>\n</li>\n<li><p>参数二：参数二表示当前元素（是js 中的DOM对象，而不是jQuery对象）</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">50px</span>/<span class=\"number\">100px</span> <span class=\"string\">&quot;simsun&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//设置每个不一样的盒子透明度逐渐递增</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;ul li&quot;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span> (<span class=\"params\">index, element</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(element).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;opacity&quot;</span>, (index + <span class=\"number\">1</span>) / <span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index+<span class=\"string\">&quot;---&quot;</span>+element.<span class=\"property\">tagName</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa1&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa2&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa3&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa4&quot;</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa5&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa6&quot;</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa7&quot;</span>&gt;</span>7<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa8&quot;</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa9&quot;</span>&gt;</span>9<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;aaa10&quot;</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180206_1110.png\"></p>\n<h2 id=\"多库共存\"><a href=\"#多库共存\" class=\"headerlink\" title=\"多库共存\"></a>多库共存</h2><p><strong>多库共存</strong>指的是：jQuery占用了 <code>$</code> 和 <code>jQuery</code> 这两个变量。当在同一个页面中引用了 jQuery 库以及其他的库（或者其他版本的jQuery库），恰好其他的库中也用到了 <code>$</code> 或者<code>jQuery</code>变量.那么，要保证每个库都能正常使用，就产生了多库共存的问题。</p>\n<p>温馨提示：我们可以通过以下方式获取 jQuery 库的版本号。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($.fn.<span class=\"property\">jquery</span>);  <span class=\"comment\">//打印 jQuery 库的版本号</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>办法一</strong>：让 jQuery 放弃对 <code>$</code> 的使用权：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">noConflict</span>();</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180206_1126.png\"></p>\n<p>上图中，代码中同时包含了两个版本的库。1.11.1版本放弃了对 <code>$</code> 的使用权，交给了1.8.2版本；但是1.11.1版本并没有放弃对 <code>jQuery</code>关键字的使用权。</p>\n<p>办法二：同时放弃放弃两个符号的使用权，并定义一个新的使用权（如果有三个库时，可以这样用）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">noConflict</span>(<span class=\"literal\">true</span>);   <span class=\"comment\">//返回值是新的关键字</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180206_1133.png\"></p>\n<h2 id=\"jQuery-的插件机制\"><a href=\"#jQuery-的插件机制\" class=\"headerlink\" title=\"jQuery 的插件机制\"></a>jQuery 的插件机制</h2><p>jQuery 库，虽然功能强大，但也不是面面俱到。jQuery 是通过插件的方式，来扩展它的功能：</p>\n<ul>\n<li><p>当你需要某个插件的时候，你可以“安装”到jQuery上面，然后使用。</p>\n</li>\n<li><p>当你不再需要这个插件，那你就可以从jQuery上“卸载”它。</p>\n</li>\n</ul>\n<h3 id=\"插件之改变颜色\"><a href=\"#插件之改变颜色\" class=\"headerlink\" title=\"插件之改变颜色\"></a>插件之改变颜色</h3><p>jQuery的自定义动画方法animate()，在执行动画时，是不支持设置背景色这个属性的。这个时候可以借助<code>jQuery.color.js</code>这个插件。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery.color.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//点击按钮，改变盒子的宽度和背景色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">animate</span>(&#123;<span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">200</span>, <span class=\"string\">&quot;background-color&quot;</span>: <span class=\"string\">&quot;red&quot;</span>&#125;, <span class=\"number\">2000</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;动画结束&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>变色<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180206_1400.gif\"></p>\n<p>上方代码中，因为加入了一行插件：（注意顺序是放在jQuery插件之后）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery.color.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>否则的话，在动画执行的过程中，是无法设置背景色的。</p>\n<h3 id=\"插件之懒加载\"><a href=\"#插件之懒加载\" class=\"headerlink\" title=\"插件之懒加载\"></a>插件之懒加载</h3><p>懒加载：当打开一个网页时，只有当我看到某个部分，再加载那个部分；而不是一下子全部加载完毕。这样可以优化打开的速度。</p>\n<p>比如说，我可以设置一张图片为懒加载，于是，这张图片会等我宠幸到它的时候，它再打开。</p>\n<p>代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">3000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--懒加载的使用。第一步：导包(必须在jquery库的下方）--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery.lazyload.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//第二步骤：调用懒加载的方法实现功能。参数的不同，功能也不同。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;img.lazy&quot;</span>).<span class=\"title function_\">lazyload</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--需要实现将图片设置为懒加载模式--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;lazy&quot;</span> <span class=\"attr\">data-original</span>=<span class=\"string\">&quot;images/01.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;640&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;480&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","text":"jQuery 设置宽度和高度宽度操作：1<br>2<br>$(selector).height();     //不带参数表示获取高度<br>$(selector).height(200);  //带参数表示设置高度<br>宽度操作：1<br>2<br>$(selector).w","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]},{"title":"49-jQuery操作DOM","slug":"JavaScript/49-jQuery操作DOM","date":"2023-02-17T13:27:58.628Z","updated":"2023-02-17T13:29:06.712Z","comments":true,"path":"api/articles/JavaScript/49-jQuery操作DOM.json","excerpt":"","keywords":null,"cover":"http://img.smyhvae.com/20180205_1315.png","content":"<p><ArticleTopAd></ArticleTopAd></p>\n<h2 id=\"文本主要内容\"><a href=\"#文本主要内容\" class=\"headerlink\" title=\"文本主要内容\"></a>文本主要内容</h2><ul>\n<li><p>样式和类操作</p>\n</li>\n<li><p>节点操作</p>\n</li>\n</ul>\n<h2 id=\"样式操作和类操作\"><a href=\"#样式操作和类操作\" class=\"headerlink\" title=\"样式操作和类操作\"></a>样式操作和类操作</h2><p>作用：设置或获取元素的样式属性值。</p>\n<h3 id=\"样式操作\"><a href=\"#样式操作\" class=\"headerlink\" title=\"样式操作\"></a>样式操作</h3><p><strong>1、设置样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//设置单个样式：  css(属性，值);</span></span><br><span class=\"line\">  $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background-color&quot;</span>,<span class=\"string\">&quot;red&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//设置多个样式：  css(json);</span></span><br><span class=\"line\">$(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">css</span>(&#123;<span class=\"string\">&quot;width&quot;</span>:<span class=\"number\">100</span>,<span class=\"string\">&quot;height&quot;</span>:<span class=\"number\">100</span>,<span class=\"string\">&quot;background-color&quot;</span>:<span class=\"string\">&quot;pink&quot;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>2、获取样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取样式：css(属性);</span></span><br><span class=\"line\"><span class=\"comment\">//获取的时候如果有很多个，那么获取jquery对象中的第一个</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;width&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>举例如下：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1315.png\"></p>\n<h3 id=\"类操作（className）\"><a href=\"#类操作（className）\" class=\"headerlink\" title=\"类操作（className）\"></a>类操作（className）</h3><p><strong>1、添加类样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">addClass</span>(<span class=\"string\">&quot;liItem&quot;</span>);  <span class=\"comment\">//为指定元素添加类className</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：此处类名不带点，所有类操作的方法类名都不带点。</p>\n<p><strong>2、移除类样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">removeClass</span>(<span class=\"string\">&quot;liItem&quot;</span>);  <span class=\"comment\">//为指定元素移除类 className</span></span><br><span class=\"line\">$(selector).<span class=\"title function_\">removeClass</span>();          <span class=\"comment\">//不指定参数，表示移除被选中元素的所有类</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3、判断有没有类样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">hasClass</span>(<span class=\"string\">&quot;liItem&quot;</span>);   <span class=\"comment\">//判断指定元素是否包含类 className</span></span><br></pre></td></tr></table></figure>\n\n<p>此时，会返回true或false。jquery对象中，只要有一个带有指定类名的就是true，所有都不带才是false。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.current</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//添加类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">addClass</span>(<span class=\"string\">&quot;current&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">hasClass</span>(<span class=\"string\">&quot;current&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">1</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//删除类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">removeClass</span>(<span class=\"string\">&quot;current&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">hasClass</span>(<span class=\"string\">&quot;current&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//alert($(&quot;div&quot;).hasClass(&quot;current&quot;));//jquery对象中只要有一个带有类名的就是true，所有都不带才是false。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>添加<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;current&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>4、切换类样式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">toggleClass</span>(“liItem”);    <span class=\"comment\">//为指定元素切换类 className，该元素有类则移除，没有指定类则添加。</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：为指定元素切换类 className，该元素有类则移除，没有指定类则添加。</p>\n<p>如果采用采用正常的思路实现上面这句话，代码是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">hasClass</span>(<span class=\"string\">&quot;current&quot;</span>))&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果有类名，那么删除</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">removeClass</span>(<span class=\"string\">&quot;current&quot;</span>)</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果没有类名，那么添加</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">addClass</span>(<span class=\"string\">&quot;current&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在有了toggleClass()方法，一行代码即可实现。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: green;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.current</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//需求：点击按钮 ，切换背景</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//切换类（toggleCLass）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">toggleClass</span>(<span class=\"string\">&quot;current&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>切换背景<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>实现的效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1330.gif\"></p>\n<h3 id=\"样式操作和类操作的比较\"><a href=\"#样式操作和类操作的比较\" class=\"headerlink\" title=\"样式操作和类操作的比较\"></a>样式操作和类操作的比较</h3><ul>\n<li><p>操作的样式非常少，那么可以通过<code>.css()</code>实现。</p>\n</li>\n<li><p>操作的样式很多，建议通过使用类 class 的方式来操作。</p>\n</li>\n<li><p>如果考虑以后维护方便（把CSS从js中分离出来）的话，推荐使用类的方式来操作。</p>\n</li>\n</ul>\n<p><strong>举例</strong>：addClass+removeClass</p>\n<p>代码实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrapper</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">475px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-top</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.tab</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">320px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.tab</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">34px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">34px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-top</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.tab</span> <span class=\"selector-tag\">span</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">14px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.products</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">1002px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ddd</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">476px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.products</span> <span class=\"selector-class\">.main</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.products</span> <span class=\"selector-class\">.main</span><span class=\"selector-class\">.selected</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.tab</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.active</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"variable language_\">window</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求:鼠标放到那个li上，让该li添加active类，下面的对应的.main的div添加selected</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.tab&gt;li&quot;</span>).<span class=\"title function_\">mouseenter</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//不用判断，当前的li添加active类，其他的删除active类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">addClass</span>(<span class=\"string\">&quot;active&quot;</span>).<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">removeClass</span>(<span class=\"string\">&quot;active&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//对应索引值的div添加selected类，其他的删除selected类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//【重要】根据tab的索引值获取下方图片div的索引值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;.products&gt;div&quot;</span>).<span class=\"title function_\">eq</span>($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">index</span>()).<span class=\"title function_\">addClass</span>(<span class=\"string\">&quot;selected&quot;</span>).<span class=\"title function_\">siblings</span>(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">removeClass</span>(<span class=\"string\">&quot;selected&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tab&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tab-item active&quot;</span>&gt;</span>国际大牌<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>◆<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tab-item&quot;</span>&gt;</span>国妆名牌<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>◆<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tab-item&quot;</span>&gt;</span>清洁用品<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>◆<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tab-item&quot;</span>&gt;</span>男士精品<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;products&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main selected&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/guojidapai.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/guozhuangmingpin.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/qingjieyongpin.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/nanshijingpin.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>上方代码中，我们注意，tab栏和下方图片栏的index值，一一对应，这里用得很巧妙。</p>\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_1345.gif\"></p>\n<h2 id=\"jQuery-的节点操作\"><a href=\"#jQuery-的节点操作\" class=\"headerlink\" title=\"jQuery 的节点操作\"></a>jQuery 的节点操作</h2><h3 id=\"动态创建元素\"><a href=\"#动态创建元素\" class=\"headerlink\" title=\"动态创建元素\"></a>动态创建元素</h3><p>原生 js 有<a href=\"07-DOM%E6%93%8D%E4%BD%9C%E7%BB%83%E4%B9%A0%EF%BC%9AinnerHTML%E7%9A%84%E6%96%B9%E5%BC%8F%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0.md\">三种动态创建元素</a>的方式。这里我们学一下 jQuery 动态创建元素。<strong>注意，创建的是  jQuery 对象</strong>。</p>\n<p>方式一：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $spanNode1 = $(<span class=\"string\">&quot;&lt;span&gt;我是一个span元素&lt;/span&gt;&quot;</span>);  <span class=\"comment\">// 返回的是 jQuery对象</span></span><br></pre></td></tr></table></figure>\n\n<p>此方法类似于 原生 js 中的<code>document.createElement(&quot;标签名&quot;);</code></p>\n<p>方式二：（推荐）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> node = $(<span class=\"string\">&quot;#box&quot;</span>).<span class=\"title function_\">html</span>(<span class=\"string\">&quot;&lt;li&gt;我是li&lt;/li&gt;&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>此方法类似于 原生 js 中的<code>innerHTML</code>。</p>\n<p>举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式一：      $(&quot;标签&quot;)             :类比于js中的document.createElement(&quot;li&quot;);</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;&lt;li class=&#x27;aaa&#x27;&gt;我是li标签&lt;/li&gt;&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式二：      $(&quot;ul&quot;).html(&quot;&quot;);     :类比innerHTML属性。因为此属性，识别标签。</span></span><br><span class=\"line\">$(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">html</span>(<span class=\"string\">&quot;&lt;li&gt;我是html方法穿件出来的li标签&lt;/li&gt;&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"添加元素\"><a href=\"#添加元素\" class=\"headerlink\" title=\"添加元素\"></a>添加元素</h3><p>jQuery 添加元素的方法非常多，最重要的方法是<code>append()</code>。格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方式一：在$(selector)中追加$node</span></span><br><span class=\"line\">$(selector).<span class=\"title function_\">append</span>($node);   <span class=\"comment\">//参数是 jQuery对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方式二：在$(selector)中追加div元素，</span></span><br><span class=\"line\">$(selector).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;div&gt;&lt;/div&gt;&#x27;</span>);  <span class=\"comment\">//参数是 htmlString</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>作用：在被选元素内部的最后一个子元素（或内容）后面插入内容（存在或者创建出来的元素都可以）。</p>\n<p>通俗的解释：<strong>在盒子里的最末尾添加元素</strong>。</p>\n<ul>\n<li><p>如果是页面中存在的元素，那调用append()后，会把这个元素放到相应的目标元素里面去；但是，原来的这个元素，就不存在了。</p>\n</li>\n<li><p>如果是给多个目标追加元素，那么方法的内部会复制多份这个元素，然后追加到多个目标里面去。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//创建一个新的jquery对象li</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> jqNewLi = $(<span class=\"string\">&quot;&lt;li&gt;我是jquery创建出来的li。用的是append方法添加&lt;/li&gt;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//append();  在盒子里的最末尾添加与严肃</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">append</span>(jqNewLi);    <span class=\"comment\">//把新创建的 li 塞进已知的 ul 中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//jqNewLi.appendTo($(&quot;ul&quot;)); //方式二：把新创建的li塞进ul中。作用同上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>添加li<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>我是土著li<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2020.gif\"></p>\n<p><strong>其他的添加元素的方法：</strong></p>\n<p>方法2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">appendTo</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>作用：同append()，只不过是反着写的。</p>\n<p>方法3：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">prepend</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>作用：在元素的第一个子元素前面追加内容或节点。</p>\n<p>方法4：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">after</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>作用：在被选元素之后，作为<strong>兄弟元素</strong>插入内容或节点。</p>\n<p><strong>方法5：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">before</span>(node);</span><br></pre></td></tr></table></figure>\n\n<p>作用：在被选元素之前，作为<strong>兄弟元素</strong>插入内容或节点。</p>\n<h3 id=\"清空元素\"><a href=\"#清空元素\" class=\"headerlink\" title=\"清空元素\"></a>清空元素</h3><p>方式一：没有参数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">empty</span>();</span><br><span class=\"line\">$(selector).<span class=\"title function_\">html</span>(<span class=\"string\">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n\n<p>解释：清空指定元素的所有子元素（光杆司令）。</p>\n<p>方式二：</p>\n<p>&#x2F;&#x2F;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">remove</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：“自杀” 。把自己以及所有的内部元素从文档中删除掉。</p>\n<h3 id=\"复制元素\"><a href=\"#复制元素\" class=\"headerlink\" title=\"复制元素\"></a>复制元素</h3><p>格式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复制的新元素 = $(selector).<span class=\"title function_\">clone</span>();</span><br></pre></td></tr></table></figure>\n\n<p>解释：复制$(selector)这个元素。是深层复制。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>推荐使用 <code>html(&quot;&lt;span&gt;&lt;/span&gt;&quot;)</code> 方法来创建元素或者 <code>html(&quot;&quot;)</code> 清空元素。</p>\n<h3 id=\"案例：选择水果\"><a href=\"#案例：选择水果\" class=\"headerlink\" title=\"案例：选择水果\"></a>案例：选择水果</h3><p>完整版代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        select &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">170px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">240px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#a4ff34</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.将左侧的子标签全部移动到右侧。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//右侧标签.append(左侧标签);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#sel2&quot;</span>).<span class=\"title function_\">append</span>($(<span class=\"string\">&quot;#sel1 option&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.将右侧的子标签全部移动到左侧。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">1</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//左侧标签.append(右侧标签);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#sel1&quot;</span>).<span class=\"title function_\">append</span>($(<span class=\"string\">&quot;#sel2 option&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//第二步：获取子元素的时候要注意，获取的必须是，被选中的元素。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//技术点：怎么获取被选中的子元素呢？？？答案：option:selected;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.将左侧被选中的子标签移动到右侧</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">2</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//右侧标签.append(左侧标签);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#sel2&quot;</span>).<span class=\"title function_\">append</span>($(<span class=\"string\">&quot;#sel1 option:selected&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.将右侧被选中的子标签移动到左侧</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;button&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">3</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//右侧标签.append(左侧标签);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#sel1&quot;</span>).<span class=\"title function_\">append</span>($(<span class=\"string\">&quot;#sel2 option:selected&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sel1&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span>香蕉<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span>苹果<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span>鸭梨<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span>葡萄<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>&gt;&gt;&gt;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>&lt;&lt;&lt;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>&lt;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sel2&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2040.gif\"></p>\n<h3 id=\"案例：动态添加表格项\"><a href=\"#案例：动态添加表格项\" class=\"headerlink\" title=\"案例：动态添加表格项\"></a>案例：动态添加表格项</h3><p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-collapse</span>: collapse;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-spacing</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#c0c0c0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d0d0d0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#404060</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#09c</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: bold <span class=\"number\">16px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">14px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f0f0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#fafafa</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 模拟从后台拿到的数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> data = [&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&quot;博客园&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://www.cnblogs.com/smyhvae/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">type</span>: <span class=\"string\">&quot;程序员的精神家园&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&quot;简书&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&quot;https://www.jianshu.com/u/4d2e6b4bf117&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">type</span>: <span class=\"string\">&quot;写作平台&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&quot;百度&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&quot;https://www.baidu.com/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">type</span>: <span class=\"string\">&quot;你就知道&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求:点击按钮，然后生成tr里面生成三个td.数组元素个数个tr。然后放入tbody中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//2.利用for循环,把数组中的所有数据组合成一个字符串。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//3.把生成的字符串设置为html内容添加进tbody中。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//1.绑定事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;input&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//写入到click事件中，每次点击以后把之前的str清空【重要】</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//2.利用for循环,把数组中的所有数据组合成一个字符串。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;data.<span class=\"property\">length</span>;i++)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//如何生成3组？？？</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                    str += &quot;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&quot;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//data[i] = 数组中的每一个json</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//data[i].name = 数组中的每一个json的name属性值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    str += <span class=\"string\">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+data[i].<span class=\"property\">name</span>+<span class=\"string\">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>+data[i].<span class=\"property\">url</span>+<span class=\"string\">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>+data[i].<span class=\"property\">type</span>+<span class=\"string\">&quot;&lt;/td&gt;&lt;/tr&gt;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//3.把生成的字符串设置为html内容添加进tbody中。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#j_tbData&quot;</span>).<span class=\"title function_\">html</span>(str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;获取数据&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;j_btnGetData&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>地址<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>说明<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;j_tbData&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;tr&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;td&gt;1&lt;/td&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;td&gt;2&lt;/td&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;td&gt;3&lt;/td&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;/tr&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现的效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2045.gif\"></p>\n<p>代码解释：每次生成字符串str之前，记得先把之前的str清空，不然每次点击按钮，都会继续添加表格项。</p>\n<h3 id=\"将上一个案例进一步提升：点击按钮，添加数据\"><a href=\"#将上一个案例进一步提升：点击按钮，添加数据\" class=\"headerlink\" title=\"将上一个案例进一步提升：点击按钮，添加数据\"></a>将上一个案例进一步提升：点击按钮，添加数据</h3><p>暂略。</p>\n<h2 id=\"jQuery-设置和获取属性\"><a href=\"#jQuery-设置和获取属性\" class=\"headerlink\" title=\"jQuery 设置和获取属性\"></a>jQuery 设置和获取属性</h2><p>jQuery 无法直接操作节点的属性和src等，我们需要借助attr()方法。下面介绍。</p>\n<h3 id=\"属性操作\"><a href=\"#属性操作\" class=\"headerlink\" title=\"属性操作\"></a>属性操作</h3><p><strong>（1）设置属性：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;title&quot;</span>, <span class=\"string\">&quot;千古壹号&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：第一个参数表示：要设置的属性名称。第二个参数表示：该属性名称对应的值。</p>\n<p><strong>（2）获取属性：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;title&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>参数为：要获取的属性的名称，返回指定属性对应的值。</p>\n<p><strong>总结</strong>：两个参数是给属性赋值，单个参数是获取属性值。</p>\n<p><strong>（3）移除属性：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">removeAttr</span>(<span class=\"string\">&quot;title&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>参数为：要移除的属性的名称。</p>\n<p>（4）form表单中的 <code>prop()</code>方法：</p>\n<p>针对<code>checked、selected、disabled</code>属性，要使用 <code>prop()</code>方法，而不是其他的方法。</p>\n<p>prop方法通常用来影响DOM元素的动态状态，而不是改变的HTML属性。例如：input和button的disabled特性，以及checkbox的checked特性。</p>\n<p>总结：细节可以参考：<a href=\"http://api.jquery.com/prop/\">http://api.jquery.com/prop/</a>。</p>\n<p>以上四项的代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.aaa</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid red;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//获取元素，绑定属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqinp = $(<span class=\"string\">&quot;input&quot;</span>).<span class=\"title function_\">eq</span>(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqinp2 = $(<span class=\"string\">&quot;input:checkbox&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> jqbtn = $(<span class=\"string\">&quot;button&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            jqbtn.<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//是绑定到jquery的衣服上，而不是标签上。所以没达到效果</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                jqinp.title = 111;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                console.log(jqinp.title);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//绑定到标签上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;title&quot;</span>, <span class=\"number\">111</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;title&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;aaa&quot;</span>, <span class=\"number\">111</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;aaa&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//两个参数是给属性赋值，单个参数是获取属性值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;aaa&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                jqinp.<span class=\"title function_\">removeAttr</span>(<span class=\"string\">&quot;class&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jqinp.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//form中的特殊属性，用prop</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                jqinp2.<span class=\"title function_\">prop</span>(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">//                jqinp2.attr(&quot;checked&quot;,true);//一次性的。鼠标多点击几次，就失效了。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>绑定<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2115.gif\"></p>\n<p><strong>案例：表格案例全选反选</strong></p>\n<p>完整版代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.wrap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-collapse</span>: collapse;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-spacing</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#c0c0c0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d0d0d0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#404060</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">th</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#09c</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: bold <span class=\"number\">16px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font</span>: <span class=\"number\">14px</span> <span class=\"string\">&quot;微软雅黑&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f0f0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#fafafa</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        $(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求1：点击上面的多选按钮，下面的所有多选按钮都和上面的一致</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求2：点击下面的多选按钮，判断下面的所有多选按钮都是否全部被选定只有全部被选定上面的才被选定</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求1：点击上面的多选按钮，下面的所有多选按钮都和上面的一致</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//步骤：绑定事件，直接让下面的所有按钮和上面的按钮属性值一模一样</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;#j_cbAll&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//直接让下面的所有按钮和上面的按钮属性值一模一样</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                $(<span class=\"string\">&quot;#j_tb input:checkbox&quot;</span>).<span class=\"title function_\">prop</span>(<span class=\"string\">&quot;checked&quot;</span>, $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">prop</span>(<span class=\"string\">&quot;checked&quot;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求2：点击下面的多选按钮，判断下面的所有多选按钮都是否全部被选定只有全部被选定上面的才被选定</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//需求2：点击下面的多选按钮，判断下面的所有多选按钮都是否全部被选定只有全部被选定上面的才被选定</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;#j_tb input:checkbox&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断，只有所有都背选定，上面的才被选定</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//技术点：带有checked属性的标签和checkbox个数一样多的时候</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;#j_tb input:checkbox&quot;</span>).<span class=\"property\">length</span> === $(<span class=\"string\">&quot;#j_tb input:checked&quot;</span>).<span class=\"property\">length</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//只有所有的都有checked属性，上面的才被选定</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    $(<span class=\"string\">&quot;#j_cbAll&quot;</span>).<span class=\"title function_\">prop</span>(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    $(<span class=\"string\">&quot;#j_cbAll&quot;</span>).<span class=\"title function_\">prop</span>(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;j_cbAll&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>课程名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>所属团队<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;j_tb&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>千古壹号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>css<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>千古壹号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>html<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>千古壹号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>jQuery<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>千古壹号<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"val-方法和-text-方法\"><a href=\"#val-方法和-text-方法\" class=\"headerlink\" title=\"val()方法和 text()方法\"></a>val()方法和 text()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">val</span>();</span><br></pre></td></tr></table></figure>\n\n<p>作用：设置或返回 form 表单元素的value值，例如：input、select、textarea 的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">text</span>();</span><br></pre></td></tr></table></figure>\n\n<p>作用：设置或获取匹配元素的文本内容。不带参数表示，会把所有匹配到的元素内容拼接为一个<strong>字符串</strong>，不同于其他获取操作。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">text</span>(<span class=\"string\">&quot;我是内容&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n\n<p>作用：设置的内容包含html标签，那么text()方法会把他们当作<strong>纯文本</strong>内容输出。</p>\n<p>总结：</p>\n<ul>\n<li><p>text() 不识别标签。</p>\n</li>\n<li><p>html() 识别标签。</p>\n</li>\n</ul>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;jquery-1.11.1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">jQuery</span>(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//val();   获取标签中的value属性的值。带有参数是赋值(类比js中的value属性)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;input&quot;</span>).<span class=\"title function_\">val</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;input&quot;</span>).<span class=\"title function_\">val</span>(<span class=\"string\">&quot;我是value()赋值的input内容&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;input&quot;</span>).<span class=\"title function_\">val</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;-----------------&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//text();  获取双闭合标签中的文本值。（不识别标签）(类比js中的innerText)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">text</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">text</span>(<span class=\"string\">&quot;&lt;li&gt;我是text()赋值的&lt;/li&gt;&quot;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">text</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;-----------------&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//html();  获取双闭合标签中的文本值。（识别标签）(类比js中的innerHTML)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">html</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">html</span>(<span class=\"string\">&quot;&lt;li&gt;我是html()赋值的&lt;/li&gt;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>($(<span class=\"string\">&quot;div&quot;</span>).<span class=\"title function_\">html</span>());</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;我是input中已存在的 value内容&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>打印结果：</p>\n<p><img src=\"http://img.smyhvae.com/20180205_2139.png\"></p>\n","text":"文本主要内容样式和类操作节点操作样式操作和类操作作用：设置或获取元素的样式属性值。样式操作1、设置样式：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br><br>  //设置单个样式：  css(属性，值);<br>  $(&quot;di","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":52,"path":"api/tags/JavaScript.json"}]}]}